{"version":3,"sources":["../src/org/locationtech/jts/util/NumberUtil.js","../src/java/lang/IllegalArgumentException.js","../src/java/lang/Double.js","../src/java/lang/Comparable.js","../src/java/lang/Cloneable.js","../src/java/util/Comparator.js","../src/java/io/Serializable.js","../src/java/lang/RuntimeException.js","../src/org/locationtech/jts/util/AssertionFailedException.js","../src/org/locationtech/jts/util/Assert.js","../src/org/locationtech/jts/geom/Coordinate.js","../src/java/util/Iterator.js","../src/java/util/Collection.js","../src/java/util/IndexOutOfBoundsException.js","../src/java/util/List.js","../src/java/util/NoSuchElementException.js","../src/java/util/OperationNotSupported.js","../src/java/util/ArrayList.js","../src/org/locationtech/jts/geom/CoordinateList.js","../src/org/locationtech/jts/geom/Envelope.js","../src/java/lang/Exception.js","../src/org/locationtech/jts/algorithm/NotRepresentableException.js","../src/org/locationtech/jts/geom/Location.js","../src/org/locationtech/jts/math/MathUtil.js","../src/java/lang/StringBuffer.js","../src/java/lang/Integer.js","../src/java/lang/Character.js","../src/org/locationtech/jts/math/DD.js","../src/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","../src/org/locationtech/jts/geom/CoordinateSequence.js","../src/java/lang/System.js","../src/org/locationtech/jts/algorithm/HCoordinate.js","../src/org/locationtech/jts/geom/CoordinateSequenceFactory.js","../src/org/locationtech/jts/geom/GeometryComponentFilter.js","../src/org/locationtech/jts/geom/Geometry.js","../src/org/locationtech/jts/geom/CoordinateFilter.js","../src/org/locationtech/jts/algorithm/BoundaryNodeRule.js","../src/org/locationtech/jts/geom/CoordinateArrays.js","../src/java/util/Map.js","../src/java/util/SortedMap.js","../src/java/util/Set.js","../src/java/util/HashSet.js","../src/java/util/TreeMap.js","../src/org/locationtech/jts/geom/Lineal.js","../src/java/util/SortedSet.js","../src/java/util/TreeSet.js","../src/java/util/Arrays.js","../src/org/locationtech/jts/geom/Dimension.js","../src/org/locationtech/jts/geom/GeometryFilter.js","../src/org/locationtech/jts/geom/CoordinateSequenceFilter.js","../src/org/locationtech/jts/geom/GeometryCollection.js","../src/org/locationtech/jts/geom/MultiLineString.js","../src/org/locationtech/jts/operation/BoundaryOp.js","../src/java/io/PrintStream.js","../src/java/io/StringReader.js","../src/java/text/DecimalFormat.js","../src/java/io/ByteArrayOutputStream.js","../src/java/io/IOException.js","../src/java/io/LineNumberReader.js","../src/org/locationtech/jts/util/StringUtil.js","../src/org/locationtech/jts/geom/CoordinateSequences.js","../src/org/locationtech/jts/geom/LineString.js","../src/org/locationtech/jts/geom/Puntal.js","../src/org/locationtech/jts/geom/Point.js","../src/org/locationtech/jts/geom/Polygonal.js","../src/org/locationtech/jts/geom/Polygon.js","../src/org/locationtech/jts/geom/MultiPoint.js","../src/org/locationtech/jts/geom/LinearRing.js","../src/org/locationtech/jts/geom/MultiPolygon.js","../src/org/locationtech/jts/geom/util/GeometryEditor.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","../src/Map.js","../src/java/util/HashMap.js","../src/org/locationtech/jts/geom/PrecisionModel.js","../src/org/locationtech/jts/geom/GeometryFactory.js","../src/org/locationtech/jts/io/WKTParser.js","../src/org/locationtech/jts/io/WKTWriter.js","../src/org/locationtech/jts/algorithm/LineIntersector.js","../src/org/locationtech/jts/algorithm/RobustLineIntersector.js","../src/org/locationtech/jts/algorithm/RobustDeterminant.js","../src/org/locationtech/jts/algorithm/RayCrossingCounter.js","../src/org/locationtech/jts/algorithm/CGAlgorithms.js","../src/org/locationtech/jts/geom/LineSegment.js","../src/org/locationtech/jts/geom/IntersectionMatrix.js","../src/org/locationtech/jts/algorithm/Centroid.js","../src/java/util/EmptyStackException.js","../src/java/util/Stack.js","../src/org/locationtech/jts/util/UniqueCoordinateArrayFilter.js","../src/org/locationtech/jts/algorithm/ConvexHull.js","../src/org/locationtech/jts/geom/util/GeometryTransformer.js","../src/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","../src/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","../src/org/locationtech/jts/precision/CommonBits.js","../src/org/locationtech/jts/precision/CommonBitsRemover.js","../src/org/locationtech/jts/geom/GeometryCollectionIterator.js","../src/org/locationtech/jts/algorithm/PointLocator.js","../src/org/locationtech/jts/noding/Octant.js","../src/org/locationtech/jts/noding/SegmentString.js","../src/org/locationtech/jts/noding/BasicSegmentString.js","../src/org/locationtech/jts/index/strtree/Boundable.js","../src/org/locationtech/jts/index/strtree/ItemBoundable.js","../src/org/locationtech/jts/util/PriorityQueue.js","../src/org/locationtech/jts/index/ItemVisitor.js","../src/org/locationtech/jts/index/SpatialIndex.js","../src/org/locationtech/jts/index/strtree/AbstractNode.js","../src/org/locationtech/jts/index/strtree/BoundablePair.js","../src/org/locationtech/jts/index/strtree/AbstractSTRtree.js","../src/org/locationtech/jts/index/strtree/ItemDistance.js","../src/org/locationtech/jts/index/strtree/STRtree.js","../src/org/locationtech/jts/noding/SegmentPointComparator.js","../src/org/locationtech/jts/noding/SegmentNode.js","../src/org/locationtech/jts/noding/SegmentNodeList.js","../src/org/locationtech/jts/noding/NodableSegmentString.js","../src/org/locationtech/jts/noding/NodedSegmentString.js","../src/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","../src/org/locationtech/jts/index/chain/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/Quadrant.js","../src/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","../src/org/locationtech/jts/noding/Noder.js","../src/org/locationtech/jts/noding/SinglePassNoder.js","../src/org/locationtech/jts/noding/MCIndexNoder.js","../src/org/locationtech/jts/geom/TopologyException.js","../src/org/locationtech/jts/noding/SegmentIntersector.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinder.js","../src/org/locationtech/jts/noding/FastNodingValidator.js","../src/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","../src/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","../src/org/locationtech/jts/geomgraph/Position.js","../src/org/locationtech/jts/geomgraph/TopologyLocation.js","../src/org/locationtech/jts/geomgraph/Label.js","../src/org/locationtech/jts/geomgraph/EdgeRing.js","../src/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","../src/org/locationtech/jts/geomgraph/GraphComponent.js","../src/org/locationtech/jts/geomgraph/Node.js","../src/org/locationtech/jts/geomgraph/NodeMap.js","../src/org/locationtech/jts/geomgraph/EdgeEnd.js","../src/org/locationtech/jts/geomgraph/DirectedEdge.js","../src/org/locationtech/jts/geomgraph/NodeFactory.js","../src/org/locationtech/jts/geomgraph/PlanarGraph.js","../src/org/locationtech/jts/operation/overlay/PolygonBuilder.js","../src/org/locationtech/jts/operation/overlay/LineBuilder.js","../src/org/locationtech/jts/operation/overlay/PointBuilder.js","../src/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","../src/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","../src/org/locationtech/jts/geomgraph/EdgeEndStar.js","../src/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","../src/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","../src/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","../src/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","../src/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","../src/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","../src/org/locationtech/jts/geom/util/LinearComponentExtracter.js","../src/org/locationtech/jts/index/ArrayListVisitor.js","../src/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","../src/org/locationtech/jts/geomgraph/EdgeIntersection.js","../src/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","../src/org/locationtech/jts/geomgraph/Depth.js","../src/org/locationtech/jts/geomgraph/Edge.js","../src/org/locationtech/jts/geomgraph/GeometryGraph.js","../src/org/locationtech/jts/operation/GeometryGraphOperation.js","../src/org/locationtech/jts/noding/OrientedCoordinateArray.js","../src/org/locationtech/jts/geomgraph/EdgeList.js","../src/org/locationtech/jts/operation/overlay/OverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","../src/org/locationtech/jts/algorithm/InteriorPointArea.js","../src/org/locationtech/jts/algorithm/InteriorPointLine.js","../src/org/locationtech/jts/algorithm/InteriorPointPoint.js","../src/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","../src/org/locationtech/jts/index/bintree/NodeBase.js","../src/org/locationtech/jts/index/bintree/Interval.js","../src/org/locationtech/jts/index/quadtree/DoubleBits.js","../src/org/locationtech/jts/index/bintree/Key.js","../src/org/locationtech/jts/index/bintree/Node.js","../src/org/locationtech/jts/index/quadtree/IntervalSize.js","../src/org/locationtech/jts/index/bintree/Root.js","../src/org/locationtech/jts/index/bintree/Bintree.js","../src/org/locationtech/jts/algorithm/PointInRing.js","../src/org/locationtech/jts/algorithm/MCPointInRing.js","../src/org/locationtech/jts/algorithm/Angle.js","../src/org/locationtech/jts/geom/Triangle.js","../src/org/locationtech/jts/algorithm/MinimumBoundingCircle.js","../src/org/locationtech/jts/algorithm/MinimumDiameter.js","../src/org/locationtech/jts/densify/Densifier.js","../src/org/locationtech/jts/edgegraph/HalfEdge.js","../src/org/locationtech/jts/edgegraph/MarkHalfEdge.js","../src/org/locationtech/jts/edgegraph/EdgeGraph.js","../src/org/locationtech/jts/dissolve/DissolveHalfEdge.js","../src/org/locationtech/jts/dissolve/DissolveEdgeGraph.js","../src/org/locationtech/jts/dissolve/LineDissolver.js","../src/org/locationtech/jts/index/quadtree/NodeBase.js","../src/org/locationtech/jts/index/quadtree/Key.js","../src/org/locationtech/jts/index/quadtree/Node.js","../src/org/locationtech/jts/index/quadtree/Root.js","../src/org/locationtech/jts/index/quadtree/Quadtree.js","../src/org/locationtech/jts/io/GeoJSONParser.js","../src/org/locationtech/jts/io/GeoJSONReader.js","../src/org/locationtech/jts/io/GeoJSONWriter.js","../src/org/locationtech/jts/io/WKTReader.js","../src/org/locationtech/jts/io/OL3Parser.js","../src/org/locationtech/jts/noding/ScaledNoder.js","../src/org/locationtech/jts/operation/IsSimpleOp.js","../src/org/locationtech/jts/operation/buffer/BufferParameters.js","../src/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","../src/java/util/LinkedList.js","../src/org/locationtech/jts/operation/buffer/BufferSubgraph.js","../src/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","../src/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","../src/org/locationtech/jts/noding/IntersectionAdder.js","../src/org/locationtech/jts/operation/buffer/BufferBuilder.js","../src/org/locationtech/jts/noding/NodingValidator.js","../src/org/locationtech/jts/noding/snapround/HotPixel.js","../src/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","../src/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","../src/org/locationtech/jts/operation/buffer/BufferOp.js","../src/org/locationtech/jts/geom/util/PolygonExtracter.js","../src/org/locationtech/jts/operation/distance/GeometryLocation.js","../src/org/locationtech/jts/geom/util/PointExtracter.js","../src/org/locationtech/jts/operation/distance/ConnectedElementLocationFilter.js","../src/org/locationtech/jts/operation/distance/DistanceOp.js","../src/org/locationtech/jts/operation/linemerge/EdgeString.js","../src/org/locationtech/jts/planargraph/GraphComponent.js","../src/org/locationtech/jts/planargraph/DirectedEdge.js","../src/org/locationtech/jts/operation/linemerge/LineMergeDirectedEdge.js","../src/org/locationtech/jts/planargraph/Edge.js","../src/org/locationtech/jts/planargraph/DirectedEdgeStar.js","../src/org/locationtech/jts/planargraph/Node.js","../src/org/locationtech/jts/operation/linemerge/LineMergeEdge.js","../src/org/locationtech/jts/planargraph/NodeMap.js","../src/org/locationtech/jts/planargraph/PlanarGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMergeGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMerger.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeDirectedEdge.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeEdge.js","../src/org/locationtech/jts/operation/valid/ConnectedInteriorTester.js","../src/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundle.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","../src/org/locationtech/jts/operation/relate/RelateNode.js","../src/org/locationtech/jts/operation/relate/RelateNodeFactory.js","../src/org/locationtech/jts/operation/relate/RelateNodeGraph.js","../src/org/locationtech/jts/operation/valid/ConsistentAreaTester.js","../src/org/locationtech/jts/operation/valid/IndexedNestedRingTester.js","../src/org/locationtech/jts/operation/valid/TopologyValidationError.js","../src/org/locationtech/jts/operation/valid/IsValidOp.js","../src/org/locationtech/jts/operation/polygonize/EdgeRing.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeGraph.js","../src/org/locationtech/jts/operation/polygonize/Polygonizer.js","../src/org/locationtech/jts/operation/relate/RelateComputer.js","../src/org/locationtech/jts/operation/predicate/RectangleContains.js","../src/org/locationtech/jts/algorithm/RectangleLineIntersector.js","../src/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","../src/org/locationtech/jts/operation/predicate/RectangleIntersects.js","../src/org/locationtech/jts/operation/relate/RelateOp.js","../src/org/locationtech/jts/geom/util/GeometryCombiner.js","../src/org/locationtech/jts/operation/union/CascadedPolygonUnion.js","../src/org/locationtech/jts/operation/union/PointGeometryUnion.js","../src/org/locationtech/jts/geom/util/GeometryExtracter.js","../src/org/locationtech/jts/operation/union/UnaryUnionOp.js","../src/org/locationtech/jts/operation/union/UnionInteracting.js","../src/org/locationtech/jts/operation/union/UnionOp.js","../src/org/locationtech/jts/precision/PrecisionReducerCoordinateOperation.js","../src/org/locationtech/jts/precision/GeometryPrecisionReducer.js","../src/org/locationtech/jts/simplify/DouglasPeuckerLineSimplifier.js","../src/org/locationtech/jts/simplify/DouglasPeuckerSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLineSegment.js","../src/org/locationtech/jts/simplify/TaggedLineString.js","../src/org/locationtech/jts/simplify/LineSegmentIndex.js","../src/org/locationtech/jts/simplify/TaggedLineStringSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLinesSimplifier.js","../src/org/locationtech/jts/simplify/TopologyPreservingSimplifier.js","../src/org/locationtech/jts/triangulate/SplitSegment.js","../src/org/locationtech/jts/triangulate/ConstraintSplitPointFinder.js","../src/org/locationtech/jts/triangulate/NonEncroachingSplitPointFinder.js","../src/org/locationtech/jts/triangulate/quadedge/TrianglePredicate.js","../src/org/locationtech/jts/triangulate/quadedge/Vertex.js","../src/org/locationtech/jts/triangulate/ConstraintVertex.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdge.js","../src/org/locationtech/jts/triangulate/IncrementalDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LastFoundQuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LocateFailureException.js","../src/org/locationtech/jts/triangulate/quadedge/TriangleVisitor.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.js","../src/org/locationtech/jts/triangulate/Segment.js","../src/org/locationtech/jts/index/kdtree/KdNodeVisitor.js","../src/org/locationtech/jts/index/kdtree/KdNode.js","../src/org/locationtech/jts/index/kdtree/KdTree.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/VoronoiDiagramBuilder.js","../src/Array.js","../src/Number.js","../src/Math.js","../src/extend.js","../src/inherits.js","../src/hasInterface.js","../src/java/util/Collections.js","../src/org/locationtech/jts/monkey.js","../src/jsts.js"],"names":["NumberUtil","IllegalArgumentException","Double","Comparable","Clonable","Comparator","Serializable","RuntimeException","message","name","stack","Error","call","this","AssertionFailedException","arguments","length","Assert","Coordinate","x","y","z","c","NULL_ORDINATE","DimensionalComparator","dimensionsToTest","Iterator","Collection","IndexOutOfBoundsException","List","NoSuchElementException","OperationNotSupported","ArrayList","array_","addAll","CoordinateList","apply","coord","ensureCapacity","add","allowRepeated","Envelope","minx","maxx","miny","maxy","init","p","env","p1","p2","x1","x2","y1","y2","Exception","NotRepresentableException","Location","MathUtil","StringBuffer","str","Integer","value","Character","DD","hi","lo","dd","parse","CGAlgorithmsDD","CoordinateSequence","System","HCoordinate","w","_x","_y","_w","q1","q2","px","py","pw","qx","qy","qw","CoordinateSequenceFactory","GeometryComponentFilter","Geometry","envelope","factory","SRID","userData","getSRID","CoordinateFilter","BoundaryNodeRule","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","CoordinateArrays","ForwardComparator","BidirectionalComparator","Map","SortedMap","Set","HashSet","colorOf","BLACK","color","parentOf","parent","setColor","leftOf","left","rightOf","right","TreeMap","root_","size_","Lineal","SortedSet","TreeSet","Arrays","Dimension","GeometryFilter","CoordinateSequenceFilter","GeometryCollection","geometries","hasNullElements","MultiLineString","lineStrings","BoundaryOp","geom","geomFact","bnRule","endpointMap","MOD2_BOUNDARY_RULE","getFactory","Counter","count","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","CoordinateSequences","LineString","points","Puntal","Point","coordinates","Polygonal","Polygon","shell","holes","createLinearRing","isEmpty","hasNonEmptyElements","MultiPoint","LinearRing","GeometryFactory","getCoordinateSequenceFactory","create","hasInterface","validateConstruction","MultiPolygon","polygons","GeometryEditor","isUserDataCopied","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","dimension","Array","Number","isInteger","size","fill","i","coordSeq","getDimension","getCoordinateCopy","CoordinateArraySequenceFactory","is","a","b","createCollection","proto","objectOnly","constructor","_keys","_values","_itp","sharedSize","prototype","forEach","set","sharedDelete","key","has","splice","sharedGet","undefined","list","Object","TypeError","indexOf","mapHas","sharedSet","push","sharedClear","sharedKeys","sharedIterator","sharedValues","mapEntries","itp","array","array2","done","v","k","sharedForEach","callback","context","it","entries","r","next","HashMap","map_","MapImpl","PrecisionModel","modelType","scale","FLOATING","Type","FIXED","setScale","pm","nameToTypeMap","put","precisionModel","coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","WKTParser","geometryFactory","WKTWriter","parser","LineIntersector","result","inputLines","map","intPt","intLineIndex","_isProper","pa","pb","RobustLineIntersector","RobustDeterminant","RayCrossingCounter","crossingCount","isPointOnSegment","CGAlgorithms","LineSegment","p0","ls","x0","y0","IntersectionMatrix","matrix","setAll","FALSE","elements","other","INTERIOR","BOUNDARY","EXTERIOR","Centroid","areaBasePt","triangleCent3","areasum2","cg3","lineCentSum","totalLength","ptCount","ptCentSum","EmptyStackException","Stack","UniqueCoordinateArrayFilter","treeSet","ConvexHull","geomFactory","inputPts","geometry","extractCoordinates","pts","filterCoordinates","RadialComparator","origin","GeometryTransformer","inputGeom","pruneEmptyGeometry","preserveGeometryCollectionType","preserveCollections","preserveType","LineStringSnapper","snapTolerance","srcPts","seg","allowSnappingToSourceVertices","_isClosed","srcLine","getCoordinates","isClosed","GeometrySnapper","srcGeom","SnapTransformer","snapPts","isSelfSnap","CommonBits","isFirst","commonMantissaBitsCount","commonBits","commonSignExp","CommonBitsRemover","commonCoord","ccFilter","CommonCoordinateFilter","commonBitsX","commonBitsY","Translater","trans","GeometryCollectionIterator","atStart","max","index","subcollectionIterator","getNumGeometries","PointLocator","boundaryRule","OGC_SFS_BOUNDARY_RULE","isIn","numBoundaries","Octant","SegmentString","BasicSegmentString","data","Boundable","ItemBoundable","bounds","item","PriorityQueue","_size","items","ItemVisitor","SpatialIndex","AbstractNode","childBoundables","level","BoundablePair","boundable1","boundable2","_distance","itemDistance","distance","AbstractSTRtree","root","built","itemBoundables","nodeCapacity","DEFAULT_NODE_CAPACITY","isTrue","IntersectsOp","ItemDistance","STRtree","STRtreeNode","SegmentPointComparator","SegmentNode","segString","segmentIndex","segmentOctant","_isInterior","equals2D","getCoordinate","SegmentNodeList","nodeMap","edge","NodeVertexIterator","nodeList","nodeIt","currNode","nextNode","currSegIndex","getEdge","iterator","readNextNode","NodableSegmentString","NodedSegmentString","MonotoneChainOverlapAction","tempEnv1","tempEnv2","overlapSeg1","overlapSeg2","MonotoneChain","start","end","id","Quadrant","MonotoneChainBuilder","Noder","SinglePassNoder","segInt","setSegmentIntersector","MCIndexNoder","monoChains","idCounter","nodedSegStrings","nOverlaps","si","SegmentOverlapAction","TopologyException","pt","msg","msgWithCoord","SegmentIntersector","InteriorIntersectionFinder","findAllIntersections","isCheckEndSegmentsOnly","li","interiorIntersection","intSegments","intersections","intersectionCount","keepIntersections","FastNodingValidator","segStrings","_isValid","EdgeNodingValidator","nv","edges","toSegmentStrings","GeometryCollectionMapper","mapOp","Position","TopologyLocation","location","on","ON","gl","LEFT","RIGHT","Label","elt","onLoc","lbl","geomIndex","NONE","setLocation","leftLoc","rightLoc","setLocations","EdgeRing","startDe","maxNodeDegree","label","ring","_isHole","computePoints","computeRing","MinimalEdgeRing","MaximalEdgeRing","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","Node","NodeMap","nodeFact","EdgeEnd","node","dx","dy","quadrant","DirectedEdge","_isForward","sym","nextMin","edgeRing","minEdgeRing","depth","isForward","n","getNumPoints","computeDirectedLabel","NodeFactory","PlanarGraph","nodes","edgeEndList","PolygonBuilder","shellList","LineBuilder","op","ptLocator","lineEdgesList","resultLineList","PointBuilder","resultPointList","PointOnGeometryLocator","SimplePointInAreaLocator","EdgeEndStar","edgeMap","edgeList","ptInAreaLocation","DirectedEdgeStar","resultAreaEdgeList","SCANNING_FOR_INCOMING","LINKING_TO_OUTGOING","OverlayNodeFactory","mce","chainIndex","SweepLineEvent","xValue","eventType","insertEvent","deleteEventIndex","obj","DELETE","INSERT","EdgeSetIntersector","_hasIntersection","hasProper","hasProperInterior","properIntersectionPoint","includeProper","recordIsolated","isSelfIntersection","numIntersections","numTests","bdyNodes","_isDone","isDoneWhenProperInt","SimpleMCSweepLineIntersector","events","IntervalRTreeNode","min","POSITIVE_INFINITY","NEGATIVE_INFINITY","NodeComparator","IntervalRTreeLeafNode","IntervalRTreeBranchNode","node1","node2","n1","n2","buildExtent","SortedPackedIntervalRTree","leaves","LinearComponentExtracter","lines","isForcedToLineString","ArrayListVisitor","IndexedPointInAreaLocator","g","IntervalIndexedGeometry","SegmentVisitor","counter","EdgeIntersection","dist","EdgeIntersectionList","MonotoneChainIndexer","MonotoneChainEdge","e","startIndex","env1","env2","mcb","getChainStartIndices","Depth","j","NULL_VALUE","Edge","eiList","_isIsolated","depthDelta","GeometryGraph","parentGeom","lineEdgeMap","boundaryNodeRule","useBoundaryDeterminationRule","argIndex","boundaryNodes","_hasTooFewPoints","invalidPoint","areaPtLocator","GeometryGraphOperation","resultPrecisionModel","arg","g0","setComputationPrecision","getPrecisionModel","g1","compareTo","OrientedCoordinateArray","_orientation","orientation","EdgeList","ocaMap","OverlayOp","resultGeom","graph","resultPolyList","SnapOverlayOp","cbr","g2","computeSnapTolerance","SnapIfNeededOverlayOp","InteriorPointArea","interiorPoint","maxWidth","SafeBisectorFinder","poly","centreY","hiY","MAX_VALUE","loY","getEnvelopeInternal","getMaxY","getMinY","avg","InteriorPointLine","centroid","minDistance","getCentroid","addInterior","addEndpoints","InteriorPointPoint","MonotoneChainSelectAction","selectedSegment","NodeBase","subnode","Interval","interval","DoubleBits","CVTFWD","NumW","Qty","Sign","Expo","Mant","Bin","Inf","ExW","isFinite","d","Math","pow","abs","Key","computeKey","centre","getMin","getMax","IntervalSize","Root","Bintree","minExtent","PointInRing","MCPointInRing","tree","crossings","buildIndex","MCSelecter","mcp","Angle","Triangle","MinimumBoundingCircle","input","extremalPts","radius","MinimumDiameter","isConvex","convexHullPts","minBaseSeg","minWidthPt","minPtIndex","minWidth","Densifier","distanceTolerance","DensifyTransformer","HalfEdge","_orig","_sym","_next","orig","MarkHalfEdge","_isMarked","EdgeGraph","vertexMap","DissolveHalfEdge","_isStart","DissolveEdgeGraph","LineDissolver","nodeEdgeStack","ringStartEdge","itemEnv","centrex","centrey","getMinX","getMaxX","Quadtree","GeoJSONParser","GeoJSONReader","GeoJSONWriter","WKTReader","p2c","OL3Parser","olReference","ol","ScaledNoder","noder","scaleFactor","offsetX","offsetY","isScaled","isIntegerPrecision","IsSimpleOp","isClosedEndpointsInInterior","nonSimpleLocation","isInBoundary","EndpointInfo","degree","BufferParameters","quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","endCapStyle","CAP_ROUND","joinStyle","JOIN_ROUND","mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","setQuadrantSegments","setEndCapStyle","setJoinStyle","setMitreLimit","RightmostEdgeFinder","minIndex","minCoord","minDe","orientedDe","LinkedList","BufferSubgraph","finder","dirEdgeList","rightMostCoord","BufferInputLineSimplifier","inputLine","distanceTol","isDeleted","angleOrientation","COUNTERCLOCKWISE","OffsetSegmentString","ptList","minimimVertexDistance","OffsetSegmentGenerator","maxCurveSegmentError","filletAngleQuantum","closingSegLengthFactor","segList","bufParams","s0","s1","s2","seg0","seg1","offset0","offset1","side","_hasNarrowConcaveAngle","PI","getQuadrantSegments","getJoinStyle","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","SubgraphDepthLocater","subgraphs","cga","DepthSegment","upwardSeg","leftDepth","OffsetCurveSetBuilder","curveBuilder","curveList","IntersectionAdder","hasInterior","numInteriorIntersections","numProperIntersections","BufferBuilder","workingPrecisionModel","workingNoder","NodingValidator","HotPixel","originalPt","ptScaled","p0Scaled","p1Scaled","corner","safeEnv","initCorners","MCIndexPointSnapper","HotPixelSnapAction","hotPixel","parentEdge","hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","interiorIntersections","MCIndexSnapRounder","pointSnapper","setPrecisionModel","getScale","BufferOp","argGeom","resultGeometry","saveException","PolygonExtracter","comps","GeometryLocation","component","segIndex","INSIDE_AREA","PointExtracter","ConnectedElementLocationFilter","locations","DistanceOp","terminateDistance","minDistanceLocation","EdgeString","directedEdges","from","to","edgeDirection","angle","directionPt","atan2","LineMergeDirectedEdge","dirEdge","de0","de1","setDirectedEdges","outEdges","sorted","deStar","LineMergeEdge","line","dirEdges","LineMergeGraph","LineMerger","mergedLineStrings","edgeStrings","PolygonizeDirectedEdge","PolygonizeEdge","ConnectedInteriorTester","geomGraph","disconnectedRingcoord","EdgeEndBuilder","EdgeEndBundle","edgeEnds","getDirectedCoordinate","getLabel","insert","EdgeEndBundleStar","RelateNode","RelateNodeFactory","RelateNodeGraph","ConsistentAreaTester","nodeGraph","IndexedNestedRingTester","rings","totalEnv","nestedPt","TopologyValidationError","errorType","copy","IsValidOp","parentGeometry","isSelfTouchingRingFormingHoleValid","validErr","deList","lowestEdge","ringPts","_isProcessed","_isIncludedSet","_isIncluded","EnvelopeComparator","PolygonizeGraph","Polygonizer","lineStringAdder","LineStringAdder","dangles","cutEdges","invalidRingLines","holeList","polyList","isCheckingRingsValid","extractOnlyPolygonal","RelateComputer","im","isolatedEdges","RectangleContains","rectEnv","rectangle","RectangleLineIntersector","diagUp0","diagUp1","diagDown0","diagDown1","ShortCircuitedGeometryVisitor","RectangleIntersects","EnvelopeIntersectsVisitor","_intersects","GeometryContainsPointVisitor","rectSeq","_containsPoint","getExteriorRing","getCoordinateSequence","RectangleIntersectsSegmentVisitor","rectIntersector","hasIntersection","RelateOp","_relate","GeometryCombiner","skipEmpty","inputGeoms","geoms","extractFactory","CascadedPolygonUnion","inputPolys","polys","PointGeometryUnion","pointGeom","otherGeom","GeometryExtracter","sortIndex","UnaryUnionOp","extract","UnionInteracting","interacts0","interacts1","UnionOp","PrecisionReducerCoordinateOperation","targetPM","removeCollapsed","GeometryPrecisionReducer","changePrecisionModel","isPointwise","DouglasPeuckerLineSimplifier","usePt","DouglasPeuckerSimplifier","isEnsureValidTopology","DPTransformer","TaggedLineSegment","TaggedLineString","parentLine","segs","resultSegs","minimumSize","LineSegmentIndex","LineSegmentVisitor","querySeg","TaggedLineStringSimplifier","inputIndex","outputIndex","linePts","TaggedLinesSimplifier","TopologyPreservingSimplifier","lineSimplifier","linestringMap","LineStringTransformer","LineStringMapBuilderFilter","tps","SplitSegment","segLen","splitPt","minimumLen","getLength","ConstraintSplitPointFinder","NonEncroachingSplitPointFinder","TrianglePredicate","Vertex","_p","_z","ConstraintVertex","_isOnConstraint","constraint","QuadEdge","_rot","vertex","IncrementalDelaunayTriangulator","subdiv","isUsingTolerance","getTolerance","QuadEdgeLocator","LastFoundQuadEdgeLocator","lastEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","QuadEdgeSubdivision","visitedKey","quadEdges","startingEdge","tolerance","edgeCoincidenceTolerance","frameVertex","frameEnv","locator","triEdges","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","TriangleCircumcentreVisitor","TriangleEdgesListVisitor","triList","TriangleVertexListVisitor","TriangleCoordinatesVisitor","coordList","triCoords","Segment","z1","z2","KdNodeVisitor","KdNode","KdTree","numberOfNodes","BestMatchVisitor","matchNode","matchDist","ConformingDelaunayTriangulator","initialVertices","segVertices","segments","incDel","convexHull","splitFinder","kdt","vertexFactory","computeAreaEnv","DelaunayTriangulationBuilder","siteCoords","ConformingDelaunayTriangulationBuilder","constraintLines","constraintVertexMap","VoronoiDiagramBuilder","clipEnv","diagramEnv","defineProperty","arrayLike","relativeStart","parseInt","relativeEnd","val","floor","parseFloat","isNaN","trunc","ceil","extend","target","source","hasOwnProperty","equalsWithTolerance","doubleToLongBits","longBitsToDouble","isInfinite","inherits","shouldNeverReachHere","assertion","equals","expectedValue","actualValue","ordinateIndex","X","Y","Z","o","CloneNotSupportedException","dz","sqrt","hashCode","Cloneable","f","o1","o2","c1","c2","compX","compare","compY","compZ","serialVersionUID","NaN","hasNext","remove","toArray","get","interfaces_","clear","element","oldElement","Iterator_","len","found","arrayList","arrayList_","position_","coll","isChanged","clone","coordArrayType","last","direction","prev","inc","getWidth","getHeight","otherEnvelope","isNull","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","h","transX","transY","expandBy","deltaX","deltaY","setToNull","q","minq","maxq","minp","maxp","toLocationSymbol","locationValue","log10","ln","log","LOG_10","v1","v2","v3","v4","clamp","wrap","average","append","setCharAt","substr","toString","intValue","isWhitespace","toUpperCase","insertDecimalPoint","magnitude","mag","TEN","divide","gt","lt","ONE","multiply","decimalPointPos","buf","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","negate","isZero","le","selfDivide","yhi","ylo","hc","tc","hy","ty","C","U","u","SPLIT","zhi","zlo","createNaN","exp","s","selfMultiply","sqr","reciprocal","fhi","flo","plus5","ge","isNegative","ax","axdd","diffSq","d2","H","S","T","t","hx","tx","ex","toStandardNotation","toSciNotation","specialStr","getSpecialNumberString","sigDigits","extractSignificantDigits","num","charAt","stringOfChar","numZeroes","zeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","substring","digitsWithDecimal","isPositive","strlen","signCh","numBeforeDec","ch","isDigit","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","xMag","xApprox","TWO_PI","PI_2","E","EPS","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","selfSubtract","signum","signOfDet2x2","det","intersection","denom1","denom2","denom","numx1","numx2","numx","fracP","doubleValue","numy1","numy2","numy","fracQ","pc","detsum","detleft","detright","errbound","DP_SAFE_EPSILON","M","arraycopy","src","srcPos","dest","destPos","getProperty","getX","getY","xInt","yInt","getSortIndex","SORTINDEX_GEOMETRYCOLLECTION","equalsTopo","equalsExact","geometryChangedFilter","norm","compareToSameClass","comp","toGeometry","normalize","computeEnvelopeInternal","aElement","bElement","comparison","SORTINDEX_MULTIPOINT","SORTINDEX_MULTILINESTRING","SORTINDEX_MULTIPOLYGON","SORTINDEX_POINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_POLYGON","geometryChangedAction","boundaryCount","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","isRing","ptNotInList","testPts","testPt","scroll","firstCoordinate","newCoordinates","coord1","coord2","coordinateComparator","toCoordinateArray","hasRepeatedPoints","removeRepeatedPoints","reverse","mid","tmp","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","atLeastNCoordinatesOrNothing","coordinate","increasingDirection","minCoordinate","npts","extractPts","iPts","forwardComp","isEqualRev","dir1","dir2","i1","i2","comparePt","values","entrySet","contains","javascript","util","hashSet","hashSet_","RED","cmp","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","l","treeSet_","sort","comparator","slice","concat","asList","toDimensionSymbol","dimensionValue","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","A","SYM_A","toDimensionValue","dimensionSymbol","seq","childCoordinates","area","getArea","isEquivalentClass","otherCollection","getBoundaryDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","thisGeom","getGeometryN","holeComp","filter","isDone","isGeometryChanged","geometryChanged","checkNotGeometryCollection","nLines","revLines","createMultiLineString","getBoundary","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createPoint","createMultiPointFromCoords","boundaryLineString","boundaryMultiLineString","closedEndpointOnBoundary","getStartPoint","createMultiPoint","getEndPoint","addEndpoint","getCoordinateN","entry","getValue","valence","getKey","bop","chars","String","getStackTrace","os","ps","printStackTrace","stackTrace","stringReader","lineNumberReader","readLine","NEWLINE","split","separator","separatorlen","tokenList","tmpString","pos","token","res","SIMPLE_ORDINATE_FORMAT","format","spaces","copyCoord","minDim","dim","setOrdinate","getOrdinate","isEqual","cs1","cs2","cs1Size","cs2Size","fact","newseq","swap","cs","ensureValidRing","createClosedRing","expandEnvelope","isSimple","otherLineString","equal","getPointN","computeLength","revLine","createLineString","point","shellCoordinates","signedArea","getNumInteriorRing","prevX","prevY","xChanged","yChanged","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","isCCW","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","rev","MINIMUM_VALID_SIZE","createMultiPolygon","allRings","polygon","allRingsArray","operation","editInternal","setUserData","getUserData","editGeometryCollection","editPolygon","edit","getClass","getName","collection","collectionForType","newPolygon","createPolygon","hole","coords","editCoordinates","cloneCoordinates","strBuf","instance","instanceObject","MapPolyfill","MapInterface","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","FLOATING_SINGLE","description","floatSingleVal","round","makePrecise","maxSigDigits","mostPrecise","pm1","pm2","maximumPreciseValue","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","isGeometryCollectionOrDerived","toGeometryArray","geom0","isCollection","toPolygonArray","toLineStringArray","toPointArray","editor","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","regExes","wkt","type","replace","matches","typeStr","exec","search","emptyTypeStr","toLowerCase","extractGeometry","getGeometryType","wktType","multipoint","join","linestring","linearring","multilinestring","multipolygon","trim","components","trimParens","parenComma","doubleParenComma","wktArray","read","write","intIndex","computeIntLineIndex","catBuf","isEndPoint","isCollinear","p3","p4","computeIntersect","dist0","getEdgeDistance","dist1","isInteriorIntersection","inputLineIndex","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","toLineString","getTopologySummary","ptIndex","pdx","pdy","nonRobustComputeEdgeDistance","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","POINT_INTERSECTION","env0","computeIntersection","n3","n4","normPt","smallestInAbsValue","nearestEndpoint","intersectionWithNormalization","isInSegmentEnvelopes","x3","x4","xabs","intPtDD","out","println","normalizeToEnvCentre","safeHCoordinateIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","collinear","computeCollinearIntersection","nearestPt","minDist","distancePointLine","sign","xIntSign","getLocation","locatePointInRing","countSegment","isOnSegment","distanceLineLine","B","D","noIntersection","r_num","s_num","isPointInRing","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","isOnLine","lineIntersector","CLOCKWISE","STRAIGHT","orient0","orient1","getIntersection","projectionFactor","pf0","pf1","newp0","project","newp1","midPoint","closestPt","close00","closestPoint","close01","close10","close11","factor","comp0","temp","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","offsetx","offsety","setCoordinates","inputPt","segFrac","bits0","java","lang","hash0","bits1","hash1","isDisjoint","hasPointInCommon","dimensionSymbols","row","col","column","minimumDimensionSymbols","setAtLeast","minimumDimensionValue","dimensionOfGeometryA","dimensionOfGeometryB","isTouches","ai","bi","requiredDimensionSymbols","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","m","basePt","lineLen","segmentLen","midx","midy","addPoint","isPositiveArea","addTriangle","addLineSegments","cent","setBasePoint","centroid3","area2","addShell","addHole","pop","peek","empty","octPts","computeOctPts","closeRing","cleanRing","linearRing","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","polyPts","computeOctRing","reducedSet","reducedPts","padArray3","reduce","sortedPts","preSort","cHS","grahamScan","cH","lineOrPolygon","pad","polarCompare","dxp","dyp","dxq","dyq","orient","oq","transformCoordinates","isAllValidLinearRings","transformLinearRing","buildGeometry","transGeomList","transformGeom","transformLineString","transformPoint","transformPolygon","transform","transformMultiPoint","transformMultiLineString","transformMultiPolygon","transformGeometryCollection","seqSize","srcCoords","srcPt","snapVert","findSnapForVertex","snapVertices","snapSegments","newPts","distinctPtCount","snapPt","findSegmentIndexToSnap","snapIndex","snapGeom","extractTargetCoordinates","snapTrans","cleanResult","snappedGeom","buffer","minSegLen","computeMinimumSegmentLength","snapTol","ptSet","snap","snapper0","snapTo","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","getType","fixedSnapTol","minDimension","SNAP_PRECISION_FACTOR","snapToSelf","snapper","setAllowSnappingToSourceVertices","snapLine","numBits","signExpBits","numSignExp","numCommonMostSigMantissaBits","zeroLowerBits","bits","numStr","Long","toBinaryString","padStr","bitStr","getBit","mask","nBits","invMask","zeroed","num1","num2","invCoord","getCommonCoordinate","getCommon","xp","yp","isAtomic","UnsupportedOperationException","shellLoc","locateInPolygonRing","holeLoc","ptCoord","locate","loc","updateLocationInfo","locateInternal","ml","mpoly","geomi","computeLocation","octant","adx","ady","minItem","reorder","child","childBoundable","computeBounds","Collections","alen","priQ","isComp1","isComposite","isComp2","expand","nd","bndComposite","bndOther","children","getChildBoundables","bp","getDistance","isLeaves","getBounds","build","childToRemove","getItem","valuesTree","itemsTree","valuesTreeForNode","valuesTreeForChild","boundables","boundablesAtLevel","top","getLevel","boundable","searchBounds","getIntersectsOp","query","visitor","visitItem","createNode","createHigherLevels","removeItem","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","lastNode","getNodeCapacity","addChildBoundable","compareDoubles","item1","item2","verticalSlices","createParentBoundablesFromVerticalSlice","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","yComparator","minLeafCount","xComparator","createParentBoundablesFromVerticalSlices","itemDist","getRoot","nearestNeighbour","initBndPair","maxDistance","distanceLowerBound","minPair","bndPair","poll","currentDistance","expandToQueue","getBoundable","bnd","centreX","aBounds","bBounds","relativeSign","xSign","ySign","compareValue","compareSign0","compareSign1","print","maxSegmentIndex","eiPrev","ei","addEdgeCoordinates","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","isInterior","addCollapsedNodes","newEdge","createSplitEdge","collapsedVertexIndex","numVerticesBetween","isCollapsed","findCollapseIndex","maxSegIndex","ipt","getData","eiNew","getSegmentOctant","splitEdges","edgePts","split0","pt0","splitn","splitnPts","ptn","safeOctant","addIntersectionNode","addIntersection","normalizedSegmentIndex","nextSegIndex","nextPt","getIntersectionNum","getNodedSubstrings","resultEdgelist","ss","getNodeList","addSplitEdges","mc1","start1","mc2","start2","getLineSegment","overlap","start0","end0","mcs","select","computeSelect","mc","mco","computeOverlapsInternal","end1","p00","p01","p10","p11","mid0","mid1","isNorthern","quad","NE","NW","isOpposite","quad1","quad2","diff","commonHalfPlane","isInHalfPlane","halfPlane","SE","SW","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","mcList","segStr","segChains","setId","getEnvelope","inputSegStrings","intersectChains","overlapAction","queryChain","overlapChains","testChain","getId","computeOverlaps","ss1","getContext","ss2","processIntersections","e0","segIndex0","e1","segIndex1","isEndSegPresent","isEndSegment","createAllIntersectionsFinder","setFindAllIntersections","createAnyIntersectionFinder","createIntersectionCounter","setKeepIntersections","checkInteriorIntersections","getIntersections","execute","computeNodes","getErrorMessage","getInteriorIntersection","intSegs","getIntersectionSegments","computeIntersections","isValid","checkValid","validator","mapped","mapper","opposite","position","locValue","newLoc","posIndex","locIndex","setAllLocations","setAllLocationsIfNull","isLine","merge","flip","isArea","isAnyNull","isEqualOnSide","allPositionsEqual","toLineLabel","lineLabel","getGeometryCount","de","isFirstEdge","getEdgeRing","mergeLabel","addPoints","setEdgeRing","getNext","getNode","getEdges","getOutgoingDegree","setInResult","getLinearRing","containsPoint","computeMaxNodeDegree","deLabel","holeLR","er","setMinEdgeRing","getNextMin","minEdgeRings","getMinEdgeRing","minEr","linkMinimalDirectedEdges","isVisited","isInResult","isCovered","computeIM","label2","eltIndex","nLoc","setLabel","onLocation","computeMergedLocation","thisLoc","setNode","addNode","className","lastDotPos","lastIndexOf","compareDirection","depthVal","isInteriorAreaEdge","getDepthDelta","isExteriorIfArea0","isExteriorIfArea1","printReverse","setVisited","directionFactor","oppositePos","delta","oppositeDepth","setDepth","depthFactor","currLocation","nextLocation","find","nodeit","linkResultDirectedEdges","linkAllDirectedEdges","ep0","ep1","eCoord","matchInSameDirection","getEdgeEnds","ee","edgesToAdd","de2","setSym","edgeRings","freeHoleList","isHole","toPolygon","getShell","findEdgeRingContaining","setShell","maxEdgeRings","getMaxNodeDegree","linkDirectedEdgesForMinimalEdgeRings","buildMinimalRings","findShell","placePolygonHoles","computePolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","getNodes","buildMaximalEdgeRings","buildMinimalEdgeRings","sortShellsAndHoles","placeFreeHoles","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","targetIndex","getArgGeometry","findCoveredLineEdges","collectLines","buildLines","isLineEdge","isResultOfOp","setVisitedEdge","isCoveredSet","isCoveredByA","setCovered","edgesList","isIsolated","labelIsolatedLine","getSym","INTERSECTION","isCoveredByLA","isIncidentEdgeInResult","getDegree","filterCoveredNodeToPoint","extractNonCoveredResultNodes","containsPointInPolygon","iNextCW","startLoc","currLoc","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","startLabel","eSearch","getGeometry","computeLabel","propagateSideLabels","hasDimensionalCollapseEdge","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","setNext","insertEdgeEnd","deLast","quad0","getQuadrant","getDy","nodeLabel","prevOut","firstIn","edgeIndex","findIndex","startDepth","getDepth","targetLastDepth","nextDepth","computeDepths","lastDepth","endIndex","currDepth","nextDe","setEdgeDepths","setNextMin","computeLabelling","eLabel","eLoc","computeIntersectsForChain","pe","ev","isAdjacentSegments","isIntersection","isBoundaryPointInternal","bdyNodes0","bdyNodes1","setIsolated","isTrivialIntersection","isProper","addIntersections","isBoundaryPoint","isDelete","getInsertEvent","setDeleteEventIndex","prepareEvents","isInsert","processOverlaps","getDeleteEventIndex","edges0","edges1","addEdges","testAllSegments","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","getObject","ev1","isSameLabel","addEdge","queryMin","queryMax","mid2","buildLevel","buildTree","buildRoot","getLines","forceToLineString","rcc","addLine","getItems","chainIndex0","chainIndex1","depthValue","minDepth","newValue","depthAtLocation","newe","isEqualForward","isEqualReverse","iRev","updateIM","setAtLeastIfValid","determineBoundary","computeRingSelfNodes","computeSelfNodes","isDoneIfProperInt","setIsDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","edgelist","setBoundaryNodes","getBoundaryNodes","insertPoint","addPolygonRing","insertEdge","insertBoundaryPoint","isBoundaryNode","lr","cwLeft","cwRight","eiIt","addSelfIntersectionNode","addPolygon","addLineString","addCollection","findEdge","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","edgeColl","matchEdge","existingEdge","findEqualEdge","existingLabel","labelToMerge","isPointwiseEqual","opcode","createEmptyResult","mergeSymLabels","newEdges","getCollapsedEdge","overlayOpCode","computeOverlay","insertUniqueEdge","copyPoints","computeEdgeIntersections","baseSplitEdges","computeSplitEdges","insertUniqueEdges","computeLabelsFromDepths","replaceCollapsedEdges","labelIncompleteNodes","findResultAreaEdges","cancelDuplicateResultEdges","polyBuilder","getPolygons","lineBuilder","pointBuilder","computeGeometry","getNodeIterator","graphNode","newNode","getDelta","toLine","updateNodeLabelling","nodeCount","ni","labelIncompleteNode","updateLabelling","overlayOp","geom1","gov","geomOv","getResultGeometry","isGeometryCollection","MapOp","symDifference","SYMDIFFERENCE","resultDimension","dim0","dim1","UNION","DIFFERENCE","difference","loc0","loc1","remGeom","removeCommonBits","addCommonBits","prepGeom","prepareResult","union","isSuccess","savedException","width","bisector","horizontalBisector","widestIntersection","widestGeometry","bisectY","getBisectorY","process","updateInterval","hasChildren","hasItems","addAllItems","subSize","resultItems","isSearchMatch","addAllItemsFromOverlapping","itemInterval","isPrunable","maxSubDepth","sqd","nodeSize","getSubnodeIndex","subnodeIndex","overlaps","exponent","powerOf2","computeLevel","computeInterval","searchInterval","childNode","createSubnode","getSubnode","subInt","getInterval","createExpanded","addInterval","expandInt","largerNode","isZeroWidth","maxAbs","scaledInterval","MIN_BINARY_EXPONENT","insertContained","isZeroArea","collectStats","insertInterval","ensureExtent","foundItems","del","mcEnv","rayEnv","mcSelecter","testMonotoneChain","testLineSegment","toDegrees","radians","PI_TIMES_2","isAcute","dx0","dy0","dotprod","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","a1","a2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","PI_OVER_2","PI_OVER_4","interpolateZ","longestSideLength","circumcentre","area3D","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","ccx","ccy","perpendicularBisector","l1","l2","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","compute","hullPts","lowestPoint","Q","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","computeCirclePoints","computeCentre","centrePoint","minSin","minAngPt","minAng","ang","computeMinimumDiameter","convexGeom","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","computeWidthConvex","getConvexHull","maxPerpDistance","distancePerpendicular","nextPerpDistance","maxIndex","nextIndex","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","lineIntersection","getMinimumDiameter","getDiameter","getMinimumRectangle","densifyPoints","precModel","densifiedSegCount","densifiedSegLen","segFract","pointAlong","densify","densifier","setDistanceTolerance","roughGeom","createValidArea","roughAreaGeom","oNext","insertAfter","ecmp","ePrev","save","quadrant2","compareAngularDirection","isMarked","setMarkBoth","setMark","markBoth","mark","eAdj","eAdjDest","createEdge","isValidEdge","eSame","isStart","computeResult","eNode","prevNode","stackEdges","eStartRing","eNext","eStart","updateRingStartEdge","buildRing","getVertexEdges","buildLine","lineString","doneStart","setStart","dissolve","getResult","visitItems","visit","computeQuadLevel","quadSize","dMax","sqEnv","insertNode","addEnv","expandEnv","isZeroX","isZeroY","insertEnv","posEnv","delX","delY","geometryTypes","json","JSON","feature","bbox","featureCollection","features","sub","geoJson","shellGeoJson","holeGeoJson","reducePrecision","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","getLinearRings","multiPoint","getPoints","multiLineString","getLineStrings","multiPolygon","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","geometryCollection","rescale","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","intSegStrings","mp","isSimpleLinearGeometry","endPoints","getEdgeIterator","getMaximumSegmentIndex","eiInfo","hasProperIntersection","getProperIntersectionPoint","hasNonEndpointIntersection","hasClosedEndpointIntersection","getEdgeIntersectionList","isSimpleMultiPoint","isSimplePolygonal","isSimpleGeometryCollection","computeSimple","quadSegs","JOIN_BEVEL","JOIN_MITRE","isSingleSided","bufferDistanceError","alpha","cos","CAP_FLAT","CAP_SQUARE","getRightmostSideOfSegment","checkForRightmostCoordinate","pPrev","pNext","usePrev","star","getRightmostEdge","findRightmostEdgeAtNode","findRightmostEdgeAtVertex","rightmostSide","getRightmostSide","addLast","removeFirst","shift","startEdge","copySymDepths","outsideDepth","clearVisitedEdges","addReachable","nodesVisited","nodeQueue","startNode","computeNodeDepth","adjNode","edgeEnv","nodeStack","symNode","i0","isConcave","isShallow","isShallowSampled","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isDeletable","isAngleToSimplify","NUM_PTS_TO_CHECK","deleteShallowConcavities","collapseLine","simplify","simp","INIT","KEEP","COORDINATE_ARRAY_TYPE","bufPt","isRedundant","addPt","lastPt","ptDist","startPt","last2Pt","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","offsetL","offsetR","getEndCapStyle","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","isMitreWithinLimit","mitreRatio","getMitreLimit","addLimitedMitreJoin","startAngle","endAngle","OFFSET_SEGMENT_SEPARATION_FACTOR","addMitreJoin","addBevelJoin","addFilletCorner","addPts","ang0","angDiff","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","pointAlongOffset","bevelEndRight","offset","sideSign","totalAngle","nSegs","initAngle","currAngleInc","currAngle","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","setMinimumVertexDistance","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","numInt","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","distTol","simplifyTolerance","addSegments","simp2","initSideSegments","addFirstSegment","addNextSegment","simp1","addLastSegment","addLineEndCap","createCircle","createSquare","computeSingleSidedBufferCurve","computeLineBufferCurve","lineCoord","bufDistance","getSimplifyFactor","getLineCurve","copyCoordinates","computeRingBufferCurve","stabbingRayLeftPt","stabbedSegments","bsg","findStabbedSegments","getDirectedEdges","isHorizontal","ds","minX","maxX","orientIndex","compare0","curve","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","triangleCoord","bufferDistance","tri","distToCentre","getBufferParameters","cwLeftLoc","cwRightLoc","getRingCurve","ringCoord","isTriangleErodedCompletely","envMinDimension","mergeDelta","existingDelta","newDelta","setDepthDelta","subgraphList","processedGraphs","subgraph","getRightmostCoordinate","locater","computeDepth","findResultEdges","reverseOrder","emptyGeom","curveSetBuilder","bufferSegStrList","getCurves","createEmptyResultGeometry","computeNodedEdges","createSubgraphs","buildSubgraphs","getNoder","oldLabel","lLoc","rLoc","convertSegStrings","checkEndPtVertexIntersections","ss0","pts0","hasInteriorIntersection","checkCollapses","checkCollapse","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","intersectsScaled","copyScaled","pScaled","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsLeft","intersectsBottom","pixelEnv","getSafeEnvelope","hotPixelSnapAction","isNodeAdded","addSnappedNode","inputSegmentStrings","resultSegStrings","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","getInteriorIntersections","edge0","getIndex","snapRound","fixedPM","bufBuilder","setWorkingPrecisionModel","setNoder","precDigits","MAX_PRECISION_DIGITS","bufferReducedPrecision","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","bufferFixedPrecision","bufferOriginalPrecision","argPM","bufferOp","gBuf","geomBuf","bufOp","params","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","CAP_BUTT","singletonList","getLocations","locPtPoly","computeContainmentDistance","polyGeomIndex","locationsIndex","insideLocs","locs","ptLoc","locGeom","computeMinDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistanceLinesPoints","computeMinDistancePoints","nearestPts","computeFacetDistance","coord0","segClosestPoint","line0","line1","closestPoints","points0","points1","pt1","distOp","isWithinDistance","nearestPoints","forwardDirectedEdges","reverseDirectedEdges","coordinateList","directedEdge","getEdgeDirection","getLine","getComponentWithVisitedState","visitedState","visited","setMarked","marked","toEdges","getToNode","getOutEdges","setEdge","getFromNode","addOutEdge","fromNode","sortEdges","modi","getEdgesBetween","node0","commonEdges","retainAll","nodesFound","nodeIterator","getDirEdge","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","findNode","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringStartingWith","edgeIterator","buildEdgeStringsForObviousStartNodes","buildEdgeStringsForIsolatedLoops","edgeString","current","buildEdgeStringsForUnprocessedNodes","findDifferentPoint","findEdgeInSameDirection","findEdgeEnd","intDe","visitLinkedDirectedEdges","visitInteriorRing","setInteriorEdgesInResult","buildEdgeRings","visitShellInteriors","hasUnvisitedShellEdge","eiCurr","eiNext","computeEdgeEnds","createEdgeEndForPrev","createEdgeEndForNext","foundInterior","computeLabelSide","computeLabelOn","computeLabelSides","esb","eb","computeIntersectionNodes","copyNodesAndLabels","eeBuilder","eeList","insertEdgeEnds","edgeIt","setLabelBoundary","isAreaLabelsConsistent","eeb","intersector","isNodeEdgeAreaLabelsConsistent","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","findPtNotNode","isInside","errMsg","locStr","getMessage","ERROR","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","checkInvalidCoordinates","nestedTester","innerHole","isNonNested","getNestedPoint","cat","isValidArea","isNodeConsistentArea","hasDuplicateRings","getInvalidPoint","shellPts","holePts","shellPt","insideHole","holePt","insideShell","checkNoSelfIntersectingRing","cit","isInteriorsConnected","nodeSet","pir","outside","hasTooFewPoints","checkClosedRing","checkTooFewPoints","checkNoSelfIntersectingRings","checkClosedRings","checkConsistentArea","checkHolesInShell","checkHolesNotNested","checkConnectedInteriors","checkShellsNotNested","polyShell","insidePolyShell","badNestedPt","checkShellInsideHole","checkShellNotNested","testCoords","searchEdge","isValidOp","getRing","startDE","setRing","isInRing","hasShell","holeER","isIncluded","adjRing","isOuterHole","getOuterHole","adjShell","isIncludedSet","setIncluded","isProcessed","findDirEdgesInRing","minShellEnv","tryShellRing","tryShellEnv","obj0","obj1","r0","r1","computeDepthParity","iNode","computeNextCWEdges","endPt","nStart","nEnd","findLabeledEdgeRings","cutLines","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","findEdgeRing","ringEdges","intNodes","findIntersectionNodes","computeNextCCWEdges","nodesToRemove","findNodesOfDegree","dangleLines","deleteAllEdges","nodeOutEdges","toNode","getDegreeNonDeleted","edgeRingStarts","currLabel","prevDE","outDE","firstOutDE","prevInDE","inDE","polygonize","validEdgeRingList","invalidRingList","getLineString","deleteDangles","deleteCutEdges","getEdgeRings","findValidRings","findShellsAndHoles","assignHolesToShells","includeAll","findDisjointShells","extractPolygons","computeHole","findOuterShells","outerHoleER","setProcessed","getPolygon","assignHoleToShell","isMoreToScan","updateIncluded","dimA","dimB","hasProperInteriorIntersection","thisIndex","labelIsolatedEdge","computeDisjointIM","labelIsolatedNodes","computeProperIntersectionIM","ee0","ee1","labelNodeEdges","labelIsolatedEdges","labelIsolatedNode","updateIMFromEdges","ga","gb","isPointContainedInBoundary","isLineStringContainedInBoundary","isContainedInBoundary","isLineSegmentContainedInBoundary","rc","segEnv","isSegUpwards","applyTo","ecpVisitor","riVisitor","rp","elementEnv","rectPt","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","isRectangle","relate","isCovers","isIntersects","touches","within","coveredBy","relOp","getIntersectionMatrix","intersectionPattern","relateWithCheck","isOverlaps","disjoint","crosses","isCrosses","isContains","elems","elemGeom","extractElements","combine","combiner","createList","obj2","geomTree","unionTree","disjointGeoms","intersectingGeoms","elem","g0Env","g1Env","combo","unionActual","commonEnv","unionUsingEnvelopeIntersection","STRTREE_NODE_CAPACITY","itemTree","unionAll","binaryUnion","unionSafe","unionOptimized","restrictToPolygons","reduceToGeometries","common","disjointPolys","g0Int","extractByEnvelope","g1Int","overallUnion","gColl","exteriorCoords","ptComp","unioner","unionPoints","ptGeom","unionNoOpt","unionLines","lineGeom","unionPolygons","unionLA","unionWithNull","interacts","isInteracting","extractedGeoms","computeInteracting","elem0","interactsWithAny","elem1","int0","int1","disjoint0","disjoint1","uue","reducedCoords","noRepeatedCoordList","noRepeatedCoords","minLength","collapsedCoords","geomToBuffer","changePM","bufGeom","finalGeom","geomEdit","newFactory","createFactory","finalRemoveCollapsed","reduceGeom","newPM","geomEditor","createEditor","inputFactory","reducePW","reducePointwise","fixPolygonalTopology","reducer","setPointwise","simplifySection","tss","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","resultSegsSize","getSegments","itemsFound","newSeg","sectionIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","getSegment","addToResult","isValidToSimplify","getResultSize","getMinimumSize","worstCaseSize","furthestPtIndex","findFurthestPoint","hasBadIntersection","flatten","querySegs","maxDist","midPt","getParentCoordinates","isInLineSection","getParent","taggedLines","tlss","taggedLine","createCoordinateSequence","getResultCoordinates","minSize","minFrac","pointAlongReverse","actualLen","getConstrainedLength","minLen","encroachPt","lineSeg","midPtLen","splitSeg","projPt","projectedSplitPoint","nonEncroachDiam","maxSplitLen","setMinimumLength","splitAt","getSplitPoint","triArea","isInCircleDDNormalized","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","isInCircle","checkRobustInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","isInCircleDDFast","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","pRadiusDiff","isInCircleNormalized","triAreaDDSlow","isInCircleRobust","t1","t2","cab","cbc","hcc","nre","err","getZ","xm","ym","zm","sa","crossProduct","BEHIND","magn","BEYOND","ORIGIN","DESTINATION","BETWEEN","circleCenter","edgeLength","el","ptLen","pz","isOnConstraint","qe","equalsOriented","invRot","rot","setOrig","makeEdge","q0","q3","base","setDest","oPrev","lNext","beta","t3","t4","connect","isVertexOfEdge","isOnEdge","delete","lPrev","vertices","insertSite","isLive","locateFromEdge","includeFrame","visitTriangles","getTriangleVertices","cellPts","startQE","cellPoly","ea","ec","leftTri","getTriangleEdges","rightTri","vLeftTriOther","isFrameVertex","vRightTriOther","triVisitor","edgeStack","visitedEdges","fetchTriangleToVisit","getTriangles","vd","curr","edgeCount","isFrame","isFrameEdge","getPrimaryEdges","visitedVertices","qd","priQE","getPrimary","eSym","eRot","eRotSym","iter","maxIter","toLineSegment","dPrev","cells","getVertexUniqueEdges","getVoronoiCellPolygon","vorCells","getVoronoiCellPolygons","triPtsList","getTriangleCoordinates","tris","triPt","locEdge","triEdge","ccVertex","_left","_right","findBestMatchNode","increment","insertExact","queryEnv","_arguments","queryNode","_this","currentNode","odd","discriminant","searchLeft","searchRight","getLeft","getRight","queryEnvelope","leafNode","isOddLevel","isLessThan","isInTolerance","setLeft","setRight","toCoordinates","kdnodes","includeRepeated","getCount","update","addConstraintVertices","splits","enforceGabriel","MAX_SPLIT_ITER","getPointArray","hull","computeConvexHull","insertSites","getStart","getEnd","segRadius","closestNonGabriel","testRadius","testDist","segsToInsert","newSegments","segsToRemove","findNonGabrielPoint","findSplitPoint","splitVertex","createVertex","getStartX","getStartY","getStartZ","getEndX","getEndY","getEndZ","removeAll","setOnConstraint","vertexEnv","computeVertexEnvelope","allPointsEnv","computeBoundingBox","setLocator","kdnode","isRepeated","snappedV","siteEnv","toVertices","triangulator","extractUniqueCoordinates","unique","coordsCopy","verts","containsKey","createVertices","createConstraintSegments","sites","createSiteVertices","cdt","setConstraints","formInitialDelaunay","enforceConstraints","getSubdivision","constraintSegs","getVoronoiDiagram","clipGeometryCollection","clipPoly","clipped","isEquals","args","_len","_key","centPt","interiorPt","getInteriorPoint","writer","toText","envDist","version"],"mappings":"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","file":"dist/jsts.min.js","sourcesContent":["import extend from '../../../../extend';\nexport default function NumberUtil() {}\nextend(NumberUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NumberUtil;\n\t}\n});\nNumberUtil.equalsWithTolerance = function (x1, x2, tolerance) {\n\treturn Math.abs(x1 - x2) <= tolerance;\n};\n","export default function IllegalArgumentException () {}\n","export default function Double () {}\nDouble.isNaN = n => Number.isNaN(n)\nDouble.doubleToLongBits = n => n\nDouble.longBitsToDouble = n => n\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\n","export default function Comparable () {}\n","export default function Clonable () {}\n","export default function Comparator () {}\n","export default function Serializable () {}\n","export default function RuntimeException (message) {\n  this.name = 'RuntimeException'\n  this.message = message\n  this.stack = (new Error()).stack\n  Error.call(this, message)\n}\n\nRuntimeException.prototype = Object.create(Error.prototype)\nRuntimeException.prototype.constructor = Error\n","import extend from '../../../../extend';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport inherits from '../../../../inherits';\nexport default function AssertionFailedException() {\n\tif (arguments.length === 0) {\n\t\tRuntimeException.call(this);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tRuntimeException.call(this, message);\n\t}\n}\ninherits(AssertionFailedException, RuntimeException);\nextend(AssertionFailedException.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn AssertionFailedException;\n\t}\n});\n","import extend from '../../../../extend';\nimport AssertionFailedException from './AssertionFailedException';\nexport default function Assert() {}\nextend(Assert.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Assert;\n\t}\n});\nAssert.shouldNeverReachHere = function () {\n\tif (arguments.length === 0) {\n\t\tAssert.shouldNeverReachHere(null);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n\t}\n};\nAssert.isTrue = function () {\n\tif (arguments.length === 1) {\n\t\tlet assertion = arguments[0];\n\t\tAssert.isTrue(assertion, null);\n\t} else if (arguments.length === 2) {\n\t\tlet assertion = arguments[0], message = arguments[1];\n\t\tif (!assertion) {\n\t\t\tif (message === null) {\n\t\t\t\tthrow new AssertionFailedException();\n\t\t\t} else {\n\t\t\t\tthrow new AssertionFailedException(message);\n\t\t\t}\n\t\t}\n\t}\n};\nAssert.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1];\n\t\tAssert.equals(expectedValue, actualValue, null);\n\t} else if (arguments.length === 3) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2];\n\t\tif (!actualValue.equals(expectedValue)) {\n\t\t\tthrow new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\n\t\t}\n\t}\n};\n","import NumberUtil from '../util/NumberUtil';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Comparator from '../../../../java/util/Comparator';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nexport default function Coordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.z = null;\n\tif (arguments.length === 0) {\n\t\tCoordinate.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet c = arguments[0];\n\t\tCoordinate.call(this, c.x, c.y, c.z);\n\t} else if (arguments.length === 2) {\n\t\tlet x = arguments[0], y = arguments[1];\n\t\tCoordinate.call(this, x, y, Coordinate.NULL_ORDINATE);\n\t} else if (arguments.length === 3) {\n\t\tlet x = arguments[0], y = arguments[1], z = arguments[2];\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n}\nextend(Coordinate.prototype, {\n\tsetOrdinate: function (ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Y:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Z:\n\t\t\t\tthis.z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t\t}\n\t},\n\tequals2D: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tif (this.x !== other.x) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.y !== other.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet c = arguments[0], tolerance = arguments[1];\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetOrdinate: function (ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\treturn this.x;\n\t\t\tcase Coordinate.Y:\n\t\t\t\treturn this.y;\n\t\t\tcase Coordinate.Z:\n\t\t\t\treturn this.z;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t},\n\tequals3D: function (other) {\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Coordinate)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.equals2D(other);\n\t},\n\tequalInZ: function (c, tolerance) {\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this.x < other.x) return -1;\n\t\tif (this.x > other.x) return 1;\n\t\tif (this.y < other.y) return -1;\n\t\tif (this.y > other.y) return 1;\n\t\treturn 0;\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\tvar coord = null;\n\t\t\treturn coord;\n\t\t} catch (e) {\n\t\t\tif (e instanceof CloneNotSupportedException) {\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n\t\t\t\treturn null;\n\t\t\t} else throw e;\n\t\t} finally {}\n\t},\n\tcopy: function () {\n\t\treturn new Coordinate(this);\n\t},\n\ttoString: function () {\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n\t},\n\tdistance3D: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\tvar dz = this.z - c.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t},\n\tdistance: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\n\t\treturn result;\n\t},\n\tsetCoordinate: function (other) {\n\t\tthis.x = other.x;\n\t\tthis.y = other.y;\n\t\tthis.z = other.z;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Cloneable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Coordinate;\n\t}\n});\nCoordinate.hashCode = function () {\n\tif (arguments.length === 1) {\n\t\tlet x = arguments[0];\n\t\tvar f = Double.doubleToLongBits(x);\n\t\treturn Math.trunc(f ^ f >>> 32);\n\t}\n};\nfunction DimensionalComparator() {\n\tthis.dimensionsToTest = 2;\n\tif (arguments.length === 0) {\n\t\tDimensionalComparator.call(this, 2);\n\t} else if (arguments.length === 1) {\n\t\tlet dimensionsToTest = arguments[0];\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n\t\tthis.dimensionsToTest = dimensionsToTest;\n\t}\n}\nextend(DimensionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar c1 = o1;\n\t\tvar c2 = o2;\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\n\t\tif (compX !== 0) return compX;\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\n\t\tif (compY !== 0) return compY;\n\t\tif (this.dimensionsToTest <= 2) return 0;\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\n\t\treturn compZ;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn DimensionalComparator;\n\t}\n});\nDimensionalComparator.compare = function (a, b) {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\tif (Double.isNaN(a)) {\n\t\tif (Double.isNaN(b)) return 0;\n\t\treturn -1;\n\t}\n\tif (Double.isNaN(b)) return 1;\n\treturn 0;\n};\nCoordinate.DimensionalComparator = DimensionalComparator;\nCoordinate.serialVersionUID = 6683108902428366910;\nCoordinate.NULL_ORDINATE = Double.NaN;\nCoordinate.X = 0;\nCoordinate.Y = 1;\nCoordinate.Z = 2;\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default function Iterator() {};\n\n/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */\nIterator.prototype.hasNext = function() {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function() {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function() {};\n","import Iterator from './Iterator'\n\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nexport default function Collection() {};\n\n/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.add = function() {};\n\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function() {};\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function() {};\n\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function() {};\n\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function() {};\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function IndexOutOfBoundsException(message) {\n  this.message = message || '';\n};\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nexport default function List() { };\nList.prototype = Object.create(Collection.prototype);\nList.prototype.constructor = List\n\n/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */\nList.prototype.get = function() { };\n\n\n/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */\nList.prototype.set = function() { };\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nList.prototype.isEmpty = function() { };\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function NoSuchElementException(message) {\n  this.message = message || '';\n};\nNoSuchElementException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function OperationNotSupported(message) {\n  this.message = message || '';\n};\nOperationNotSupported.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n","import Collection from './Collection'\nimport IndexOutOfBoundsException from './IndexOutOfBoundsException'\nimport Iterator from './Iterator'\nimport List from './List'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nexport default function ArrayList () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nArrayList.prototype = Object.create(List.prototype)\nArrayList.prototype.constructor = ArrayList;\n\nArrayList.prototype.ensureCapacity = function () {}\nArrayList.prototype.interfaces_ = function () { return [List, Collection] }\n\n/**\n * @override\n */\nArrayList.prototype.add = function(e) {\n  if (arguments.length === 1) {\n    this.array_.push(e)\n  } else {\n    this.array_.splice(arguments[0], arguments[1])\n  }\n  return true\n};\n\nArrayList.prototype.clear = function() {\n  this.array_ = []\n}\n\n/**\n * @override\n */\nArrayList.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.set = function(index, element) {\n  var oldElement = this.array_[index];\n  this.array_[index] = element;\n  return oldElement;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.remove = function(o) {\n  var found = false;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1);\n      found = true;\n      break;\n    }\n  }\n\n  return found;\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = function(arrayList) {\n  /**\n   * @type {ArrayList}\n   * @private\n  */\n  this.arrayList_ = arrayList;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.arrayList_.get(this.position_++);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.arrayList_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * TODO: should be in ListIterator\n * @override\n */\nIterator_.prototype.set = function(element) {\n  return this.arrayList_.set(this.position_ - 1, element);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\n};\n","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function CoordinateList() {\n\tArrayList.apply(this);\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet coord = arguments[0];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, true);\n\t} else if (arguments.length === 2) {\n\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, allowRepeated);\n\t}\n}\ninherits(CoordinateList, ArrayList);\nextend(CoordinateList.prototype, {\n\tgetCoordinate: function (i) {\n\t\treturn this.get(i);\n\t},\n\taddAll: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet coll = arguments[0], allowRepeated = arguments[1];\n\t\t\tvar isChanged = false;\n\t\t\tfor (var i = coll.iterator(); i.hasNext(); ) {\n\t\t\t\tthis.add(i.next(), allowRepeated);\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\treturn isChanged;\n\t\t} else return ArrayList.prototype.addAll.apply(this, arguments);\n\t},\n\tclone: function () {\n\t\tvar clone = ArrayList.prototype.clone.call(this);\n\t\tfor (var i = 0; i < this.size(); i++) {\n\t\t\tclone.add(i, this.get(i).copy());\n\t\t}\n\t\treturn clone;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this.toArray(CoordinateList.coordArrayType);\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet coord = arguments[0];\n\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(coord, allowRepeated, true);\n\t\t\t\treturn true;\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tif (this.size() >= 1) {\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\n\t\t\t\t\t\tif (last.equals2D(coord)) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet obj = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(obj, allowRepeated);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\")) {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2];\n\t\t\t\tif (direction) {\n\t\t\t\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = coord.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n\t\t\t\tlet i = arguments[0], coord = arguments[1], allowRepeated = arguments[2];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tvar size = this.size();\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\tvar prev = this.get(i - 1);\n\t\t\t\t\t\t\tif (prev.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < size) {\n\t\t\t\t\t\t\tvar next = this.get(i);\n\t\t\t\t\t\t\tif (next.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, i, coord);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3];\n\t\t\tvar inc = 1;\n\t\t\tif (start > end) inc = -1;\n\t\t\tfor (var i = start; i !== end; i += inc) {\n\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tcloseRing: function () {\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateList;\n\t}\n});\nCoordinateList.coordArrayType = new Array(0).fill(null);\n","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function Envelope() {\n\tthis.minx = null;\n\tthis.maxx = null;\n\tthis.miny = null;\n\tthis.maxy = null;\n\tif (arguments.length === 0) {\n\t\tthis.init();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\tlet env = arguments[0];\n\t\t\tthis.init(env);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t} else if (arguments.length === 4) {\n\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\tthis.init(x1, x2, y1, y2);\n\t}\n}\nextend(Envelope.prototype, {\n\tgetArea: function () {\n\t\treturn this.getWidth() * this.getHeight();\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Envelope)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherEnvelope = other;\n\t\tif (this.isNull()) {\n\t\t\treturn otherEnvelope.isNull();\n\t\t}\n\t\treturn this.maxx === otherEnvelope.getMaxX() && this.maxy === otherEnvelope.getMaxY() && this.minx === otherEnvelope.getMinX() && this.miny === otherEnvelope.getMinY();\n\t},\n\tintersection: function (env) {\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n\t\tvar intMinX = this.minx > env.minx ? this.minx : env.minx;\n\t\tvar intMinY = this.miny > env.miny ? this.miny : env.miny;\n\t\tvar intMaxX = this.maxx < env.maxx ? this.maxx : env.maxx;\n\t\tvar intMaxY = this.maxy < env.maxy ? this.maxy : env.maxy;\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n\t},\n\tisNull: function () {\n\t\treturn this.maxx < this.minx;\n\t},\n\tgetMaxX: function () {\n\t\treturn this.maxx;\n\t},\n\tcovers: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn other.getMinX() >= this.minx && other.getMaxX() <= this.maxx && other.getMinY() >= this.miny && other.getMaxY() <= this.maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn x >= this.minx && x <= this.maxx && y >= this.miny && y <= this.maxy;\n\t\t}\n\t},\n\tintersects: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !(other.minx > this.maxx || other.maxx < this.minx || other.miny > this.maxy || other.maxy < this.miny);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.intersects(p.x, p.y);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn !(x > this.maxx || x < this.minx || y > this.maxy || y < this.miny);\n\t\t}\n\t},\n\tgetMinY: function () {\n\t\treturn this.miny;\n\t},\n\tgetMinX: function () {\n\t\treturn this.minx;\n\t},\n\texpandToInclude: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.expandToInclude(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (other.isNull()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\tthis.minx = other.getMinX();\n\t\t\t\t\tthis.maxx = other.getMaxX();\n\t\t\t\t\tthis.miny = other.getMinY();\n\t\t\t\t\tthis.maxy = other.getMaxY();\n\t\t\t\t} else {\n\t\t\t\t\tif (other.minx < this.minx) {\n\t\t\t\t\t\tthis.minx = other.minx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other.maxx > this.maxx) {\n\t\t\t\t\t\tthis.maxx = other.maxx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other.miny < this.miny) {\n\t\t\t\t\t\tthis.miny = other.miny;\n\t\t\t\t\t}\n\t\t\t\t\tif (other.maxy > this.maxy) {\n\t\t\t\t\t\tthis.maxy = other.maxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) {\n\t\t\t\tthis.minx = x;\n\t\t\t\tthis.maxx = x;\n\t\t\t\tthis.miny = y;\n\t\t\t\tthis.maxy = y;\n\t\t\t} else {\n\t\t\t\tif (x < this.minx) {\n\t\t\t\t\tthis.minx = x;\n\t\t\t\t}\n\t\t\t\tif (x > this.maxx) {\n\t\t\t\t\tthis.maxx = x;\n\t\t\t\t}\n\t\t\t\tif (y < this.miny) {\n\t\t\t\t\tthis.miny = y;\n\t\t\t\t}\n\t\t\t\tif (y > this.maxy) {\n\t\t\t\t\tthis.maxy = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tminExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w < h) return w;\n\t\treturn h;\n\t},\n\tgetWidth: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.maxx - this.minx;\n\t},\n\tcompareTo: function (o) {\n\t\tvar env = o;\n\t\tif (this.isNull()) {\n\t\t\tif (env.isNull()) return 0;\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (env.isNull()) return 1;\n\t\t}\n\t\tif (this.minx < env.minx) return -1;\n\t\tif (this.minx > env.minx) return 1;\n\t\tif (this.miny < env.miny) return -1;\n\t\tif (this.miny > env.miny) return 1;\n\t\tif (this.maxx < env.maxx) return -1;\n\t\tif (this.maxx > env.maxx) return 1;\n\t\tif (this.maxy < env.maxy) return -1;\n\t\tif (this.maxy > env.maxy) return 1;\n\t\treturn 0;\n\t},\n\ttranslate: function (transX, transY) {\n\t\tif (this.isNull()) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n\t},\n\ttoString: function () {\n\t\treturn \"Env[\" + this.minx + \" : \" + this.maxx + \", \" + this.miny + \" : \" + this.maxy + \"]\";\n\t},\n\tsetToNull: function () {\n\t\tthis.minx = 0;\n\t\tthis.maxx = -1;\n\t\tthis.miny = 0;\n\t\tthis.maxy = -1;\n\t},\n\tgetHeight: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.maxy - this.miny;\n\t},\n\tmaxExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w > h) return w;\n\t\treturn h;\n\t},\n\texpandBy: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\tthis.expandBy(distance, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deltaX = arguments[0], deltaY = arguments[1];\n\t\t\tif (this.isNull()) return null;\n\t\t\tthis.minx -= deltaX;\n\t\t\tthis.maxx += deltaX;\n\t\t\tthis.miny -= deltaY;\n\t\t\tthis.maxy += deltaY;\n\t\t\tif (this.minx > this.maxx || this.miny > this.maxy) this.setToNull();\n\t\t}\n\t},\n\tcontains: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\treturn this.covers(other);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\treturn this.covers(x, y);\n\t\t}\n\t},\n\tcentre: function () {\n\t\tif (this.isNull()) return null;\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.setToNull();\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet env = arguments[0];\n\t\t\t\tthis.minx = env.minx;\n\t\t\t\tthis.maxx = env.maxx;\n\t\t\t\tthis.miny = env.miny;\n\t\t\t\tthis.maxy = env.maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\t\tif (x1 < x2) {\n\t\t\t\tthis.minx = x1;\n\t\t\t\tthis.maxx = x2;\n\t\t\t} else {\n\t\t\t\tthis.minx = x2;\n\t\t\t\tthis.maxx = x1;\n\t\t\t}\n\t\t\tif (y1 < y2) {\n\t\t\t\tthis.miny = y1;\n\t\t\t\tthis.maxy = y2;\n\t\t\t} else {\n\t\t\t\tthis.miny = y2;\n\t\t\t\tthis.maxy = y1;\n\t\t\t}\n\t\t}\n\t},\n\tgetMaxY: function () {\n\t\treturn this.maxy;\n\t},\n\tdistance: function (env) {\n\t\tif (this.intersects(env)) return 0;\n\t\tvar dx = 0.0;\n\t\tif (this.maxx < env.minx) dx = env.minx - this.maxx; else if (this.minx > env.maxx) dx = this.minx - env.maxx;\n\t\tvar dy = 0.0;\n\t\tif (this.maxy < env.miny) dy = env.miny - this.maxy; else if (this.miny > env.maxy) dy = this.miny - env.maxy;\n\t\tif (dx === 0.0) return dy;\n\t\tif (dy === 0.0) return dx;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.minx);\n\t\tresult = 37 * result + Coordinate.hashCode(this.maxx);\n\t\tresult = 37 * result + Coordinate.hashCode(this.miny);\n\t\tresult = 37 * result + Coordinate.hashCode(this.maxy);\n\t\treturn result;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Envelope;\n\t}\n});\nEnvelope.intersects = function () {\n\tif (arguments.length === 3) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q = arguments[2];\n\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar minq = Math.min(q1.x, q2.x);\n\t\tvar maxq = Math.max(q1.x, q2.x);\n\t\tvar minp = Math.min(p1.x, p2.x);\n\t\tvar maxp = Math.max(p1.x, p2.x);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\tminq = Math.min(q1.y, q2.y);\n\t\tmaxq = Math.max(q1.y, q2.y);\n\t\tminp = Math.min(p1.y, p2.y);\n\t\tmaxp = Math.max(p1.y, p2.y);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\treturn true;\n\t}\n};\nEnvelope.serialVersionUID = 5873921885273102420;\n","export default function Exception () {}\n","import extend from '../../../../extend';\nimport Exception from '../../../../java/lang/Exception';\nimport inherits from '../../../../inherits';\nexport default function NotRepresentableException() {\n\tException.call(this, \"Projective point not representable on the Cartesian plane.\");\n}\ninherits(NotRepresentableException, Exception);\nextend(NotRepresentableException.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NotRepresentableException;\n\t}\n});\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Location() {}\nextend(Location.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Location;\n\t}\n});\nLocation.toLocationSymbol = function (locationValue) {\n\tswitch (locationValue) {\n\t\tcase Location.EXTERIOR:\n\t\t\treturn 'e';\n\t\tcase Location.BOUNDARY:\n\t\t\treturn 'b';\n\t\tcase Location.INTERIOR:\n\t\t\treturn 'i';\n\t\tcase Location.NONE:\n\t\t\treturn '-';\n\t}\n\tthrow new IllegalArgumentException(\"Unknown location value: \" + locationValue);\n};\nLocation.INTERIOR = 0;\nLocation.BOUNDARY = 1;\nLocation.EXTERIOR = 2;\nLocation.NONE = -1;\n","import Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function MathUtil() {}\nextend(MathUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MathUtil;\n\t}\n});\nMathUtil.log10 = function (x) {\n\tvar ln = Math.log(x);\n\tif (Double.isInfinite(ln)) return ln;\n\tif (Double.isNaN(ln)) return ln;\n\treturn ln / MathUtil.LOG_10;\n};\nMathUtil.min = function (v1, v2, v3, v4) {\n\tvar min = v1;\n\tif (v2 < min) min = v2;\n\tif (v3 < min) min = v3;\n\tif (v4 < min) min = v4;\n\treturn min;\n};\nMathUtil.clamp = function () {\n\tif (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\")) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t} else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t}\n};\nMathUtil.wrap = function (index, max) {\n\tif (index < 0) {\n\t\treturn max - -index % max;\n\t}\n\treturn index % max;\n};\nMathUtil.max = function () {\n\tif (arguments.length === 3) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\treturn max;\n\t} else if (arguments.length === 4) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\tif (v4 > max) max = v4;\n\t\treturn max;\n\t}\n};\nMathUtil.average = function (x1, x2) {\n\treturn (x1 + x2) / 2.0;\n};\nMathUtil.LOG_10 = Math.log(10);\n","export default function StringBuffer (str) {\n  this.str = str\n}\n\nStringBuffer.prototype.append = function (e) {\n  this.str += e\n}\n\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n}\n\nStringBuffer.prototype.toString = function (e) {\n  return this.str\n}\n","export default function Integer (value) {\n  this.value = value\n}\n\nInteger.prototype.intValue = function () {\n  return this.value\n}\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1\n  if (this.value > o) return 1\n  return 0\n}\n\nInteger.isNaN = n => Number.isNaN(n)\n","export default function Character () {}\nCharacter.isWhitespace = c => ((c <= 32 && c >= 0) || c == 127)\nCharacter.toUpperCase = c => c.toUpperCase()\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Character from '../../../../java/lang/Character';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function DD() {\n\tthis.hi = 0.0;\n\tthis.lo = 0.0;\n\tif (arguments.length === 0) {\n\t\tthis.init(0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet x = arguments[0];\n\t\t\tthis.init(x);\n\t\t} else if (arguments[0] instanceof DD) {\n\t\t\tlet dd = arguments[0];\n\t\t\tthis.init(dd);\n\t\t} else if (typeof arguments[0] === \"string\") {\n\t\t\tlet str = arguments[0];\n\t\t\tDD.call(this, DD.parse(str));\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet hi = arguments[0], lo = arguments[1];\n\t\tthis.init(hi, lo);\n\t}\n}\nextend(DD.prototype, {\n\tle: function (y) {\n\t\treturn this.hi < y.hi || this.hi === y.hi && this.lo <= y.lo;\n\t},\n\textractSignificantDigits: function (insertDecimalPoint, magnitude) {\n\t\tvar y = this.abs();\n\t\tvar mag = DD.magnitude(y.hi);\n\t\tvar scale = DD.TEN.pow(mag);\n\t\ty = y.divide(scale);\n\t\tif (y.gt(DD.TEN)) {\n\t\t\ty = y.divide(DD.TEN);\n\t\t\tmag += 1;\n\t\t} else if (y.lt(DD.ONE)) {\n\t\t\ty = y.multiply(DD.TEN);\n\t\t\tmag -= 1;\n\t\t}\n\t\tvar decimalPointPos = mag + 1;\n\t\tvar buf = new StringBuffer();\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\n\t\tfor (var i = 0; i <= numDigits; i++) {\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\n\t\t\t\tbuf.append('.');\n\t\t\t}\n\t\t\tvar digit = Math.trunc(y.hi);\n\t\t\tif (digit < 0 || digit > 9) {}\n\t\t\tif (digit < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar rebiasBy10 = false;\n\t\t\tvar digitChar = 0;\n\t\t\tif (digit > 9) {\n\t\t\t\trebiasBy10 = true;\n\t\t\t\tdigitChar = '9';\n\t\t\t} else {\n\t\t\t\tdigitChar = '0' + digit;\n\t\t\t}\n\t\t\tbuf.append(digitChar);\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\n\t\t\tvar continueExtractingDigits = true;\n\t\t\tvar remMag = DD.magnitude(y.hi);\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n\t\t\tif (!continueExtractingDigits) break;\n\t\t}\n\t\tmagnitude[0] = mag;\n\t\treturn buf.toString();\n\t},\n\tsqr: function () {\n\t\treturn this.multiply(this);\n\t},\n\tdoubleValue: function () {\n\t\treturn this.hi + this.lo;\n\t},\n\tsubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(y.negate());\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(-y);\n\t\t}\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.hi === y.hi && this.lo === y.lo;\n\t\t}\n\t},\n\tisZero: function () {\n\t\treturn this.hi === 0.0 && this.lo === 0.0;\n\t},\n\tselfSubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y.hi, -y.lo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y, 0.0);\n\t\t}\n\t},\n\tgetSpecialNumberString: function () {\n\t\tif (this.isZero()) return \"0.0\";\n\t\tif (this.isNaN()) return \"NaN \";\n\t\treturn null;\n\t},\n\tmin: function (x) {\n\t\tif (this.le(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tselfDivide: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y.hi, y.lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this.hi / yhi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * yhi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - yhi;\n\t\t\tU = C * yhi;\n\t\t\thy = u - hy;\n\t\t\tty = yhi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this.hi - U - u + this.lo - C * ylo) / yhi;\n\t\t\tu = C + c;\n\t\t\tthis.hi = u;\n\t\t\tthis.lo = C - u + c;\n\t\t\treturn this;\n\t\t}\n\t},\n\tdump: function () {\n\t\treturn \"DD<\" + this.hi + \", \" + this.lo + \">\";\n\t},\n\tdivide: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this.hi / y.hi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * y.hi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - y.hi;\n\t\t\tU = C * y.hi;\n\t\t\thy = u - hy;\n\t\t\tty = y.hi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this.hi - U - u + this.lo - C * y.lo) / y.hi;\n\t\t\tu = C + c;\n\t\t\tvar zhi = u;\n\t\t\tvar zlo = C - u + c;\n\t\t\treturn new DD(zhi, zlo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfDivide(y, 0.0);\n\t\t}\n\t},\n\tge: function (y) {\n\t\treturn this.hi > y.hi || this.hi === y.hi && this.lo >= y.lo;\n\t},\n\tpow: function (exp) {\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\n\t\tvar r = new DD(this);\n\t\tvar s = DD.valueOf(1.0);\n\t\tvar n = Math.abs(exp);\n\t\tif (n > 1) {\n\t\t\twhile (n > 0) {\n\t\t\t\tif (n % 2 === 1) {\n\t\t\t\t\ts.selfMultiply(r);\n\t\t\t\t}\n\t\t\t\tn /= 2;\n\t\t\t\tif (n > 0) r = r.sqr();\n\t\t\t}\n\t\t} else {\n\t\t\ts = r;\n\t\t}\n\t\tif (exp < 0) return s.reciprocal();\n\t\treturn s;\n\t},\n\tceil: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.ceil(this.hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this.hi) {\n\t\t\tflo = Math.ceil(this.lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this.hi < other.hi) return -1;\n\t\tif (this.hi > other.hi) return 1;\n\t\tif (this.lo < other.lo) return -1;\n\t\tif (this.lo > other.lo) return 1;\n\t\treturn 0;\n\t},\n\trint: function () {\n\t\tif (this.isNaN()) return this;\n\t\tvar plus5 = this.add(0.5);\n\t\treturn plus5.floor();\n\t},\n\tsetValue: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t}\n\t},\n\tmax: function (x) {\n\t\tif (this.ge(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tsqrt: function () {\n\t\tif (this.isZero()) return DD.valueOf(0.0);\n\t\tif (this.isNegative()) {\n\t\t\treturn DD.NaN;\n\t\t}\n\t\tvar x = 1.0 / Math.sqrt(this.hi);\n\t\tvar ax = this.hi * x;\n\t\tvar axdd = DD.valueOf(ax);\n\t\tvar diffSq = this.subtract(axdd.sqr());\n\t\tvar d2 = diffSq.hi * (x * 0.5);\n\t\treturn axdd.add(d2);\n\t},\n\tselfAdd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfAdd(y.hi, y.lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\tvar H = null, h = null, S = null, s = null, e = null, f = null;\n\t\t\t\tS = this.hi + y;\n\t\t\t\te = S - this.hi;\n\t\t\t\ts = S - e;\n\t\t\t\ts = y - e + (this.hi - s);\n\t\t\t\tf = s + this.lo;\n\t\t\t\tH = S + f;\n\t\t\t\th = f + (S - H);\n\t\t\t\tthis.hi = H + h;\n\t\t\t\tthis.lo = h + (H - this.hi);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null;\n\t\t\tS = this.hi + yhi;\n\t\t\tT = this.lo + ylo;\n\t\t\te = S - this.hi;\n\t\t\tf = T - this.lo;\n\t\t\ts = S - e;\n\t\t\tt = T - f;\n\t\t\ts = yhi - e + (this.hi - s);\n\t\t\tt = ylo - f + (this.lo - t);\n\t\t\te = s + T;\n\t\t\tH = S + e;\n\t\t\th = e + (S - H);\n\t\t\te = t + h;\n\t\t\tvar zhi = H + e;\n\t\t\tvar zlo = e + (H - zhi);\n\t\t\tthis.hi = zhi;\n\t\t\tthis.lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfMultiply: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y.hi, y.lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hx = null, tx = null, hy = null, ty = null, C = null, c = null;\n\t\t\tC = DD.SPLIT * this.hi;\n\t\t\thx = C - this.hi;\n\t\t\tc = DD.SPLIT * yhi;\n\t\t\thx = C - hx;\n\t\t\ttx = this.hi - hx;\n\t\t\thy = c - yhi;\n\t\t\tC = this.hi * yhi;\n\t\t\thy = c - hy;\n\t\t\tty = yhi - hy;\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this.hi * ylo + this.lo * yhi);\n\t\t\tvar zhi = C + c;\n\t\t\thx = C - zhi;\n\t\t\tvar zlo = c + hx;\n\t\t\tthis.hi = zhi;\n\t\t\tthis.lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfSqr: function () {\n\t\treturn this.selfMultiply(this);\n\t},\n\tfloor: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.floor(this.hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this.hi) {\n\t\t\tflo = Math.floor(this.lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tnegate: function () {\n\t\tif (this.isNaN()) return this;\n\t\treturn new DD(-this.hi, -this.lo);\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CloneNotSupportedException) {\n\t\t\t\treturn null;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tmultiply: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (y.isNaN()) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y, 0.0);\n\t\t}\n\t},\n\tisNaN: function () {\n\t\treturn Double.isNaN(this.hi);\n\t},\n\tintValue: function () {\n\t\treturn Math.trunc(this.hi);\n\t},\n\ttoString: function () {\n\t\tvar mag = DD.magnitude(this.hi);\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\n\t\treturn this.toSciNotation();\n\t},\n\ttoStandardNotation: function () {\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\n\t\tvar decimalPointPos = magnitude[0] + 1;\n\t\tvar num = sigDigits;\n\t\tif (sigDigits.charAt(0) === '.') {\n\t\t\tnum = \"0\" + sigDigits;\n\t\t} else if (decimalPointPos < 0) {\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n\t\t} else if (sigDigits.indexOf('.') === -1) {\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\n\t\t\tnum = sigDigits + zeroes + \".0\";\n\t\t}\n\t\tif (this.isNegative()) return \"-\" + num;\n\t\treturn num;\n\t},\n\treciprocal: function () {\n\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\tC = 1.0 / this.hi;\n\t\tc = DD.SPLIT * C;\n\t\thc = c - C;\n\t\tu = DD.SPLIT * this.hi;\n\t\thc = c - hc;\n\t\ttc = C - hc;\n\t\thy = u - this.hi;\n\t\tU = C * this.hi;\n\t\thy = u - hy;\n\t\tty = this.hi - hy;\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\tc = (1.0 - U - u - C * this.lo) / this.hi;\n\t\tvar zhi = C + c;\n\t\tvar zlo = C - zhi + c;\n\t\treturn new DD(zhi, zlo);\n\t},\n\ttoSciNotation: function () {\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\t\tif (digits.charAt(0) === '0') {\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\n\t\t}\n\t\tvar trailingDigits = \"\";\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n\t\treturn digitsWithDecimal + expStr;\n\t},\n\tabs: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isNegative()) return this.negate();\n\t\treturn new DD(this);\n\t},\n\tisPositive: function () {\n\t\treturn this.hi > 0.0 || this.hi === 0.0 && this.lo > 0.0;\n\t},\n\tlt: function (y) {\n\t\treturn this.hi < y.hi || this.hi === y.hi && this.lo < y.lo;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t}\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\tthis.hi = x;\n\t\t\t\tthis.lo = 0.0;\n\t\t\t} else if (arguments[0] instanceof DD) {\n\t\t\t\tlet dd = arguments[0];\n\t\t\t\tthis.hi = dd.hi;\n\t\t\t\tthis.lo = dd.lo;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet hi = arguments[0], lo = arguments[1];\n\t\t\tthis.hi = hi;\n\t\t\tthis.lo = lo;\n\t\t}\n\t},\n\tgt: function (y) {\n\t\treturn this.hi > y.hi || this.hi === y.hi && this.lo > y.lo;\n\t},\n\tisNegative: function () {\n\t\treturn this.hi < 0.0 || this.hi === 0.0 && this.lo < 0.0;\n\t},\n\ttrunc: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isPositive()) return this.floor(); else return this.ceil();\n\t},\n\tsignum: function () {\n\t\tif (this.hi > 0) return 1;\n\t\tif (this.hi < 0) return -1;\n\t\tif (this.lo > 0) return 1;\n\t\tif (this.lo < 0) return -1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable, Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn DD;\n\t}\n});\nDD.sqr = function (x) {\n\treturn DD.valueOf(x).selfMultiply(x);\n};\nDD.valueOf = function () {\n\tif (typeof arguments[0] === \"string\") {\n\t\tlet str = arguments[0];\n\t\treturn DD.parse(str);\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tlet x = arguments[0];\n\t\treturn new DD(x);\n\t}\n};\nDD.sqrt = function (x) {\n\treturn DD.valueOf(x).sqrt();\n};\nDD.parse = function (str) {\n\tvar i = 0;\n\tvar strlen = str.length;\n\twhile (Character.isWhitespace(str.charAt(i))) i++;\n\tvar isNegative = false;\n\tif (i < strlen) {\n\t\tvar signCh = str.charAt(i);\n\t\tif (signCh === '-' || signCh === '+') {\n\t\t\ti++;\n\t\t\tif (signCh === '-') isNegative = true;\n\t\t}\n\t}\n\tvar val = new DD();\n\tvar numDigits = 0;\n\tvar numBeforeDec = 0;\n\tvar exp = 0;\n\twhile (true) {\n\t\tif (i >= strlen) break;\n\t\tvar ch = str.charAt(i);\n\t\ti++;\n\t\tif (Character.isDigit(ch)) {\n\t\t\tvar d = ch - '0';\n\t\t\tval.selfMultiply(DD.TEN);\n\t\t\tval.selfAdd(d);\n\t\t\tnumDigits++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === '.') {\n\t\t\tnumBeforeDec = numDigits;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === 'e' || ch === 'E') {\n\t\t\tvar expStr = str.substring(i);\n\t\t\ttry {\n\t\t\t\texp = Integer.parseInt(expStr);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof NumberFormatException) {\n\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t\tbreak;\n\t\t}\n\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n\t}\n\tvar val2 = val;\n\tvar numDecPlaces = numDigits - numBeforeDec - exp;\n\tif (numDecPlaces === 0) {\n\t\tval2 = val;\n\t} else if (numDecPlaces > 0) {\n\t\tvar scale = DD.TEN.pow(numDecPlaces);\n\t\tval2 = val.divide(scale);\n\t} else if (numDecPlaces < 0) {\n\t\tvar scale = DD.TEN.pow(-numDecPlaces);\n\t\tval2 = val.multiply(scale);\n\t}\n\tif (isNegative) {\n\t\treturn val2.negate();\n\t}\n\treturn val2;\n};\nDD.createNaN = function () {\n\treturn new DD(Double.NaN, Double.NaN);\n};\nDD.copy = function (dd) {\n\treturn new DD(dd);\n};\nDD.magnitude = function (x) {\n\tvar xAbs = Math.abs(x);\n\tvar xLog10 = Math.log(xAbs) / Math.log(10);\n\tvar xMag = Math.trunc(Math.floor(xLog10));\n\tvar xApprox = Math.pow(10, xMag);\n\tif (xApprox * 10 <= xAbs) xMag += 1;\n\treturn xMag;\n};\nDD.stringOfChar = function (ch, len) {\n\tvar buf = new StringBuffer();\n\tfor (var i = 0; i < len; i++) {\n\t\tbuf.append(ch);\n\t}\n\treturn buf.toString();\n};\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\nDD.NaN = new DD(Double.NaN, Double.NaN);\nDD.EPS = 1.23259516440783e-32;\nDD.SPLIT = 134217729.0;\nDD.MAX_PRINT_DIGITS = 32;\nDD.TEN = DD.valueOf(10.0);\nDD.ONE = DD.valueOf(1.0);\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\nDD.SCI_NOT_ZERO = \"0.0E0\";\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport DD from '../math/DD';\nexport default function CGAlgorithmsDD() {}\nextend(CGAlgorithmsDD.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CGAlgorithmsDD;\n\t}\n});\nCGAlgorithmsDD.orientationIndex = function (p1, p2, q) {\n\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n\tif (index <= 1) return index;\n\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n};\nCGAlgorithmsDD.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\treturn det.signum();\n};\nCGAlgorithmsDD.intersection = function (p1, p2, q1, q2) {\n\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n\tvar denom = denom1.subtract(denom2);\n\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numx = numx1.subtract(numx2);\n\tvar fracP = numx.selfDivide(denom).doubleValue();\n\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numy = numy1.subtract(numy2);\n\tvar fracQ = numy.selfDivide(denom).doubleValue();\n\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n\treturn new Coordinate(x, y);\n};\nCGAlgorithmsDD.orientationIndexFilter = function (pa, pb, pc) {\n\tvar detsum = null;\n\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\n\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\n\tvar det = detleft - detright;\n\tif (detleft > 0.0) {\n\t\tif (detright <= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = detleft + detright;\n\t\t}\n\t} else if (detleft < 0.0) {\n\t\tif (detright >= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = -detleft - detright;\n\t\t}\n\t} else {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\tif (det >= errbound || -det >= errbound) {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\treturn 2;\n};\nCGAlgorithmsDD.signum = function (x) {\n\tif (x > 0) return 1;\n\tif (x < 0) return -1;\n\treturn 0;\n};\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n","import extend from '../../../../extend';\nimport Cloneable from '../../../../java/lang/Cloneable';\nexport default function CoordinateSequence() {}\nextend(CoordinateSequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {},\n\tsize: function () {},\n\tgetOrdinate: function (index, ordinateIndex) {},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {},\n\tgetDimension: function () {},\n\tgetX: function (index) {},\n\tclone: function () {},\n\texpandEnvelope: function (env) {},\n\tcopy: function () {},\n\tgetY: function (index) {},\n\ttoCoordinateArray: function () {},\n\tinterfaces_: function () {\n\t\treturn [Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequence;\n\t}\n});\nCoordinateSequence.X = 0;\nCoordinateSequence.Y = 1;\nCoordinateSequence.Z = 2;\nCoordinateSequence.M = 3;\n","export default function System () { }\n\nSystem.arraycopy = (src, srcPos, dest, destPos, len) => {\n  let c = 0\n  for (let i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i]\n    c++\n  }\n}\n\nSystem.getProperty = (name) => {\n  return {\n    'line.separator': '\\n'\n  }[name]\n}\n","import NotRepresentableException from './NotRepresentableException';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function HCoordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.w = null;\n\tif (arguments.length === 0) {\n\t\tthis.x = 0.0;\n\t\tthis.y = 0.0;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 1) {\n\t\tlet p = arguments[0];\n\t\tthis.x = p.x;\n\t\tthis.y = p.y;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 2) {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tlet _x = arguments[0], _y = arguments[1];\n\t\t\tthis.x = _x;\n\t\t\tthis.y = _y;\n\t\t\tthis.w = 1.0;\n\t\t} else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y * p2.w - p2.y * p1.w;\n\t\t\tthis.y = p2.x * p1.w - p1.x * p2.w;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y - p2.y;\n\t\t\tthis.y = p2.x - p1.x;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _w = arguments[2];\n\t\tthis.x = _x;\n\t\tthis.y = _y;\n\t\tthis.w = _w;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar px = p1.y - p2.y;\n\t\tvar py = p2.x - p1.x;\n\t\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\t\tvar qx = q1.y - q2.y;\n\t\tvar qy = q2.x - q1.x;\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\t\tthis.x = py * qw - qy * pw;\n\t\tthis.y = qx * pw - px * qw;\n\t\tthis.w = px * qy - qx * py;\n\t}\n}\nextend(HCoordinate.prototype, {\n\tgetY: function () {\n\t\tvar a = this.y / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetX: function () {\n\t\tvar a = this.x / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetCoordinate: function () {\n\t\tvar p = new Coordinate();\n\t\tp.x = this.getX();\n\t\tp.y = this.getY();\n\t\treturn p;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HCoordinate;\n\t}\n});\nHCoordinate.intersection = function (p1, p2, q1, q2) {\n\tvar px = p1.y - p2.y;\n\tvar py = p2.x - p1.x;\n\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\tvar qx = q1.y - q2.y;\n\tvar qy = q2.x - q1.x;\n\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\tvar x = py * qw - qy * pw;\n\tvar y = qx * pw - px * qw;\n\tvar w = px * qy - qx * py;\n\tvar xInt = x / w;\n\tvar yInt = y / w;\n\tif (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n\t\tthrow new NotRepresentableException();\n\t}\n\treturn new Coordinate(xInt, yInt);\n};\n","import hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nexport default function CoordinateSequenceFactory() {}\nextend(CoordinateSequenceFactory.prototype, {\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFactory;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function GeometryComponentFilter() {}\nextend(GeometryComponentFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryComponentFilter;\n\t}\n});\n","import Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Serializable from '../../../../java/io/Serializable';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport extend from '../../../../extend';\nimport inherits from '../../../../inherits';\nexport default function Geometry() {\n\tthis.envelope = null;\n\tthis.factory = null;\n\tthis.SRID = null;\n\tthis.userData = null;\n\tlet factory = arguments[0];\n\tthis.factory = factory;\n\tthis.SRID = factory.getSRID();\n}\nextend(Geometry.prototype, {\n\tisGeometryCollection: function () {\n\t\treturn this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION;\n\t},\n\tgetFactory: function () {\n\t\treturn this.factory;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this;\n\t},\n\tgetArea: function () {\n\t\treturn 0.0;\n\t},\n\tisRectangle: function () {\n\t\treturn false;\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Geometry) {\n\t\t\t\tlet g = arguments[0];\n\t\t\t\tif (g === null) return false;\n\t\t\t\treturn this.equalsTopo(g);\n\t\t\t} else if (arguments[0] instanceof Object) {\n\t\t\t\tlet o = arguments[0];\n\t\t\t\tif (!(o instanceof Geometry)) return false;\n\t\t\t\tvar g = o;\n\t\t\t\treturn this.equalsExact(g);\n\t\t\t}\n\t\t}\n\t},\n\tequalsExact: function (other) {\n\t\treturn this === other || this.equalsExact(other, 0);\n\t},\n\tgeometryChanged: function () {\n\t\tthis.apply(Geometry.geometryChangedFilter);\n\t},\n\tgeometryChangedAction: function () {\n\t\tthis.envelope = null;\n\t},\n\tequalsNorm: function (g) {\n\t\tif (g === null) return false;\n\t\treturn this.norm().equalsExact(g.norm());\n\t},\n\tgetLength: function () {\n\t\treturn 0.0;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn 1;\n\t},\n\tcompareTo: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar other = o;\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar other = o;\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o, comp);\n\t\t}\n\t},\n\tgetUserData: function () {\n\t\treturn this.userData;\n\t},\n\tgetSRID: function () {\n\t\treturn this.SRID;\n\t},\n\tgetEnvelope: function () {\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\n\t},\n\tcheckNotGeometryCollection: function (g) {\n\t\tif (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\t}\n\t},\n\tequal: function (a, b, tolerance) {\n\t\tif (tolerance === 0) {\n\t\t\treturn a.equals(b);\n\t\t}\n\t\treturn a.distance(b) <= tolerance;\n\t},\n\tnorm: function () {\n\t\tvar copy = this.copy();\n\t\tcopy.normalize();\n\t\treturn copy;\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this.factory.getPrecisionModel();\n\t},\n\tgetEnvelopeInternal: function () {\n\t\tif (this.envelope === null) {\n\t\t\tthis.envelope = this.computeEnvelopeInternal();\n\t\t}\n\t\treturn new Envelope(this.envelope);\n\t},\n\tsetSRID: function (SRID) {\n\t\tthis.SRID = SRID;\n\t},\n\tsetUserData: function (userData) {\n\t\tthis.userData = userData;\n\t},\n\tcompare: function (a, b) {\n\t\tvar i = a.iterator();\n\t\tvar j = b.iterator();\n\t\twhile (i.hasNext() && j.hasNext()) {\n\t\t\tvar aElement = i.next();\n\t\t\tvar bElement = j.next();\n\t\t\tvar comparison = aElement.compareTo(bElement);\n\t\t\tif (comparison !== 0) {\n\t\t\t\treturn comparison;\n\t\t\t}\n\t\t}\n\t\tif (i.hasNext()) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (j.hasNext()) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t},\n\thashCode: function () {\n\t\treturn this.getEnvelopeInternal().hashCode();\n\t},\n\tisGeometryCollectionOrDerived: function () {\n\t\tif (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Cloneable, Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Geometry;\n\t}\n});\nGeometry.hasNonEmptyElements = function (geometries) {\n\tfor (var i = 0; i < geometries.length; i++) {\n\t\tif (!geometries[i].isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.hasNullElements = function (array) {\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i] === null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.serialVersionUID = 8763622679187376702;\nGeometry.SORTINDEX_POINT = 0;\nGeometry.SORTINDEX_MULTIPOINT = 1;\nGeometry.SORTINDEX_LINESTRING = 2;\nGeometry.SORTINDEX_LINEARRING = 3;\nGeometry.SORTINDEX_MULTILINESTRING = 4;\nGeometry.SORTINDEX_POLYGON = 5;\nGeometry.SORTINDEX_MULTIPOLYGON = 6;\nGeometry.SORTINDEX_GEOMETRYCOLLECTION = 7;\nGeometry.geometryChangedFilter = {\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tfilter: function (geom) {\n\t\tgeom.geometryChangedAction();\n\t}\n};\n","import extend from '../../../../extend';\nexport default function CoordinateFilter() {}\nextend(CoordinateFilter.prototype, {\n\tfilter: function (coord) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateFilter;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function BoundaryNodeRule() {}\nextend(BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryNodeRule;\n\t}\n});\nfunction Mod2BoundaryNodeRule() {}\nextend(Mod2BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount % 2 === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn Mod2BoundaryNodeRule;\n\t}\n});\nfunction EndPointBoundaryNodeRule() {}\nextend(EndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn EndPointBoundaryNodeRule;\n\t}\n});\nfunction MultiValentEndPointBoundaryNodeRule() {}\nextend(MultiValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MultiValentEndPointBoundaryNodeRule;\n\t}\n});\nfunction MonoValentEndPointBoundaryNodeRule() {}\nextend(MonoValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MonoValentEndPointBoundaryNodeRule;\n\t}\n});\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n","import CoordinateList from './CoordinateList';\nimport Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport System from '../../../../java/lang/System';\nimport Comparator from '../../../../java/util/Comparator';\nimport Envelope from './Envelope';\nexport default function CoordinateArrays() {}\nextend(CoordinateArrays.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArrays;\n\t}\n});\nCoordinateArrays.isRing = function (pts) {\n\tif (pts.length < 4) return false;\n\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\n\treturn true;\n};\nCoordinateArrays.ptNotInList = function (testPts, pts) {\n\tfor (var i = 0; i < testPts.length; i++) {\n\t\tvar testPt = testPts[i];\n\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n\t}\n\treturn null;\n};\nCoordinateArrays.scroll = function (coordinates, firstCoordinate) {\n\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n\tif (i < 0) return null;\n\tvar newCoordinates = new Array(coordinates.length).fill(null);\n\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (!coord1[i].equals(coord2[i])) return false;\n\t\t}\n\t\treturn true;\n\t} else if (arguments.length === 3) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\nCoordinateArrays.intersection = function (coordinates, env) {\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n\t}\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.hasRepeatedPoints = function (coord) {\n\tfor (var i = 1; i < coord.length; i++) {\n\t\tif (coord[i - 1].equals(coord[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCoordinateArrays.removeRepeatedPoints = function (coord) {\n\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n\tvar coordList = new CoordinateList(coord, false);\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.reverse = function (coord) {\n\tvar last = coord.length - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tvar tmp = coord[i];\n\t\tcoord[i] = coord[last - i];\n\t\tcoord[last - i] = tmp;\n\t}\n};\nCoordinateArrays.removeNull = function (coord) {\n\tvar nonNull = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) nonNull++;\n\t}\n\tvar newCoord = new Array(nonNull).fill(null);\n\tif (nonNull === 0) return newCoord;\n\tvar j = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\n\t}\n\treturn newCoord;\n};\nCoordinateArrays.copyDeep = function () {\n\tif (arguments.length === 1) {\n\t\tlet coordinates = arguments[0];\n\t\tvar copy = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tcopy[i] = new Coordinate(coordinates[i]);\n\t\t}\n\t\treturn copy;\n\t} else if (arguments.length === 5) {\n\t\tlet src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\n\t\t}\n\t}\n};\nCoordinateArrays.isEqualReversed = function (pts1, pts2) {\n\tfor (var i = 0; i < pts1.length; i++) {\n\t\tvar p1 = pts1[i];\n\t\tvar p2 = pts2[pts1.length - i - 1];\n\t\tif (p1.compareTo(p2) !== 0) return false;\n\t}\n\treturn true;\n};\nCoordinateArrays.envelope = function (coordinates) {\n\tvar env = new Envelope();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tenv.expandToInclude(coordinates[i]);\n\t}\n\treturn env;\n};\nCoordinateArrays.toCoordinateArray = function (coordList) {\n\treturn coordList.toArray(CoordinateArrays.coordArrayType);\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function (n, c) {\n\treturn c.length >= n ? c : [];\n};\nCoordinateArrays.indexOf = function (coordinate, coordinates) {\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (coordinate.equals(coordinates[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nCoordinateArrays.increasingDirection = function (pts) {\n\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n\t\tvar j = pts.length - 1 - i;\n\t\tvar comp = pts[i].compareTo(pts[j]);\n\t\tif (comp !== 0) return comp;\n\t}\n\treturn 1;\n};\nCoordinateArrays.compare = function (pts1, pts2) {\n\tvar i = 0;\n\twhile (i < pts1.length && i < pts2.length) {\n\t\tvar compare = pts1[i].compareTo(pts2[i]);\n\t\tif (compare !== 0) return compare;\n\t\ti++;\n\t}\n\tif (i < pts2.length) return -1;\n\tif (i < pts1.length) return 1;\n\treturn 0;\n};\nCoordinateArrays.minCoordinate = function (coordinates) {\n\tvar minCoord = null;\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n\t\t\tminCoord = coordinates[i];\n\t\t}\n\t}\n\treturn minCoord;\n};\nCoordinateArrays.extract = function (pts, start, end) {\n\tstart = MathUtil.clamp(start, 0, pts.length);\n\tend = MathUtil.clamp(end, -1, pts.length);\n\tvar npts = end - start + 1;\n\tif (end < 0) npts = 0;\n\tif (start >= pts.length) npts = 0;\n\tif (end < start) npts = 0;\n\tvar extractPts = new Array(npts).fill(null);\n\tif (npts === 0) return extractPts;\n\tvar iPts = 0;\n\tfor (var i = start; i <= end; i++) {\n\t\textractPts[iPts++] = pts[i];\n\t}\n\treturn extractPts;\n};\nfunction ForwardComparator() {}\nextend(ForwardComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\treturn CoordinateArrays.compare(pts1, pts2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn ForwardComparator;\n\t}\n});\nfunction BidirectionalComparator() {}\nextend(BidirectionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n\t\tif (isEqualRev) return 0;\n\t\treturn forwardComp;\n\t},\n\tOLDcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (comparePt !== 0) return comparePt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t}\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn BidirectionalComparator;\n\t}\n});\nCoordinateArrays.ForwardComparator = ForwardComparator;\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nexport default function Map() {};\n\n\n/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */\nMap.prototype.get = function() {};\n\n\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap.prototype.put = function() {};\n\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap.prototype.size = function() {};\n\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap.prototype.values = function() {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap.prototype.entrySet = function() {};\n","import Map from './Map'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nexport default function SortedMap() {};\nSortedMap.prototype = new Map();\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default function Set() {};\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport Set from './Set'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nexport default function HashSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nHashSet.prototype = new Set();\n\n\n/**\n * @override\n */\nHashSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e === o) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.remove = function(o) {\n  throw new javascript.util.OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(hashSet) {\n  /**\n   * @type {HashSet}\n   * @private\n   */\n  this.hashSet_ = hashSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.hashSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.hashSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","import ArrayList from './ArrayList'\nimport SortedMap from './SortedMap'\nimport HashSet from './HashSet'\n\nconst BLACK = 0\nconst RED = 1\nfunction colorOf (p) { return (p == null ? BLACK : p.color) }\nfunction parentOf (p) { return (p == null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) p.color = c }\nfunction leftOf (p) { return (p == null ? null : p.left) }\nfunction rightOf (p) { return (p == null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nexport default function TreeMap() {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n};\nTreeMap.prototype = new SortedMap();\n\n\n/**\n * @override\n */\nTreeMap.prototype.get = function(key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return p.value;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.put = function(key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue() { return this.value },\n      getKey() { return this.key }\n    };\n    this.size_ = 1;\n    return null;\n  }\n  var t = this.root_, parent, cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue;\n    }\n  } while (t !== null);\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue() { return this.value },\n    getKey() { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null;\n};\n\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function(x) {\n  x.color = RED;\n  while (x != null && x != this.root_ && x.parent.color == RED) {\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.values = function() {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function() {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet;\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function(p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null)\n      r.left.parent = p;\n    r.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = r;\n    else if (p.parent.left == p)\n      p.parent.left = r;\n    else\n      p.parent.right = r;\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function(p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) l.right.parent = p;\n    l.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = l;\n    else if (p.parent.right == p)\n      p.parent.right = l;\n    else p.parent.left = l;\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function() {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p;\n};\n\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function(t) {\n  if (t === null)\n    return null;\n  else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p;\n  } else {\n    var p = t.parent;\n    var ch = t;\n    while (p !== null && ch === p.right) {\n      ch = p;\n      p = p.parent;\n    }\n    return p;\n  }\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.size = function() {\n  return this.size_;\n};\n","import extend from '../../../../extend';\nexport default function Lineal() {}\nextend(Lineal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Lineal;\n\t}\n});\n","import Set from './Set'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nexport default function SortedSet() {};\nSortedSet.prototype = new Set();\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport SortedSet from './SortedSet'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nexport default function TreeSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nTreeSet.prototype = new SortedSet();\n\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this.array_.splice(i, 0, o);\n      return true;\n    }\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function(e) {\n  throw new OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.treeSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.treeSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","import ArrayList from './ArrayList'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nexport default function Arrays() {};\n\n/**\n */\nArrays.sort = function() {\n  var a = arguments[0], i, t, comparator, compare;\n  if (arguments.length === 1) {\n    compare = function(a, b) {\n      return a.compareTo(b);\n    }\n    a.sort(compare);\n    return;\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  }\n};\n\n\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function(array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList;\n};\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Character from '../../../../java/lang/Character';\nexport default function Dimension() {}\nextend(Dimension.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Dimension;\n\t}\n});\nDimension.toDimensionSymbol = function (dimensionValue) {\n\tswitch (dimensionValue) {\n\t\tcase Dimension.FALSE:\n\t\t\treturn Dimension.SYM_FALSE;\n\t\tcase Dimension.TRUE:\n\t\t\treturn Dimension.SYM_TRUE;\n\t\tcase Dimension.DONTCARE:\n\t\t\treturn Dimension.SYM_DONTCARE;\n\t\tcase Dimension.P:\n\t\t\treturn Dimension.SYM_P;\n\t\tcase Dimension.L:\n\t\t\treturn Dimension.SYM_L;\n\t\tcase Dimension.A:\n\t\t\treturn Dimension.SYM_A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n};\nDimension.toDimensionValue = function (dimensionSymbol) {\n\tswitch (Character.toUpperCase(dimensionSymbol)) {\n\t\tcase Dimension.SYM_FALSE:\n\t\t\treturn Dimension.FALSE;\n\t\tcase Dimension.SYM_TRUE:\n\t\t\treturn Dimension.TRUE;\n\t\tcase Dimension.SYM_DONTCARE:\n\t\t\treturn Dimension.DONTCARE;\n\t\tcase Dimension.SYM_P:\n\t\t\treturn Dimension.P;\n\t\tcase Dimension.SYM_L:\n\t\t\treturn Dimension.L;\n\t\tcase Dimension.SYM_A:\n\t\t\treturn Dimension.A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n};\nDimension.P = 0;\nDimension.L = 1;\nDimension.A = 2;\nDimension.FALSE = -1;\nDimension.TRUE = -2;\nDimension.DONTCARE = -3;\nDimension.SYM_FALSE = 'F';\nDimension.SYM_TRUE = 'T';\nDimension.SYM_DONTCARE = '*';\nDimension.SYM_P = '0';\nDimension.SYM_L = '1';\nDimension.SYM_A = '2';\n","import extend from '../../../../extend';\nexport default function GeometryFilter() {}\nextend(GeometryFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFilter;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function CoordinateSequenceFilter() {}\nextend(CoordinateSequenceFilter.prototype, {\n\tfilter: function (seq, i) {},\n\tisDone: function () {},\n\tisGeometryChanged: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFilter;\n\t}\n});\n","import TreeSet from '../../../../java/util/TreeSet';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function GeometryCollection() {\n\tthis.geometries = null;\n\tlet geometries = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tif (geometries === null) {\n\t\tgeometries = [];\n\t}\n\tif (Geometry.hasNullElements(geometries)) {\n\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\n\t}\n\tthis.geometries = geometries;\n}\ninherits(GeometryCollection, Geometry);\nextend(GeometryCollection.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tvar envelope = new Envelope();\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tenvelope.expandToInclude(this.geometries[i].getEnvelopeInternal());\n\t\t}\n\t\treturn envelope;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this.geometries[n];\n\t},\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_GEOMETRYCOLLECTION;\n\t},\n\tgetCoordinates: function () {\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tvar childCoordinates = this.geometries[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tarea += this.geometries[i].getArea();\n\t\t}\n\t\treturn area;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherCollection = other;\n\t\t\tif (this.geometries.length !== otherCollection.geometries.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tif (!this.geometries[i].equalsExact(otherCollection.geometries[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tthis.geometries[i].normalize();\n\t\t}\n\t\tArrays.sort(this.geometries);\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this.geometries[0].getCoordinate();\n\t},\n\tgetBoundaryDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this.geometries[i].getBoundaryDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this.geometries[i].getDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetLength: function () {\n\t\tvar sum = 0.0;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tsum += this.geometries[i].getLength();\n\t\t}\n\t\treturn sum;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = 0;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tnumPoints += this.geometries[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn this.geometries.length;\n\t},\n\treverse: function () {\n\t\tvar n = this.geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\trevGeoms[i] = this.geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this.geometries));\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o.geometries));\n\t\t\treturn this.compare(theseElements, otherElements);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar gc = o;\n\t\t\tvar n1 = this.getNumGeometries();\n\t\t\tvar n2 = gc.getNumGeometries();\n\t\t\tvar i = 0;\n\t\t\twhile (i < n1 && i < n2) {\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < n1) return 1;\n\t\t\tif (i < n2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.geometries.length === 0) return null;\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(filter);\n\t\t\t\tif (filter.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tthis.checkNotGeometryCollection(this);\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t},\n\tclone: function () {\n\t\tvar gc = Geometry.prototype.clone.call(this);\n\t\tgc.geometries = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tgc.geometries[i] = this.geometries[i].clone();\n\t\t}\n\t\treturn gc;\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"GeometryCollection\";\n\t},\n\tcopy: function () {\n\t\tvar geometries = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tgeometries[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new GeometryCollection(geometries, this.factory);\n\t},\n\tisEmpty: function () {\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tif (!this.geometries[i].isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollection;\n\t}\n});\nGeometryCollection.serialVersionUID = -5694727726395021467;\n","import Geometry from './Geometry';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function MultiLineString() {\n\tlet lineStrings = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, lineStrings, factory);\n}\ninherits(MultiLineString, GeometryCollection);\nextend(MultiLineString.prototype, {\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_MULTILINESTRING;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tif (!this.geometries[i].isClosed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\treverse: function () {\n\t\tvar nLines = this.geometries.length;\n\t\tvar revLines = new Array(nLines).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\trevLines[nLines - 1 - i] = this.geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiLineString(revLines);\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"MultiLineString\";\n\t},\n\tcopy: function () {\n\t\tvar lineStrings = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\n\t\t\tlineStrings[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new MultiLineString(lineStrings, this.factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiLineString;\n\t}\n});\nMultiLineString.serialVersionUID = 8166665132445433741;\n","import LineString from '../geom/LineString';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function BoundaryOp() {\n\tthis.geom = null;\n\tthis.geomFact = null;\n\tthis.bnRule = null;\n\tthis.endpointMap = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tBoundaryOp.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], bnRule = arguments[1];\n\t\tthis.geom = geom;\n\t\tthis.geomFact = geom.getFactory();\n\t\tthis.bnRule = bnRule;\n\t}\n}\nextend(BoundaryOp.prototype, {\n\tboundaryMultiLineString: function (mLine) {\n\t\tif (this.geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\n\t\tif (bdyPts.length === 1) {\n\t\t\treturn this.geomFact.createPoint(bdyPts[0]);\n\t\t}\n\t\treturn this.geomFact.createMultiPointFromCoords(bdyPts);\n\t},\n\tgetBoundary: function () {\n\t\tif (this.geom instanceof LineString) return this.boundaryLineString(this.geom);\n\t\tif (this.geom instanceof MultiLineString) return this.boundaryMultiLineString(this.geom);\n\t\treturn this.geom.getBoundary();\n\t},\n\tboundaryLineString: function (line) {\n\t\tif (this.geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tif (line.isClosed()) {\n\t\t\tvar closedEndpointOnBoundary = this.bnRule.isInBoundary(2);\n\t\t\tif (closedEndpointOnBoundary) {\n\t\t\t\treturn line.getStartPoint();\n\t\t\t} else {\n\t\t\t\treturn this.geomFact.createMultiPoint();\n\t\t\t}\n\t\t}\n\t\treturn this.geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n\t},\n\tgetEmptyMultiPoint: function () {\n\t\treturn this.geomFact.createMultiPoint();\n\t},\n\tcomputeBoundaryCoordinates: function (mLine) {\n\t\tvar bdyPts = new ArrayList();\n\t\tthis.endpointMap = new TreeMap();\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\n\t\t\tvar line = mLine.getGeometryN(i);\n\t\t\tif (line.getNumPoints() === 0) continue;\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n\t\t}\n\t\tfor (var it = this.endpointMap.entrySet().iterator(); it.hasNext(); ) {\n\t\t\tvar entry = it.next();\n\t\t\tvar counter = entry.getValue();\n\t\t\tvar valence = counter.count;\n\t\t\tif (this.bnRule.isInBoundary(valence)) {\n\t\t\t\tbdyPts.add(entry.getKey());\n\t\t\t}\n\t\t}\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\n\t},\n\taddEndpoint: function (pt) {\n\t\tvar counter = this.endpointMap.get(pt);\n\t\tif (counter === null) {\n\t\t\tcounter = new Counter();\n\t\t\tthis.endpointMap.put(pt, counter);\n\t\t}\n\t\tcounter.count++;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryOp;\n\t}\n});\nBoundaryOp.getBoundary = function () {\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tvar bop = new BoundaryOp(g);\n\t\treturn bop.getBoundary();\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bnRule = arguments[1];\n\t\tvar bop = new BoundaryOp(g, bnRule);\n\t\treturn bop.getBoundary();\n\t}\n};\nfunction Counter() {\n\tthis.count = null;\n}\nextend(Counter.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Counter;\n\t}\n});\n","export default function PrintStream () {}\n","export default function StringReader () {}\n","export default function DecimalFormat () {}\n","export default function ByteArrayOutputStream () {}\n","export default function IOException () {}\n","export default function LineNumberReader () {}\n","import PrintStream from '../../../../java/io/PrintStream';\nimport StringReader from '../../../../java/io/StringReader';\nimport DecimalFormat from '../../../../java/text/DecimalFormat';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream';\nimport Assert from './Assert';\nimport IOException from '../../../../java/io/IOException';\nimport LineNumberReader from '../../../../java/io/LineNumberReader';\nexport default function StringUtil() {}\nextend(StringUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn StringUtil;\n\t}\n});\nStringUtil.chars = function (c, n) {\n\tvar ch = new Array(n).fill(null);\n\tfor (var i = 0; i < n; i++) {\n\t\tch[i] = c;\n\t}\n\treturn new String(ch);\n};\nStringUtil.getStackTrace = function () {\n\tif (arguments.length === 1) {\n\t\tlet t = arguments[0];\n\t\tvar os = new ByteArrayOutputStream();\n\t\tvar ps = new PrintStream(os);\n\t\tt.printStackTrace(ps);\n\t\treturn os.toString();\n\t} else if (arguments.length === 2) {\n\t\tlet t = arguments[0], depth = arguments[1];\n\t\tvar stackTrace = \"\";\n\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(t));\n\t\tvar lineNumberReader = new LineNumberReader(stringReader);\n\t\tfor (var i = 0; i < depth; i++) {\n\t\t\ttry {\n\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof IOException) {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t} else throw e;\n\t\t\t} finally {}\n\t\t}\n\t\treturn stackTrace;\n\t}\n};\nStringUtil.split = function (s, separator) {\n\tvar separatorlen = separator.length;\n\tvar tokenList = new ArrayList();\n\tvar tmpString = \"\" + s;\n\tvar pos = tmpString.indexOf(separator);\n\twhile (pos >= 0) {\n\t\tvar token = tmpString.substring(0, pos);\n\t\ttokenList.add(token);\n\t\ttmpString = tmpString.substring(pos + separatorlen);\n\t\tpos = tmpString.indexOf(separator);\n\t}\n\tif (tmpString.length > 0) tokenList.add(tmpString);\n\tvar res = new Array(tokenList.size()).fill(null);\n\tfor (var i = 0; i < res.length; i++) {\n\t\tres[i] = tokenList.get(i);\n\t}\n\treturn res;\n};\nStringUtil.toString = function () {\n\tif (arguments.length === 1) {\n\t\tlet d = arguments[0];\n\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n\t}\n};\nStringUtil.spaces = function (n) {\n\treturn StringUtil.chars(' ', n);\n};\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport StringUtil from '../util/StringUtil';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nexport default function CoordinateSequences() {}\nextend(CoordinateSequences.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequences;\n\t}\n});\nCoordinateSequences.copyCoord = function (src, srcPos, dest, destPos) {\n\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\n\tfor (var dim = 0; dim < minDim; dim++) {\n\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n\t}\n};\nCoordinateSequences.isRing = function (seq) {\n\tvar n = seq.size();\n\tif (n === 0) return true;\n\tif (n <= 3) return false;\n\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n};\nCoordinateSequences.isEqual = function (cs1, cs2) {\n\tvar cs1Size = cs1.size();\n\tvar cs2Size = cs2.size();\n\tif (cs1Size !== cs2Size) return false;\n\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\tfor (var i = 0; i < cs1Size; i++) {\n\t\tfor (var d = 0; d < dim; d++) {\n\t\t\tvar v1 = cs1.getOrdinate(i, d);\n\t\t\tvar v2 = cs2.getOrdinate(i, d);\n\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\nCoordinateSequences.extend = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tif (n > 0) {\n\t\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n\t}\n\treturn newseq;\n};\nCoordinateSequences.reverse = function (seq) {\n\tvar last = seq.size() - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tCoordinateSequences.swap(seq, i, last - i);\n\t}\n};\nCoordinateSequences.swap = function (seq, i, j) {\n\tif (i === j) return null;\n\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\n\t\tvar tmp = seq.getOrdinate(i, dim);\n\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n\t\tseq.setOrdinate(j, dim, tmp);\n\t}\n};\nCoordinateSequences.copy = function (src, srcPos, dest, destPos, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n\t}\n};\nCoordinateSequences.toString = function () {\n\tif (arguments.length === 1) {\n\t\tlet cs = arguments[0];\n\t\tvar size = cs.size();\n\t\tif (size === 0) return \"()\";\n\t\tvar dim = cs.getDimension();\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append('(');\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif (i > 0) buf.append(\" \");\n\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\tif (d > 0) buf.append(\",\");\n\t\t\t\tbuf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n\t\t\t}\n\t\t}\n\t\tbuf.append(')');\n\t\treturn buf.toString();\n\t}\n};\nCoordinateSequences.ensureValidRing = function (fact, seq) {\n\tvar n = seq.size();\n\tif (n === 0) return seq;\n\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\tif (isClosed) return seq;\n\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\n};\nCoordinateSequences.createClosedRing = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1);\n\treturn newseq;\n};\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\nimport Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport CoordinateSequences from './CoordinateSequences';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport inherits from '../../../../inherits';\nexport default function LineString() {\n\tthis.points = null;\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(points);\n}\ninherits(LineString, Geometry);\nextend(LineString.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\treturn this.points.expandEnvelope(new Envelope());\n\t},\n\tisRing: function () {\n\t\treturn this.isClosed() && this.isSimple();\n\t},\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_LINESTRING;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.points.toCoordinateArray();\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherLineString = other;\n\t\t\tif (this.points.size() !== otherLineString.points.size()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\t\tif (!this.equal(this.points.getCoordinate(i), otherLineString.points.getCoordinate(i), tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < Math.trunc(this.points.size() / 2); i++) {\n\t\t\tvar j = this.points.size() - 1 - i;\n\t\t\tif (!this.points.getCoordinate(i).equals(this.points.getCoordinate(j))) {\n\t\t\t\tif (this.points.getCoordinate(i).compareTo(this.points.getCoordinate(j)) > 0) {\n\t\t\t\t\tCoordinateSequences.reverse(this.points);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this.points.getCoordinate(0);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n\t},\n\tgetEndPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(this.getNumPoints() - 1);\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\tgetLength: function () {\n\t\treturn CGAlgorithms.computeLength(this.points);\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.points.size();\n\t},\n\treverse: function () {\n\t\tvar seq = this.points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar revLine = this.getFactory().createLineString(seq);\n\t\treturn revLine;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar line = o;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\twhile (i < this.points.size() && j < line.points.size()) {\n\t\t\t\tvar comparison = this.points.getCoordinate(i).compareTo(line.points.getCoordinate(j));\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn comparison;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (i < this.points.size()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (j < line.points.size()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar line = o;\n\t\t\treturn comp.compare(this.points, line.points);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\t\tfilter.filter(this.points.getCoordinate(i));\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.points.size() === 0) return null;\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\t\tfilter.filter(this.points, i);\n\t\t\t\tif (filter.isDone()) break;\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tisEquivalentClass: function (other) {\n\t\treturn other instanceof LineString;\n\t},\n\tclone: function () {\n\t\tvar ls = Geometry.prototype.clone.call(this);\n\t\tls.points = this.points.clone();\n\t\treturn ls;\n\t},\n\tgetCoordinateN: function (n) {\n\t\treturn this.points.getCoordinate(n);\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"LineString\";\n\t},\n\tcopy: function () {\n\t\treturn new LineString(this.points.copy(), this.factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this.points;\n\t},\n\tisEmpty: function () {\n\t\treturn this.points.size() === 0;\n\t},\n\tinit: function (points) {\n\t\tif (points === null) {\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tif (points.size() === 1) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n\t\t}\n\t\tthis.points = points;\n\t},\n\tisCoordinate: function (pt) {\n\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\tif (this.points.getCoordinate(i).equals(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetStartPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(0);\n\t},\n\tgetPointN: function (n) {\n\t\treturn this.getFactory().createPoint(this.points.getCoordinate(n));\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn LineString;\n\t}\n});\nLineString.serialVersionUID = 3110669828065365560;\n","import extend from '../../../../extend';\nexport default function Puntal() {}\nextend(Puntal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Puntal;\n\t}\n});\n","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Puntal from './Puntal';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function Point() {\n\tthis.coordinates = null;\n\tlet coordinates = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(coordinates);\n}\ninherits(Point, Geometry);\nextend(Point.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\tvar env = new Envelope();\n\t\tenv.expandToInclude(this.coordinates.getX(0), this.coordinates.getY(0));\n\t\treturn env;\n\t},\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_POINT;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {},\n\tgetCoordinate: function () {\n\t\treturn this.coordinates.size() !== 0 ? this.coordinates.getCoordinate(0) : null;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.isEmpty() ? 0 : 1;\n\t},\n\treverse: function () {\n\t\treturn this.copy();\n\t},\n\tgetX: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().x;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tvar point = other;\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet other = arguments[0], comp = arguments[1];\n\t\t\tvar point = other;\n\t\t\treturn comp.compare(this.coordinates, point.coordinates);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfilter.filter(this.getCoordinate());\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) return null;\n\t\t\tfilter.filter(this.coordinates, 0);\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection(null);\n\t},\n\tclone: function () {\n\t\tvar p = Geometry.prototype.clone.call(this);\n\t\tp.coordinates = this.coordinates.clone();\n\t\treturn p;\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"Point\";\n\t},\n\tcopy: function () {\n\t\treturn new Point(this.coordinates.copy(), this.factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this.coordinates;\n\t},\n\tgetY: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().y;\n\t},\n\tisEmpty: function () {\n\t\treturn this.coordinates.size() === 0;\n\t},\n\tinit: function (coordinates) {\n\t\tif (coordinates === null) {\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tAssert.isTrue(coordinates.size() <= 1);\n\t\tthis.coordinates = coordinates;\n\t},\n\tisSimple: function () {\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn Point;\n\t}\n});\nPoint.serialVersionUID = 4902022702746614570;\n","import extend from '../../../../extend';\nexport default function Polygonal() {}\nextend(Polygonal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Polygonal;\n\t}\n});\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport CoordinateArrays from './CoordinateArrays';\nimport Polygonal from './Polygonal';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport inherits from '../../../../inherits';\nexport default function Polygon() {\n\tthis.shell = null;\n\tthis.holes = null;\n\tlet shell = arguments[0], holes = arguments[1], factory = arguments[2];\n\tGeometry.call(this, factory);\n\tif (shell === null) {\n\t\tshell = this.getFactory().createLinearRing();\n\t}\n\tif (holes === null) {\n\t\tholes = [];\n\t}\n\tif (Geometry.hasNullElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\n\t}\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\n\t}\n\tthis.shell = shell;\n\tthis.holes = holes;\n}\ninherits(Polygon, Geometry);\nextend(Polygon.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\treturn this.shell.getEnvelopeInternal();\n\t},\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_POLYGON;\n\t},\n\tgetCoordinates: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn [];\n\t\t}\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tvar shellCoordinates = this.shell.getCoordinates();\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\n\t\t\tk++;\n\t\t\tcoordinates[k] = shellCoordinates[x];\n\t\t}\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tvar childCoordinates = this.holes[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tarea += Math.abs(CGAlgorithms.signedArea(this.shell.getCoordinateSequence()));\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tarea -= Math.abs(CGAlgorithms.signedArea(this.holes[i].getCoordinateSequence()));\n\t\t}\n\t\treturn area;\n\t},\n\tisRectangle: function () {\n\t\tif (this.getNumInteriorRing() !== 0) return false;\n\t\tif (this.shell === null) return false;\n\t\tif (this.shell.getNumPoints() !== 5) return false;\n\t\tvar seq = this.shell.getCoordinateSequence();\n\t\tvar env = this.getEnvelopeInternal();\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\n\t\t\tvar y = seq.getY(i);\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\n\t\t}\n\t\tvar prevX = seq.getX(0);\n\t\tvar prevY = seq.getY(0);\n\t\tfor (var i = 1; i <= 4; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tvar y = seq.getY(i);\n\t\t\tvar xChanged = x !== prevX;\n\t\t\tvar yChanged = y !== prevY;\n\t\t\tif (xChanged === yChanged) return false;\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherPolygon = other;\n\t\t\tvar thisShell = this.shell;\n\t\t\tvar otherPolygonShell = otherPolygon.shell;\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.holes.length !== otherPolygon.holes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tif (!this.holes[i].equalsExact(otherPolygon.holes[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.normalize(this.shell, true);\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tthis.normalize(this.holes[i], false);\n\t\t\t}\n\t\t\tArrays.sort(this.holes);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ring = arguments[0], clockwise = arguments[1];\n\t\t\tif (ring.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\t\t\tif (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.shell.getCoordinate();\n\t},\n\tgetNumInteriorRing: function () {\n\t\treturn this.holes.length;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\tgetLength: function () {\n\t\tvar len = 0.0;\n\t\tlen += this.shell.getLength();\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tlen += this.holes[i].getLength();\n\t\t}\n\t\treturn len;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = this.shell.getNumPoints();\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tnumPoints += this.holes[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\treverse: function () {\n\t\tvar poly = this.copy();\n\t\tpoly.shell = this.shell.copy().reverse();\n\t\tpoly.holes = new Array(this.holes.length).fill(null);\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tpoly.holes[i] = this.holes[i].copy().reverse();\n\t\t}\n\t\treturn poly;\n\t},\n\tconvexHull: function () {\n\t\treturn this.getExteriorRing().convexHull();\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar thisShell = this.shell;\n\t\t\tvar otherShell = o.shell;\n\t\t\treturn thisShell.compareToSameClass(otherShell);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar poly = o;\n\t\t\tvar thisShell = this.shell;\n\t\t\tvar otherShell = poly.shell;\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\n\t\t\tif (shellComp !== 0) return shellComp;\n\t\t\tvar nHole1 = this.getNumInteriorRing();\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\n\t\t\tvar i = 0;\n\t\t\twhile (i < nHole1 && i < nHole2) {\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < nHole1) return 1;\n\t\t\tif (i < nHole2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis.shell.apply(filter);\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tthis.holes[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis.shell.apply(filter);\n\t\t\tif (!filter.isDone()) {\n\t\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\t\tthis.holes[i].apply(filter);\n\t\t\t\t\tif (filter.isDone()) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tthis.shell.apply(filter);\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tthis.holes[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar rings = new Array(this.holes.length + 1).fill(null);\n\t\trings[0] = this.shell;\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\trings[i + 1] = this.holes[i];\n\t\t}\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n\t\treturn this.getFactory().createMultiLineString(rings);\n\t},\n\tclone: function () {\n\t\tvar poly = Geometry.prototype.clone.call(this);\n\t\tpoly.shell = this.shell.clone();\n\t\tpoly.holes = new Array(this.holes.length).fill(null);\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tpoly.holes[i] = this.holes[i].clone();\n\t\t}\n\t\treturn poly;\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"Polygon\";\n\t},\n\tcopy: function () {\n\t\tvar shell = this.shell.copy();\n\t\tvar holes = new Array(this.holes.length).fill(null);\n\t\tfor (var i = 0; i < holes.length; i++) {\n\t\t\tholes[i] = this.holes[i].copy();\n\t\t}\n\t\treturn new Polygon(shell, holes, this.factory);\n\t},\n\tgetExteriorRing: function () {\n\t\treturn this.shell;\n\t},\n\tisEmpty: function () {\n\t\treturn this.shell.isEmpty();\n\t},\n\tgetInteriorRingN: function (n) {\n\t\treturn this.holes[n];\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn Polygon;\n\t}\n});\nPolygon.serialVersionUID = -3494792200821764533;\n","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport Puntal from './Puntal';\nimport inherits from '../../../../inherits';\nexport default function MultiPoint() {\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, points, factory);\n}\ninherits(MultiPoint, GeometryCollection);\nextend(MultiPoint.prototype, {\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_MULTIPOINT;\n\t},\n\tisValid: function () {\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet n = arguments[0];\n\t\t\treturn this.geometries[n].getCoordinate();\n\t\t} else return GeometryCollection.prototype.getCoordinate.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection(null);\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"MultiPoint\";\n\t},\n\tcopy: function () {\n\t\tvar points = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoints[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new MultiPoint(points, this.factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPoint;\n\t}\n});\nMultiPoint.serialVersionUID = -8048474874175355449;\n","import LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from './GeometryFactory';\nimport Coordinate from './Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function LinearRing() {\n\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLinearRing.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLineString.call(this, points, factory);\n\t\tthis.validateConstruction();\n\t}\n}\ninherits(LinearRing, LineString);\nextend(LinearRing.prototype, {\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_LINEARRING;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn LineString.prototype.isClosed.call(this);\n\t},\n\treverse: function () {\n\t\tvar seq = this.points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar rev = this.getFactory().createLinearRing(seq);\n\t\treturn rev;\n\t},\n\tvalidateConstruction: function () {\n\t\tif (!this.isEmpty() && !LineString.prototype.isClosed.call(this)) {\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n\t\t}\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n\t\t}\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"LinearRing\";\n\t},\n\tcopy: function () {\n\t\treturn new LinearRing(this.points.copy(), this.factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearRing;\n\t}\n});\nLinearRing.MINIMUM_VALID_SIZE = 4;\nLinearRing.serialVersionUID = -4261142084085851829;\n","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Polygonal from './Polygonal';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function MultiPolygon() {\n\tlet polygons = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, polygons, factory);\n}\ninherits(MultiPolygon, GeometryCollection);\nextend(MultiPolygon.prototype, {\n\tgetSortIndex: function () {\n\t\treturn Geometry.SORTINDEX_MULTIPOLYGON;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\treverse: function () {\n\t\tvar n = this.geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\trevGeoms[i] = this.geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar allRings = new ArrayList();\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tvar polygon = this.geometries[i];\n\t\t\tvar rings = polygon.getBoundary();\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\n\t\t\t\tallRings.add(rings.getGeometryN(j));\n\t\t\t}\n\t\t}\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n\t},\n\tgetGeometryType: function () {\n\t\treturn \"MultiPolygon\";\n\t},\n\tcopy: function () {\n\t\tvar polygons = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < polygons.length; i++) {\n\t\t\tpolygons[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new MultiPolygon(polygons, this.factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPolygon;\n\t}\n});\nMultiPolygon.serialVersionUID = -551033529766975875;\n","import LineString from '../LineString';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport MultiLineString from '../MultiLineString';\nexport default function GeometryEditor() {\n\tthis.factory = null;\n\tthis.isUserDataCopied = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet factory = arguments[0];\n\t\tthis.factory = factory;\n\t}\n}\nextend(GeometryEditor.prototype, {\n\tsetCopyUserData: function (isUserDataCopied) {\n\t\tthis.isUserDataCopied = isUserDataCopied;\n\t},\n\tedit: function (geometry, operation) {\n\t\tif (geometry === null) return null;\n\t\tvar result = this.editInternal(geometry, operation);\n\t\tif (this.isUserDataCopied) {\n\t\t\tresult.setUserData(geometry.getUserData());\n\t\t}\n\t\treturn result;\n\t},\n\teditInternal: function (geometry, operation) {\n\t\tif (this.factory === null) this.factory = geometry.getFactory();\n\t\tif (geometry instanceof GeometryCollection) {\n\t\t\treturn this.editGeometryCollection(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Polygon) {\n\t\t\treturn this.editPolygon(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn operation.edit(geometry, this.factory);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn operation.edit(geometry, this.factory);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n\t\treturn null;\n\t},\n\teditGeometryCollection: function (collection, operation) {\n\t\tvar collectionForType = operation.edit(collection, this.factory);\n\t\tvar geometries = new ArrayList();\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\t\t\tif (geometry === null || geometry.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgeometries.add(geometry);\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPoint) {\n\t\t\treturn this.factory.createMultiPoint(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiLineString) {\n\t\t\treturn this.factory.createMultiLineString(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPolygon) {\n\t\t\treturn this.factory.createMultiPolygon(geometries.toArray([]));\n\t\t}\n\t\treturn this.factory.createGeometryCollection(geometries.toArray([]));\n\t},\n\teditPolygon: function (polygon, operation) {\n\t\tvar newPolygon = operation.edit(polygon, this.factory);\n\t\tif (newPolygon === null) newPolygon = this.factory.createPolygon(null);\n\t\tif (newPolygon.isEmpty()) {\n\t\t\treturn newPolygon;\n\t\t}\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\n\t\tif (shell === null || shell.isEmpty()) {\n\t\t\treturn this.factory.createPolygon();\n\t\t}\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tholes.add(hole);\n\t\t}\n\t\treturn this.factory.createPolygon(shell, holes.toArray([]));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryEditor;\n\t}\n});\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\nfunction NoOpGeometryOperation() {}\nextend(NoOpGeometryOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn NoOpGeometryOperation;\n\t}\n});\nfunction CoordinateOperation() {}\nextend(CoordinateOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tvar coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n\t\tif (coords === null) return geometry;\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(coords);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(coords);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\tif (coords.length > 0) {\n\t\t\t\treturn factory.createPoint(coords[0]);\n\t\t\t} else {\n\t\t\t\treturn factory.createPoint();\n\t\t\t}\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateOperation;\n\t}\n});\nfunction CoordinateSequenceOperation() {}\nextend(CoordinateSequenceOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceOperation;\n\t}\n});\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\nGeometryEditor.CoordinateOperation = CoordinateOperation;\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\n","import StringBuffer from '../../../../../java/lang/StringBuffer';\nimport hasInterface from '../../../../../hasInterface';\nimport Coordinate from '../Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function CoordinateArraySequence() {\n\tthis.dimension = 3;\n\tthis.coordinates = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coordinates = arguments[0];\n\t\t\tCoordinateArraySequence.call(this, coordinates, 3);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet size = arguments[0];\n\t\t\tthis.coordinates = new Array(size).fill(null);\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis.coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet coordSeq = arguments[0];\n\t\t\tif (coordSeq === null) {\n\t\t\t\tthis.coordinates = new Array(0).fill(null);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.dimension = coordSeq.getDimension();\n\t\t\tthis.coordinates = new Array(coordSeq.size()).fill(null);\n\t\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\t\tthis.coordinates[i] = coordSeq.getCoordinateCopy(i);\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n\t\t\tlet coordinates = arguments[0], dimension = arguments[1];\n\t\t\tthis.coordinates = coordinates;\n\t\t\tthis.dimension = dimension;\n\t\t\tif (coordinates === null) this.coordinates = new Array(0).fill(null);\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tthis.coordinates = new Array(size).fill(null);\n\t\t\tthis.dimension = dimension;\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis.coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t}\n\t}\n}\nextend(CoordinateArraySequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\tthis.coordinates[index].x = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\tthis.coordinates[index].y = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\tthis.coordinates[index].z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\n\t\t}\n\t},\n\tsize: function () {\n\t\treturn this.coordinates.length;\n\t},\n\tgetOrdinate: function (index, ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\treturn this.coordinates[index].x;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\treturn this.coordinates[index].y;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\treturn this.coordinates[index].z;\n\t\t}\n\t\treturn Double.NaN;\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this.coordinates[i];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t\tcoord.x = this.coordinates[index].x;\n\t\t\tcoord.y = this.coordinates[index].y;\n\t\t\tcoord.z = this.coordinates[index].z;\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {\n\t\treturn new Coordinate(this.coordinates[i]);\n\t},\n\tgetDimension: function () {\n\t\treturn this.dimension;\n\t},\n\tgetX: function (index) {\n\t\treturn this.coordinates[index].x;\n\t},\n\tclone: function () {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this.coordinates[i].clone();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this.dimension);\n\t},\n\texpandEnvelope: function (env) {\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\tenv.expandToInclude(this.coordinates[i]);\n\t\t}\n\t\treturn env;\n\t},\n\tcopy: function () {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this.coordinates[i].copy();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this.dimension);\n\t},\n\ttoString: function () {\n\t\tif (this.coordinates.length > 0) {\n\t\t\tvar strBuf = new StringBuffer(17 * this.coordinates.length);\n\t\t\tstrBuf.append('(');\n\t\t\tstrBuf.append(this.coordinates[0]);\n\t\t\tfor (var i = 1; i < this.coordinates.length; i++) {\n\t\t\t\tstrBuf.append(\", \");\n\t\t\t\tstrBuf.append(this.coordinates[i]);\n\t\t\t}\n\t\t\tstrBuf.append(')');\n\t\t\treturn strBuf.toString();\n\t\t} else {\n\t\t\treturn \"()\";\n\t\t}\n\t},\n\tgetY: function (index) {\n\t\treturn this.coordinates[index].y;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this.coordinates;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequence, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequence;\n\t}\n});\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory';\nimport hasInterface from '../../../../../hasInterface';\nimport CoordinateArraySequence from './CoordinateArraySequence';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function CoordinateArraySequenceFactory() {}\nextend(CoordinateArraySequenceFactory.prototype, {\n\treadResolve: function () {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t},\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tif (dimension > 3) dimension = 3;\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\n\t\t\treturn new CoordinateArraySequence(size, dimension);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFactory, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequenceFactory;\n\t}\n});\nCoordinateArraySequenceFactory.instance = function () {\n\treturn CoordinateArraySequenceFactory.instanceObject;\n};\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n","// shared pointer\nvar i\n// shortcuts\nvar defineProperty = Object.defineProperty\nfunction is (a, b) { return (a === b) || (a !== a && b !== b) } // eslint-disable-line\n\nexport default createCollection({\n  // WeakMap#delete(key:void*):boolean\n  'delete': sharedDelete,\n  // :was Map#get(key:void*[, d3fault:void*]):void*\n  // Map#has(key:void*):boolean\n  has: mapHas,\n  // Map#get(key:void*):boolean\n  get: sharedGet,\n  // Map#set(key:void*, value:void*):void\n  set: sharedSet,\n  // Map#keys(void):Iterator\n  keys: sharedKeys,\n  // Map#values(void):Iterator\n  values: sharedValues,\n  // Map#entries(void):Iterator\n  entries: mapEntries,\n  // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n  forEach: sharedForEach,\n  // Map#clear():\n  clear: sharedClear\n})\n\n/**\n * ES6 collection constructor\n * @return {Function} a collection class\n */\nfunction createCollection (proto, objectOnly) {\n  function Collection (a) {\n    if (!this || this.constructor !== Collection) return new Collection(a)\n    this._keys = []\n    this._values = []\n    this._itp = [] // iteration pointers\n    this.objectOnly = objectOnly\n\n    // parse initial iterable argument passed\n    if (a) init.call(this, a)\n  }\n\n  // define size for non object-only collections\n  if (!objectOnly) {\n    defineProperty(proto, 'size', {\n      get: sharedSize\n    })\n  }\n\n  // set prototype\n  proto.constructor = Collection\n  Collection.prototype = proto\n\n  return Collection\n}\n\n/** parse initial iterable argument passed */\nfunction init (a) {\n  // init Set argument, like `[1,2,3,{}]`\n  if (this.add) a.forEach(this.add, this)\n  // init Map argument like `[[1,2], [{}, 4]]`\n  else a.forEach(function (a) { this.set(a[0], a[1]) }, this)\n}\n\n/** delete */\nfunction sharedDelete (key) {\n  if (this.has(key)) {\n    this._keys.splice(i, 1)\n    this._values.splice(i, 1)\n    // update iteration pointers\n    this._itp.forEach(function (p) { if (i < p[0]) p[0]-- })\n  }\n  // Aurora here does it while Canary doesn't\n  return i > -1\n}\n\nfunction sharedGet (key) {\n  return this.has(key) ? this._values[i] : undefined\n}\n\nfunction has (list, key) {\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key')\n  // NaN or 0 passed\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\n  else i = list.indexOf(key)\n  return i > -1\n}\n\nfunction mapHas (value) {\n  return has.call(this, this._keys, value)\n}\n\n/** @chainable */\nfunction sharedSet (key, value) {\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value\n  return this\n}\n\nfunction sharedClear () {\n  (this._keys || 0).length =\n    this._values.length = 0\n}\n\n/** keys, values, and iterate related methods */\nfunction sharedKeys () {\n  return sharedIterator(this._itp, this._keys)\n}\n\nfunction sharedValues () {\n  return sharedIterator(this._itp, this._values)\n}\n\nfunction mapEntries () {\n  return sharedIterator(this._itp, this._keys, this._values)\n}\n\nfunction sharedIterator (itp, array, array2) {\n  var p = [0]\n  var done = false\n  itp.push(p)\n  return {\n    next: function () {\n      var v\n      var k = p[0]\n      if (!done && k < array.length) {\n        v = array2 ? [array[k], array2[k]] : array[k]\n        p[0]++\n      } else {\n        done = true\n        itp.splice(itp.indexOf(p), 1)\n      }\n      return { done: done, value: v }\n    }\n  }\n}\n\nfunction sharedSize () {\n  return this._values.length\n}\n\nfunction sharedForEach (callback, context) {\n  var it = this.entries()\n  for (;;) {\n    var r = it.next()\n    if (r.done) break\n    callback.call(context, r.value[1], r.value[0], this)\n  }\n}\n","import ArrayList from './ArrayList'\nimport MapInterface from './Map'\nimport HashSet from './HashSet'\nimport MapPolyfill from '../../Map'\n\nlet MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nexport default function HashMap () {\n  /**\n   * @type {Object}\n   * @private\n  */\n  this.map_ = new MapImpl()\n}\nHashMap.prototype = new MapInterface()\n\n/**\n * @override\n */\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null\n}\n\n/**\n * @override\n */\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value)\n  return value\n}\n\n/**\n * @override\n */\nHashMap.prototype.values = function () {\n  const arrayList = new ArrayList()\n  const it = this.map_.values()\n  let o = it.next()\n  while (!o.done) {\n    arrayList.add(o.value)\n    o = it.next()\n  }\n  return arrayList\n}\n\n/**\n * @override\n */\nHashMap.prototype.entrySet = function () {\n  const hashSet = new HashSet()\n  this.map_.entries().forEach(entry => hashSet.add(entry))\n  return hashSet\n}\n\n/**\n * @override\n */\nHashMap.prototype.size = function () {\n  return this.map_.size()\n}\n","import HashMap from '../../../../java/util/HashMap';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function PrecisionModel() {\n\tthis.modelType = null;\n\tthis.scale = null;\n\tif (arguments.length === 0) {\n\t\tthis.modelType = PrecisionModel.FLOATING;\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Type) {\n\t\t\tlet modelType = arguments[0];\n\t\t\tthis.modelType = modelType;\n\t\t\tif (modelType === PrecisionModel.FIXED) {\n\t\t\t\tthis.setScale(1.0);\n\t\t\t}\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet scale = arguments[0];\n\t\t\tthis.modelType = PrecisionModel.FIXED;\n\t\t\tthis.setScale(scale);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet pm = arguments[0];\n\t\t\tthis.modelType = pm.modelType;\n\t\t\tthis.scale = pm.scale;\n\t\t}\n\t}\n}\nextend(PrecisionModel.prototype, {\n\tequals: function (other) {\n\t\tif (!(other instanceof PrecisionModel)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherPrecisionModel = other;\n\t\treturn this.modelType === otherPrecisionModel.modelType && this.scale === otherPrecisionModel.scale;\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n\t},\n\tgetScale: function () {\n\t\treturn this.scale;\n\t},\n\tisFloating: function () {\n\t\treturn this.modelType === PrecisionModel.FLOATING || this.modelType === PrecisionModel.FLOATING_SINGLE;\n\t},\n\tgetType: function () {\n\t\treturn this.modelType;\n\t},\n\ttoString: function () {\n\t\tvar description = \"UNKNOWN\";\n\t\tif (this.modelType === PrecisionModel.FLOATING) {\n\t\t\tdescription = \"Floating\";\n\t\t} else if (this.modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tdescription = \"Floating-Single\";\n\t\t} else if (this.modelType === PrecisionModel.FIXED) {\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\n\t\t}\n\t\treturn description;\n\t},\n\tmakePrecise: function () {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet val = arguments[0];\n\t\t\tif (Double.isNaN(val)) return val;\n\t\t\tif (this.modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\t\tvar floatSingleVal = val;\n\t\t\t\treturn floatSingleVal;\n\t\t\t}\n\t\t\tif (this.modelType === PrecisionModel.FIXED) {\n\t\t\t\treturn Math.round(val * this.scale) / this.scale;\n\t\t\t}\n\t\t\treturn val;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tif (this.modelType === PrecisionModel.FLOATING) return null;\n\t\t\tcoord.x = this.makePrecise(coord.x);\n\t\t\tcoord.y = this.makePrecise(coord.y);\n\t\t}\n\t},\n\tgetMaximumSignificantDigits: function () {\n\t\tvar maxSigDigits = 16;\n\t\tif (this.modelType === PrecisionModel.FLOATING) {\n\t\t\tmaxSigDigits = 16;\n\t\t} else if (this.modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tmaxSigDigits = 6;\n\t\t} else if (this.modelType === PrecisionModel.FIXED) {\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n\t\t}\n\t\treturn maxSigDigits;\n\t},\n\tsetScale: function (scale) {\n\t\tthis.scale = Math.abs(scale);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn PrecisionModel;\n\t}\n});\nPrecisionModel.mostPrecise = function (pm1, pm2) {\n\tif (pm1.compareTo(pm2) >= 0) return pm1;\n\treturn pm2;\n};\nfunction Type() {\n\tthis.name = null;\n\tlet name = arguments[0];\n\tthis.name = name;\n\tType.nameToTypeMap.put(name, this);\n}\nextend(Type.prototype, {\n\treadResolve: function () {\n\t\treturn Type.nameToTypeMap.get(this.name);\n\t},\n\ttoString: function () {\n\t\treturn this.name;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Type;\n\t}\n});\nType.serialVersionUID = -5528602631731589822;\nType.nameToTypeMap = new HashMap();\nPrecisionModel.Type = Type;\nPrecisionModel.serialVersionUID = 7777263578777803835;\nPrecisionModel.FIXED = new Type(\"FIXED\");\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory';\nimport LineString from './LineString';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from './Coordinate';\nimport Point from './Point';\nimport Polygon from './Polygon';\nimport MultiPoint from './MultiPoint';\nimport GeometryEditor from './util/GeometryEditor';\nimport LinearRing from './LinearRing';\nimport extend from '../../../../extend';\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory';\nimport MultiPolygon from './MultiPolygon';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport GeometryCollection from './GeometryCollection';\nimport PrecisionModel from './PrecisionModel';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nimport MultiLineString from './MultiLineString';\nexport default function GeometryFactory() {\n\tthis.precisionModel = null;\n\tthis.coordinateSequenceFactory = null;\n\tthis.SRID = null;\n\tif (arguments.length === 0) {\n\t\tGeometryFactory.call(this, new PrecisionModel(), 0);\n\t} else if (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n\t\t\tlet coordinateSequenceFactory = arguments[0];\n\t\t\tGeometryFactory.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet precisionModel = arguments[0];\n\t\t\tGeometryFactory.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1];\n\t\tGeometryFactory.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t} else if (arguments.length === 3) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2];\n\t\tthis.precisionModel = precisionModel;\n\t\tthis.coordinateSequenceFactory = coordinateSequenceFactory;\n\t\tthis.SRID = SRID;\n\t}\n}\nextend(GeometryFactory.prototype, {\n\ttoGeometry: function (envelope) {\n\t\tif (envelope.isNull()) {\n\t\t\treturn this.createPoint(null);\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n\t\t}\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n\t},\n\tcreateLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LineString(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiLineString(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet lineStrings = arguments[0];\n\t\t\treturn new MultiLineString(lineStrings, this);\n\t\t}\n\t},\n\tbuildGeometry: function (geomList) {\n\t\tvar geomClass = null;\n\t\tvar isHeterogeneous = false;\n\t\tvar hasGeometryCollection = false;\n\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\tvar geom = i.next();\n\t\t\tvar partClass = geom.getClass();\n\t\t\tif (geomClass === null) {\n\t\t\t\tgeomClass = partClass;\n\t\t\t}\n\t\t\tif (partClass !== geomClass) {\n\t\t\t\tisHeterogeneous = true;\n\t\t\t}\n\t\t\tif (geom.isGeometryCollectionOrDerived()) hasGeometryCollection = true;\n\t\t}\n\t\tif (geomClass === null) {\n\t\t\treturn this.createGeometryCollection();\n\t\t}\n\t\tif (isHeterogeneous || hasGeometryCollection) {\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n\t\t}\n\t\tvar geom0 = geomList.iterator().next();\n\t\tvar isCollection = geomList.size() > 1;\n\t\tif (isCollection) {\n\t\t\tif (geom0 instanceof Polygon) {\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n\t\t\t} else if (geom0 instanceof LineString) {\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n\t\t\t} else if (geom0 instanceof Point) {\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n\t\t\t}\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n\t\t}\n\t\treturn geom0;\n\t},\n\tcreateMultiPointFromCoords: function (coordinates) {\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t},\n\tcreatePoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet coordinate = arguments[0];\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new Point(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinateSequenceFactory: function () {\n\t\treturn this.coordinateSequenceFactory;\n\t},\n\tcreatePolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new Polygon(null, null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(coordinates));\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(coordinates));\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(shell, null);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet shell = arguments[0], holes = arguments[1];\n\t\t\treturn new Polygon(shell, holes, this);\n\t\t}\n\t},\n\tgetSRID: function () {\n\t\treturn this.SRID;\n\t},\n\tcreateGeometryCollection: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new GeometryCollection(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geometries = arguments[0];\n\t\t\treturn new GeometryCollection(geometries, this);\n\t\t}\n\t},\n\tcreateGeometry: function (g) {\n\t\tvar editor = new GeometryEditor(this);\n\t\treturn editor.edit(g, {\n\t\t\tedit: function () {\n\t\t\t\tif (arguments.length === 2) {\n\t\t\t\t\tlet coordSeq = arguments[0], geometry = arguments[1];\n\t\t\t\t\treturn this.coordinateSequenceFactory.create(coordSeq);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this.precisionModel;\n\t},\n\tcreateLinearRing: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LinearRing(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiPolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPolygon(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet polygons = arguments[0];\n\t\t\treturn new MultiPolygon(polygons, this);\n\t\t}\n\t},\n\tcreateMultiPoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPoint(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet point = arguments[0];\n\t\t\t\treturn new MultiPoint(point, this);\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\tif (coordinates === null) {\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\n\t\t\t\t}\n\t\t\t\tvar points = new Array(coordinates.size()).fill(null);\n\t\t\t\tfor (var i = 0; i < coordinates.size(); i++) {\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\n\t\t\t\t\tCoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\n\t\t\t\t}\n\t\t\t\treturn this.createMultiPoint(points);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFactory;\n\t}\n});\nGeometryFactory.toMultiPolygonArray = function (multiPolygons) {\n\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n\treturn multiPolygons.toArray(multiPolygonArray);\n};\nGeometryFactory.toGeometryArray = function (geometries) {\n\tif (geometries === null) return null;\n\tvar geometryArray = new Array(geometries.size()).fill(null);\n\treturn geometries.toArray(geometryArray);\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function () {\n\treturn CoordinateArraySequenceFactory.instance();\n};\nGeometryFactory.toMultiLineStringArray = function (multiLineStrings) {\n\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n\treturn multiLineStrings.toArray(multiLineStringArray);\n};\nGeometryFactory.toLineStringArray = function (lineStrings) {\n\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\n\treturn lineStrings.toArray(lineStringArray);\n};\nGeometryFactory.toMultiPointArray = function (multiPoints) {\n\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\n\treturn multiPoints.toArray(multiPointArray);\n};\nGeometryFactory.toLinearRingArray = function (linearRings) {\n\tvar linearRingArray = new Array(linearRings.size()).fill(null);\n\treturn linearRings.toArray(linearRingArray);\n};\nGeometryFactory.toPointArray = function (points) {\n\tvar pointArray = new Array(points.size()).fill(null);\n\treturn points.toArray(pointArray);\n};\nGeometryFactory.toPolygonArray = function (polygons) {\n\tvar polygonArray = new Array(polygons.size()).fill(null);\n\treturn polygons.toArray(polygonArray);\n};\nGeometryFactory.createPointFromInternalCoord = function (coord, exemplar) {\n\texemplar.getPrecisionModel().makePrecise(coord);\n\treturn exemplar.getFactory().createPoint(coord);\n};\nGeometryFactory.serialVersionUID = -6820524753094095635;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nexport default function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n}\n\nextend(WKTParser.prototype, {\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read (wkt) {\n    var geometry, type, str\n    wkt = wkt.replace(/[\\n\\r]/g, ' ')\n    var matches = regExes.typeStr.exec(wkt)\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt)\n      matches[2] = undefined\n    }\n    if (matches) {\n      type = matches[1].toLowerCase()\n      str = matches[2]\n      if (parse[type]) {\n        geometry = parse[type].apply(this, [str])\n      }\n    }\n\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt)\n\n    return geometry\n  },\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write (geometry) {\n    return this.extractGeometry(geometry)\n  },\n\n  /**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */\n  extractGeometry (geometry) {\n    var type = geometry.getGeometryType().toLowerCase()\n    if (!extract[type]) {\n      return null\n    }\n    var wktType = type.toUpperCase()\n    var data\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY'\n    } else {\n      data = wktType + '(' + extract[type].apply(this, [geometry]) + ')'\n    }\n    return data\n  }\n})\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nconst extract = {\n  coordinate (coordinate) {\n    return coordinate.x + ' ' + coordinate.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point (point) {\n    return extract.coordinate.call(this, point.coordinates.coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint (multipoint) {\n    var array = []\n    for (let i = 0, len = multipoint.geometries.length; i < len; ++i) {\n      array.push('(' + extract.point.apply(this, [multipoint.geometries[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring (linestring) {\n    var array = []\n    for (let i = 0, len = linestring.points.coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [linestring.points.coordinates[i]]))\n    }\n    return array.join(',')\n  },\n\n  linearring (linearring) {\n    var array = []\n    for (let i = 0, len = linearring.points.coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [linearring.points.coordinates[i]]))\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring (multilinestring) {\n    var array = []\n    for (let i = 0, len = multilinestring.geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract.linestring.apply(this, [multilinestring.geometries[i]]) +\n        ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon (polygon) {\n    var array = []\n    array.push('(' + extract.linestring.apply(this, [polygon.shell]) + ')')\n    for (let i = 0, len = polygon.holes.length; i < len; ++i) {\n      array.push('(' + extract.linestring.apply(this, [polygon.holes[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon (multipolygon) {\n    var array = []\n    for (let i = 0, len = multipolygon.geometries.length; i < len; ++i) {\n      array.push('(' + extract.polygon.apply(this, [multipolygon.geometries[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection (collection) {\n    var array = []\n    for (let i = 0, len = collection.geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection.geometries[i]))\n    }\n    return array.join(',')\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nconst parse = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces)\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point\n    var points = str.trim().split(',')\n    var components = []\n    for (let i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1')\n      components.push(parse.point.apply(this, [point]))\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces)\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces)\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line\n    var lines = str.trim().split(regExes.parenComma)\n    var components = []\n    for (let i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1')\n      components.push(parse.linestring.apply(this, [line]))\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring\n    var rings = str.trim().split(regExes.parenComma)\n    var shell\n    var holes = []\n    for (let i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1')\n      linestring = parse.linestring.apply(this, [ring])\n      linearring = this.geometryFactory.createLinearRing(linestring.points)\n      if (i === 0) {\n        shell = linearring\n      } else {\n        holes.push(linearring)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon\n    var polygons = str.trim().split(regExes.doubleParenComma)\n    var components = []\n    for (let i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1')\n      components.push(parse.polygon.apply(this, [polygon]))\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1')\n    var wktArray = str.trim().split('|')\n    var components = []\n    for (let i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]))\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n}\n","import WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory)\n}\n\nextend(WKTWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof WKTWriter\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n\nextend(WKTWriter, {\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  toLineString (p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented')\n    }\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n})\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport WKTWriter from '../io/WKTWriter';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Assert from '../util/Assert';\nexport default function LineIntersector() {\n\tthis.result = null;\n\tthis.inputLines = Array(2).fill().map(() => Array(2));\n\tthis.intPt = new Array(2).fill(null);\n\tthis.intLineIndex = null;\n\tthis._isProper = null;\n\tthis.pa = null;\n\tthis.pb = null;\n\tthis.precisionModel = null;\n\tthis.intPt[0] = new Coordinate();\n\tthis.intPt[1] = new Coordinate();\n\tthis.pa = this.intPt[0];\n\tthis.pb = this.intPt[1];\n\tthis.result = 0;\n}\nextend(LineIntersector.prototype, {\n\tgetIndexAlongSegment: function (segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this.intLineIndex[segmentIndex][intIndex];\n\t},\n\tgetTopologySummary: function () {\n\t\tvar catBuf = new StringBuffer();\n\t\tif (this.isEndPoint()) catBuf.append(\" endpoint\");\n\t\tif (this._isProper) catBuf.append(\" proper\");\n\t\tif (this.isCollinear()) catBuf.append(\" collinear\");\n\t\treturn catBuf.toString();\n\t},\n\tcomputeIntersection: function (p1, p2, p3, p4) {\n\t\tthis.inputLines[0][0] = p1;\n\t\tthis.inputLines[0][1] = p2;\n\t\tthis.inputLines[1][0] = p3;\n\t\tthis.inputLines[1][1] = p4;\n\t\tthis.result = this.computeIntersect(p1, p2, p3, p4);\n\t},\n\tgetIntersectionNum: function () {\n\t\treturn this.result;\n\t},\n\tcomputeIntLineIndex: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.intLineIndex === null) {\n\t\t\t\tthis.intLineIndex = Array(2).fill().map(() => Array(2));\n\t\t\t\tthis.computeIntLineIndex(0);\n\t\t\t\tthis.computeIntLineIndex(1);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet segmentIndex = arguments[0];\n\t\t\tvar dist0 = this.getEdgeDistance(segmentIndex, 0);\n\t\t\tvar dist1 = this.getEdgeDistance(segmentIndex, 1);\n\t\t\tif (dist0 > dist1) {\n\t\t\t\tthis.intLineIndex[segmentIndex][0] = 0;\n\t\t\t\tthis.intLineIndex[segmentIndex][1] = 1;\n\t\t\t} else {\n\t\t\t\tthis.intLineIndex[segmentIndex][0] = 1;\n\t\t\t\tthis.intLineIndex[segmentIndex][1] = 0;\n\t\t\t}\n\t\t}\n\t},\n\tisProper: function () {\n\t\treturn this.hasIntersection() && this._isProper;\n\t},\n\tsetPrecisionModel: function (precisionModel) {\n\t\tthis.precisionModel = precisionModel;\n\t},\n\tisInteriorIntersection: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isInteriorIntersection(0)) return true;\n\t\t\tif (this.isInteriorIntersection(1)) return true;\n\t\t\treturn false;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet inputLineIndex = arguments[0];\n\t\t\tfor (var i = 0; i < this.result; i++) {\n\t\t\t\tif (!(this.intPt[i].equals2D(this.inputLines[inputLineIndex][0]) || this.intPt[i].equals2D(this.inputLines[inputLineIndex][1]))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\tgetIntersection: function (intIndex) {\n\t\treturn this.intPt[intIndex];\n\t},\n\tisEndPoint: function () {\n\t\treturn this.hasIntersection() && !this._isProper;\n\t},\n\thasIntersection: function () {\n\t\treturn this.result !== LineIntersector.NO_INTERSECTION;\n\t},\n\tgetEdgeDistance: function (segmentIndex, intIndex) {\n\t\tvar dist = LineIntersector.computeEdgeDistance(this.intPt[intIndex], this.inputLines[segmentIndex][0], this.inputLines[segmentIndex][1]);\n\t\treturn dist;\n\t},\n\tisCollinear: function () {\n\t\treturn this.result === LineIntersector.COLLINEAR_INTERSECTION;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(this.inputLines[0][0], this.inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this.inputLines[1][0], this.inputLines[1][1]) + this.getTopologySummary();\n\t},\n\tgetEndpoint: function (segmentIndex, ptIndex) {\n\t\treturn this.inputLines[segmentIndex][ptIndex];\n\t},\n\tisIntersection: function (pt) {\n\t\tfor (var i = 0; i < this.result; i++) {\n\t\t\tif (this.intPt[i].equals2D(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetIntersectionAlongSegment: function (segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this.intPt[this.intLineIndex[segmentIndex][intIndex]];\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineIntersector;\n\t}\n});\nLineIntersector.computeEdgeDistance = function (p, p0, p1) {\n\tvar dx = Math.abs(p1.x - p0.x);\n\tvar dy = Math.abs(p1.y - p0.y);\n\tvar dist = -1.0;\n\tif (p.equals(p0)) {\n\t\tdist = 0.0;\n\t} else if (p.equals(p1)) {\n\t\tif (dx > dy) dist = dx; else dist = dy;\n\t} else {\n\t\tvar pdx = Math.abs(p.x - p0.x);\n\t\tvar pdy = Math.abs(p.y - p0.y);\n\t\tif (dx > dy) dist = pdx; else dist = pdy;\n\t\tif (dist === 0.0 && !p.equals(p0)) {\n\t\t\tdist = Math.max(pdx, pdy);\n\t\t}\n\t}\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\n\treturn dist;\n};\nLineIntersector.nonRobustComputeEdgeDistance = function (p, p1, p2) {\n\tvar dx = p.x - p1.x;\n\tvar dy = p.y - p1.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\n\treturn dist;\n};\nLineIntersector.DONT_INTERSECT = 0;\nLineIntersector.DO_INTERSECT = 1;\nLineIntersector.COLLINEAR = 2;\nLineIntersector.NO_INTERSECTION = 0;\nLineIntersector.POINT_INTERSECTION = 1;\nLineIntersector.COLLINEAR_INTERSECTION = 2;\n","import NotRepresentableException from './NotRepresentableException';\nimport CGAlgorithms from './CGAlgorithms';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nimport System from '../../../../java/lang/System';\nimport HCoordinate from './HCoordinate';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport LineIntersector from './LineIntersector';\nexport default function RobustLineIntersector() {\n\tLineIntersector.apply(this);\n}\ninherits(RobustLineIntersector, LineIntersector);\nextend(RobustLineIntersector.prototype, {\n\tisInSegmentEnvelopes: function (intPt) {\n\t\tvar env0 = new Envelope(this.inputLines[0][0], this.inputLines[0][1]);\n\t\tvar env1 = new Envelope(this.inputLines[1][0], this.inputLines[1][1]);\n\t\treturn env0.contains(intPt) && env1.contains(intPt);\n\t},\n\tcomputeIntersection: function () {\n\t\tif (arguments.length === 3) {\n\t\t\tlet p = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\t\t\tthis._isProper = false;\n\t\t\tif (Envelope.intersects(p1, p2, p)) {\n\t\t\t\tif (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n\t\t\t\t\tthis._isProper = true;\n\t\t\t\t\tif (p.equals(p1) || p.equals(p2)) {\n\t\t\t\t\t\tthis._isProper = false;\n\t\t\t\t\t}\n\t\t\t\t\tthis.result = LineIntersector.POINT_INTERSECTION;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.result = LineIntersector.NO_INTERSECTION;\n\t\t} else return LineIntersector.prototype.computeIntersection.apply(this, arguments);\n\t},\n\tnormalizeToMinimum: function (n1, n2, n3, n4, normPt) {\n\t\tnormPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n\t\tnormPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n\t\tn1.x -= normPt.x;\n\t\tn1.y -= normPt.y;\n\t\tn2.x -= normPt.x;\n\t\tn2.y -= normPt.y;\n\t\tn3.x -= normPt.x;\n\t\tn3.y -= normPt.y;\n\t\tn4.x -= normPt.x;\n\t\tn4.y -= normPt.y;\n\t},\n\tsafeHCoordinateIntersection: function (p1, p2, q1, q2) {\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(p1, p2, q1, q2);\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotRepresentableException) {\n\t\t\t\tintPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n\t\t\t} else throw e;\n\t\t} finally {}\n\t\treturn intPt;\n\t},\n\tintersection: function (p1, p2, q1, q2) {\n\t\tvar intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n\t\tif (!this.isInSegmentEnvelopes(intPt)) {\n\t\t\tintPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n\t\t}\n\t\tif (this.precisionModel !== null) {\n\t\t\tthis.precisionModel.makePrecise(intPt);\n\t\t}\n\t\treturn intPt;\n\t},\n\tsmallestInAbsValue: function (x1, x2, x3, x4) {\n\t\tvar x = x1;\n\t\tvar xabs = Math.abs(x);\n\t\tif (Math.abs(x2) < xabs) {\n\t\t\tx = x2;\n\t\t\txabs = Math.abs(x2);\n\t\t}\n\t\tif (Math.abs(x3) < xabs) {\n\t\t\tx = x3;\n\t\t\txabs = Math.abs(x3);\n\t\t}\n\t\tif (Math.abs(x4) < xabs) {\n\t\t\tx = x4;\n\t\t}\n\t\treturn x;\n\t},\n\tcheckDD: function (p1, p2, q1, q2, intPt) {\n\t\tvar intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n\t\tvar isIn = this.isInSegmentEnvelopes(intPtDD);\n\t\tSystem.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\n\t\tif (intPt.distance(intPtDD) > 0.0001) {\n\t\t\tSystem.out.println(\"Distance = \" + intPt.distance(intPtDD));\n\t\t}\n\t},\n\tintersectionWithNormalization: function (p1, p2, q1, q2) {\n\t\tvar n1 = new Coordinate(p1);\n\t\tvar n2 = new Coordinate(p2);\n\t\tvar n3 = new Coordinate(q1);\n\t\tvar n4 = new Coordinate(q2);\n\t\tvar normPt = new Coordinate();\n\t\tthis.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n\t\tvar intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n\t\tintPt.x += normPt.x;\n\t\tintPt.y += normPt.y;\n\t\treturn intPt;\n\t},\n\tcomputeCollinearIntersection: function (p1, p2, q1, q2) {\n\t\tvar p1q1p2 = Envelope.intersects(p1, p2, q1);\n\t\tvar p1q2p2 = Envelope.intersects(p1, p2, q2);\n\t\tvar q1p1q2 = Envelope.intersects(q1, q2, p1);\n\t\tvar q1p2q2 = Envelope.intersects(q1, q2, p2);\n\t\tif (p1q1p2 && p1q2p2) {\n\t\t\tthis.intPt[0] = q1;\n\t\t\tthis.intPt[1] = q2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (q1p1q2 && q1p2q2) {\n\t\t\tthis.intPt[0] = p1;\n\t\t\tthis.intPt[1] = p2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p1q2) {\n\t\t\tthis.intPt[0] = q1;\n\t\t\tthis.intPt[1] = p1;\n\t\t\treturn q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p2q2) {\n\t\t\tthis.intPt[0] = q1;\n\t\t\tthis.intPt[1] = p2;\n\t\t\treturn q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p1q2) {\n\t\t\tthis.intPt[0] = q2;\n\t\t\tthis.intPt[1] = p1;\n\t\t\treturn q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p2q2) {\n\t\t\tthis.intPt[0] = q2;\n\t\t\tthis.intPt[1] = p2;\n\t\t\treturn q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\treturn LineIntersector.NO_INTERSECTION;\n\t},\n\tnormalizeToEnvCentre: function (n00, n01, n10, n11, normPt) {\n\t\tvar minX0 = n00.x < n01.x ? n00.x : n01.x;\n\t\tvar minY0 = n00.y < n01.y ? n00.y : n01.y;\n\t\tvar maxX0 = n00.x > n01.x ? n00.x : n01.x;\n\t\tvar maxY0 = n00.y > n01.y ? n00.y : n01.y;\n\t\tvar minX1 = n10.x < n11.x ? n10.x : n11.x;\n\t\tvar minY1 = n10.y < n11.y ? n10.y : n11.y;\n\t\tvar maxX1 = n10.x > n11.x ? n10.x : n11.x;\n\t\tvar maxY1 = n10.y > n11.y ? n10.y : n11.y;\n\t\tvar intMinX = minX0 > minX1 ? minX0 : minX1;\n\t\tvar intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n\t\tvar intMinY = minY0 > minY1 ? minY0 : minY1;\n\t\tvar intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n\t\tvar intMidX = (intMinX + intMaxX) / 2.0;\n\t\tvar intMidY = (intMinY + intMaxY) / 2.0;\n\t\tnormPt.x = intMidX;\n\t\tnormPt.y = intMidY;\n\t\tn00.x -= normPt.x;\n\t\tn00.y -= normPt.y;\n\t\tn01.x -= normPt.x;\n\t\tn01.y -= normPt.y;\n\t\tn10.x -= normPt.x;\n\t\tn10.y -= normPt.y;\n\t\tn11.x -= normPt.x;\n\t\tn11.y -= normPt.y;\n\t},\n\tcomputeIntersect: function (p1, p2, q1, q2) {\n\t\tthis._isProper = false;\n\t\tif (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\n\t\tvar Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n\t\tvar Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n\t\tif (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n\t\tvar Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n\t\tif (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n\t\tif (collinear) {\n\t\t\treturn this.computeCollinearIntersection(p1, p2, q1, q2);\n\t\t}\n\t\tif (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n\t\t\tthis._isProper = false;\n\t\t\tif (p1.equals2D(q1) || p1.equals2D(q2)) {\n\t\t\t\tthis.intPt[0] = p1;\n\t\t\t} else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n\t\t\t\tthis.intPt[0] = p2;\n\t\t\t} else if (Pq1 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(q1);\n\t\t\t} else if (Pq2 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(q2);\n\t\t\t} else if (Qp1 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(p1);\n\t\t\t} else if (Qp2 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(p2);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._isProper = true;\n\t\t\tthis.intPt[0] = this.intersection(p1, p2, q1, q2);\n\t\t}\n\t\treturn LineIntersector.POINT_INTERSECTION;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RobustLineIntersector;\n\t}\n});\nRobustLineIntersector.nearestEndpoint = function (p1, p2, q1, q2) {\n\tvar nearestPt = p1;\n\tvar minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n\tvar dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = p2;\n\t}\n\tdist = CGAlgorithms.distancePointLine(q1, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q1;\n\t}\n\tdist = CGAlgorithms.distancePointLine(q2, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q2;\n\t}\n\treturn nearestPt;\n};\n","import extend from '../../../../extend';\nexport default function RobustDeterminant() {}\nextend(RobustDeterminant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RobustDeterminant;\n\t}\n});\nRobustDeterminant.orientationIndex = function (p1, p2, q) {\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dx2 = q.x - p2.x;\n\tvar dy2 = q.y - p2.y;\n\treturn RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2);\n};\nRobustDeterminant.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar sign = null;\n\tvar swap = null;\n\tvar k = null;\n\tvar count = 0;\n\tsign = 1;\n\tif (x1 === 0.0 || y2 === 0.0) {\n\t\tif (y1 === 0.0 || x2 === 0.0) {\n\t\t\treturn 0;\n\t\t} else if (y1 > 0) {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (y1 === 0.0 || x2 === 0.0) {\n\t\tif (y2 > 0) {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < y1) {\n\t\tif (0.0 < y2) {\n\t\t\tif (y1 <= y2) {\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 <= -y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t} else {\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (0.0 < y2) {\n\t\t\tif (-y1 <= y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t} else {\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 >= y2) {\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < x1) {\n\t\tif (0.0 < x2) {\n\t\t\tif (x1 <= x2) {\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\treturn sign;\n\t\t}\n\t} else {\n\t\tif (0.0 < x2) {\n\t\t\treturn -sign;\n\t\t} else {\n\t\t\tif (x1 >= x2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\tx2 = -x2;\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\twhile (true) {\n\t\tcount = count + 1;\n\t\tk = Math.floor(x2 / x1);\n\t\tx2 = x2 - k * x1;\n\t\ty2 = y2 - k * y1;\n\t\tif (y2 < 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (y2 > y1) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (x1 > x2 + x2) {\n\t\t\tif (y1 < y2 + y2) {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 > y2 + y2) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\tx2 = x1 - x2;\n\t\t\t\ty2 = y1 - y2;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y2 === 0.0) {\n\t\t\tif (x2 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t\tif (x2 === 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tk = Math.floor(x1 / x2);\n\t\tx1 = x1 - k * x2;\n\t\ty1 = y1 - k * y2;\n\t\tif (y1 < 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (y1 > y2) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (x2 > x1 + x1) {\n\t\t\tif (y2 < y1 + y1) {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y2 > y1 + y1) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\tx1 = x2 - x1;\n\t\t\t\ty1 = y2 - y1;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y1 === 0.0) {\n\t\t\tif (x1 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t\tif (x1 === 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t}\n};\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nimport RobustDeterminant from './RobustDeterminant';\nexport default function RayCrossingCounter() {\n\tthis.p = null;\n\tthis.crossingCount = 0;\n\tthis.isPointOnSegment = false;\n\tlet p = arguments[0];\n\tthis.p = p;\n}\nextend(RayCrossingCounter.prototype, {\n\tcountSegment: function (p1, p2) {\n\t\tif (p1.x < this.p.x && p2.x < this.p.x) return null;\n\t\tif (this.p.x === p2.x && this.p.y === p2.y) {\n\t\t\tthis.isPointOnSegment = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y === this.p.y && p2.y === this.p.y) {\n\t\t\tvar minx = p1.x;\n\t\t\tvar maxx = p2.x;\n\t\t\tif (minx > maxx) {\n\t\t\t\tminx = p2.x;\n\t\t\t\tmaxx = p1.x;\n\t\t\t}\n\t\t\tif (this.p.x >= minx && this.p.x <= maxx) {\n\t\t\t\tthis.isPointOnSegment = true;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y > this.p.y && p2.y <= this.p.y || p2.y > this.p.y && p1.y <= this.p.y) {\n\t\t\tvar x1 = p1.x - this.p.x;\n\t\t\tvar y1 = p1.y - this.p.y;\n\t\t\tvar x2 = p2.x - this.p.x;\n\t\t\tvar y2 = p2.y - this.p.y;\n\t\t\tvar xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n\t\t\tif (xIntSign === 0.0) {\n\t\t\t\tthis.isPointOnSegment = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (y2 < y1) xIntSign = -xIntSign;\n\t\t\tif (xIntSign > 0.0) {\n\t\t\t\tthis.crossingCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisPointInPolygon: function () {\n\t\treturn this.getLocation() !== Location.EXTERIOR;\n\t},\n\tgetLocation: function () {\n\t\tif (this.isPointOnSegment) return Location.BOUNDARY;\n\t\tif (this.crossingCount % 2 === 1) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t},\n\tisOnSegment: function () {\n\t\treturn this.isPointOnSegment;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RayCrossingCounter;\n\t}\n});\nRayCrossingCounter.locatePointInRing = function () {\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\tlet p = arguments[0], ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tfor (var i = 1; i < ring.size(); i++) {\n\t\t\tring.getCoordinate(i, p1);\n\t\t\tring.getCoordinate(i - 1, p2);\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\tlet p = arguments[0], ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tfor (var i = 1; i < ring.length; i++) {\n\t\t\tvar p1 = ring[i];\n\t\t\tvar p2 = ring[i - 1];\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t}\n};\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport Envelope from '../geom/Envelope';\nimport RayCrossingCounter from './RayCrossingCounter';\nexport default function CGAlgorithms() {}\nextend(CGAlgorithms.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CGAlgorithms;\n\t}\n});\nCGAlgorithms.orientationIndex = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.signedArea = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\tvar n = ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tring.getCoordinate(0, p1);\n\t\tring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\nCGAlgorithms.distanceLineLine = function (A, B, C, D) {\n\tif (A.equals(B)) return CGAlgorithms.distancePointLine(A, C, D);\n\tif (C.equals(D)) return CGAlgorithms.distancePointLine(D, A, B);\n\tvar noIntersection = false;\n\tif (!Envelope.intersects(A, B, C, D)) {\n\t\tnoIntersection = true;\n\t} else {\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\tif (denom === 0) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\tvar s = s_num / denom;\n\t\t\tvar r = r_num / denom;\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\tnoIntersection = true;\n\t\t\t}\n\t\t}\n\t}\n\tif (noIntersection) {\n\t\treturn MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B));\n\t}\n\treturn 0.0;\n};\nCGAlgorithms.isPointInRing = function (p, ring) {\n\treturn CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR;\n};\nCGAlgorithms.computeLength = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\nCGAlgorithms.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n\tvar isCCW = false;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nCGAlgorithms.locatePointInRing = function (p, ring) {\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\n};\nCGAlgorithms.distancePointLinePerpendicular = function (p, A, B) {\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nCGAlgorithms.computeOrientation = function (p1, p2, q) {\n\treturn CGAlgorithms.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.distancePointLine = function () {\n\tif (arguments.length === 2) {\n\t\tlet p = arguments[0], line = arguments[1];\n\t\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\t\tvar minDistance = p.distance(line[0]);\n\t\tfor (var i = 0; i < line.length - 1; i++) {\n\t\t\tvar dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n\t\t\tif (dist < minDistance) {\n\t\t\t\tminDistance = dist;\n\t\t\t}\n\t\t}\n\t\treturn minDistance;\n\t} else if (arguments.length === 3) {\n\t\tlet p = arguments[0], A = arguments[1], B = arguments[2];\n\t\tif (A.x === B.x && A.y === B.y) return p.distance(A);\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\t\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n\t\tif (r <= 0.0) return p.distance(A);\n\t\tif (r >= 1.0) return p.distance(B);\n\t\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\t\treturn Math.abs(s) * Math.sqrt(len2);\n\t}\n};\nCGAlgorithms.isOnLine = function (p, pt) {\n\tvar lineIntersector = new RobustLineIntersector();\n\tfor (var i = 1; i < pt.length; i++) {\n\t\tvar p0 = pt[i - 1];\n\t\tvar p1 = pt[i];\n\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\tif (lineIntersector.hasIntersection()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCGAlgorithms.CLOCKWISE = -1;\nCGAlgorithms.RIGHT = CGAlgorithms.CLOCKWISE;\nCGAlgorithms.COUNTERCLOCKWISE = 1;\nCGAlgorithms.LEFT = CGAlgorithms.COUNTERCLOCKWISE;\nCGAlgorithms.COLLINEAR = 0;\nCGAlgorithms.STRAIGHT = CGAlgorithms.COLLINEAR;\n","import NotRepresentableException from '../algorithm/NotRepresentableException';\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport HCoordinate from '../algorithm/HCoordinate';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function LineSegment() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tif (arguments.length === 0) {\n\t\tLineSegment.call(this, new Coordinate(), new Coordinate());\n\t} else if (arguments.length === 1) {\n\t\tlet ls = arguments[0];\n\t\tLineSegment.call(this, ls.p0, ls.p1);\n\t} else if (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t} else if (arguments.length === 4) {\n\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\n\t\tLineSegment.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\n\t}\n}\nextend(LineSegment.prototype, {\n\tminX: function () {\n\t\treturn Math.min(this.p0.x, this.p1.x);\n\t},\n\torientationIndex: function () {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n\t\t\tvar orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n\t\t\tif (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\n\t\t\tif (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\n\t\t\treturn 0;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn CGAlgorithms.orientationIndex(this.p0, this.p1, p);\n\t\t}\n\t},\n\ttoGeometry: function (geomFactory) {\n\t\treturn geomFactory.createLineString([this.p0, this.p1]);\n\t},\n\tisVertical: function () {\n\t\treturn this.p0.x === this.p1.x;\n\t},\n\tequals: function (o) {\n\t\tif (!(o instanceof LineSegment)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar other = o;\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1);\n\t},\n\tintersection: function (line) {\n\t\tvar li = new RobustLineIntersector();\n\t\tli.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n\t\tif (li.hasIntersection()) return li.getIntersection(0);\n\t\treturn null;\n\t},\n\tproject: function () {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tif (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\n\t\t\tvar r = this.projectionFactor(p);\n\t\t\tvar coord = new Coordinate();\n\t\t\tcoord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n\t\t\tcoord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n\t\t\treturn coord;\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar pf0 = this.projectionFactor(seg.p0);\n\t\t\tvar pf1 = this.projectionFactor(seg.p1);\n\t\t\tif (pf0 >= 1.0 && pf1 >= 1.0) return null;\n\t\t\tif (pf0 <= 0.0 && pf1 <= 0.0) return null;\n\t\t\tvar newp0 = this.project(seg.p0);\n\t\t\tif (pf0 < 0.0) newp0 = this.p0;\n\t\t\tif (pf0 > 1.0) newp0 = this.p1;\n\t\t\tvar newp1 = this.project(seg.p1);\n\t\t\tif (pf1 < 0.0) newp1 = this.p0;\n\t\t\tif (pf1 > 1.0) newp1 = this.p1;\n\t\t\treturn new LineSegment(newp0, newp1);\n\t\t}\n\t},\n\tnormalize: function () {\n\t\tif (this.p1.compareTo(this.p0) < 0) this.reverse();\n\t},\n\tangle: function () {\n\t\treturn Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n\t},\n\tgetCoordinate: function (i) {\n\t\tif (i === 0) return this.p0;\n\t\treturn this.p1;\n\t},\n\tdistancePerpendicular: function (p) {\n\t\treturn CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1);\n\t},\n\tminY: function () {\n\t\treturn Math.min(this.p0.y, this.p1.y);\n\t},\n\tmidPoint: function () {\n\t\treturn LineSegment.midPoint(this.p0, this.p1);\n\t},\n\tprojectionFactor: function (p) {\n\t\tif (p.equals(this.p0)) return 0.0;\n\t\tif (p.equals(this.p1)) return 1.0;\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = dx * dx + dy * dy;\n\t\tif (len <= 0.0) return Double.NaN;\n\t\tvar r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n\t\treturn r;\n\t},\n\tclosestPoints: function (line) {\n\t\tvar intPt = this.intersection(line);\n\t\tif (intPt !== null) {\n\t\t\treturn [intPt, intPt];\n\t\t}\n\t\tvar closestPt = new Array(2).fill(null);\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar dist = null;\n\t\tvar close00 = this.closestPoint(line.p0);\n\t\tminDistance = close00.distance(line.p0);\n\t\tclosestPt[0] = close00;\n\t\tclosestPt[1] = line.p0;\n\t\tvar close01 = this.closestPoint(line.p1);\n\t\tdist = close01.distance(line.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = close01;\n\t\t\tclosestPt[1] = line.p1;\n\t\t}\n\t\tvar close10 = line.closestPoint(this.p0);\n\t\tdist = close10.distance(this.p0);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p0;\n\t\t\tclosestPt[1] = close10;\n\t\t}\n\t\tvar close11 = line.closestPoint(this.p1);\n\t\tdist = close11.distance(this.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p1;\n\t\t\tclosestPt[1] = close11;\n\t\t}\n\t\treturn closestPt;\n\t},\n\tclosestPoint: function (p) {\n\t\tvar factor = this.projectionFactor(p);\n\t\tif (factor > 0 && factor < 1) {\n\t\t\treturn this.project(p);\n\t\t}\n\t\tvar dist0 = this.p0.distance(p);\n\t\tvar dist1 = this.p1.distance(p);\n\t\tif (dist0 < dist1) return this.p0;\n\t\treturn this.p1;\n\t},\n\tmaxX: function () {\n\t\treturn Math.max(this.p0.x, this.p1.x);\n\t},\n\tgetLength: function () {\n\t\treturn this.p0.distance(this.p1);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tvar comp0 = this.p0.compareTo(other.p0);\n\t\tif (comp0 !== 0) return comp0;\n\t\treturn this.p1.compareTo(other.p1);\n\t},\n\treverse: function () {\n\t\tvar temp = this.p0;\n\t\tthis.p0 = this.p1;\n\t\tthis.p1 = temp;\n\t},\n\tequalsTopo: function (other) {\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\n\t},\n\tlineIntersection: function (line) {\n\t\ttry {\n\t\t\tvar intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n\t\t\treturn intPt;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {} else throw ex;\n\t\t} finally {}\n\t\treturn null;\n\t},\n\tmaxY: function () {\n\t\treturn Math.max(this.p0.y, this.p1.y);\n\t},\n\tpointAlongOffset: function (segmentLengthFraction, offsetDistance) {\n\t\tvar segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tvar segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = 0.0;\n\t\tvar uy = 0.0;\n\t\tif (offsetDistance !== 0.0) {\n\t\t\tif (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n\t\t\tux = offsetDistance * dx / len;\n\t\t\tuy = offsetDistance * dy / len;\n\t\t}\n\t\tvar offsetx = segx - uy;\n\t\tvar offsety = segy + ux;\n\t\tvar coord = new Coordinate(offsetx, offsety);\n\t\treturn coord;\n\t},\n\tsetCoordinates: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ls = arguments[0];\n\t\t\tthis.setCoordinates(ls.p0, ls.p1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tthis.p0.x = p0.x;\n\t\t\tthis.p0.y = p0.y;\n\t\t\tthis.p1.x = p1.x;\n\t\t\tthis.p1.y = p1.y;\n\t\t}\n\t},\n\tsegmentFraction: function (inputPt) {\n\t\tvar segFrac = this.projectionFactor(inputPt);\n\t\tif (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\n\t\treturn segFrac;\n\t},\n\ttoString: function () {\n\t\treturn \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n\t},\n\tisHorizontal: function () {\n\t\treturn this.p0.y === this.p1.y;\n\t},\n\tdistance: function () {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet ls = arguments[0];\n\t\t\treturn CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn CGAlgorithms.distancePointLine(p, this.p0, this.p1);\n\t\t}\n\t},\n\tpointAlong: function (segmentLengthFraction) {\n\t\tvar coord = new Coordinate();\n\t\tcoord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tcoord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\treturn coord;\n\t},\n\thashCode: function () {\n\t\tvar bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\n\t\tbits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\n\t\tvar hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n\t\tvar bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\n\t\tbits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\n\t\tvar hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n\t\treturn hash0 ^ hash1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegment;\n\t}\n});\nLineSegment.midPoint = function (p0, p1) {\n\treturn new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n};\nLineSegment.serialVersionUID = 3252005833466256227;\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from './Location';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Dimension from './Dimension';\nimport Cloneable from '../../../../java/lang/Cloneable';\nexport default function IntersectionMatrix() {\n\tthis.matrix = null;\n\tif (arguments.length === 0) {\n\t\tthis.matrix = Array(3).fill().map(() => Array(3));\n\t\tthis.setAll(Dimension.FALSE);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet elements = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis.set(elements);\n\t\t} else if (arguments[0] instanceof IntersectionMatrix) {\n\t\t\tlet other = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis.matrix[Location.INTERIOR][Location.INTERIOR] = other.matrix[Location.INTERIOR][Location.INTERIOR];\n\t\t\tthis.matrix[Location.INTERIOR][Location.BOUNDARY] = other.matrix[Location.INTERIOR][Location.BOUNDARY];\n\t\t\tthis.matrix[Location.INTERIOR][Location.EXTERIOR] = other.matrix[Location.INTERIOR][Location.EXTERIOR];\n\t\t\tthis.matrix[Location.BOUNDARY][Location.INTERIOR] = other.matrix[Location.BOUNDARY][Location.INTERIOR];\n\t\t\tthis.matrix[Location.BOUNDARY][Location.BOUNDARY] = other.matrix[Location.BOUNDARY][Location.BOUNDARY];\n\t\t\tthis.matrix[Location.BOUNDARY][Location.EXTERIOR] = other.matrix[Location.BOUNDARY][Location.EXTERIOR];\n\t\t\tthis.matrix[Location.EXTERIOR][Location.INTERIOR] = other.matrix[Location.EXTERIOR][Location.INTERIOR];\n\t\t\tthis.matrix[Location.EXTERIOR][Location.BOUNDARY] = other.matrix[Location.EXTERIOR][Location.BOUNDARY];\n\t\t\tthis.matrix[Location.EXTERIOR][Location.EXTERIOR] = other.matrix[Location.EXTERIOR][Location.EXTERIOR];\n\t\t}\n\t}\n}\nextend(IntersectionMatrix.prototype, {\n\tisIntersects: function () {\n\t\treturn !this.isDisjoint();\n\t},\n\tisCovers: function () {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCoveredBy: function () {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tset: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet dimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < dimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], dimensionValue = arguments[2];\n\t\t\tthis.matrix[row][column] = dimensionValue;\n\t\t}\n\t},\n\tisContains: function () {\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tsetAtLeast: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet minimumDimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < minimumDimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2];\n\t\t\tif (this.matrix[row][column] < minimumDimensionValue) {\n\t\t\t\tthis.matrix[row][column] = minimumDimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tsetAtLeastIfValid: function (row, column, minimumDimensionValue) {\n\t\tif (row >= 0 && column >= 0) {\n\t\t\tthis.setAtLeast(row, column, minimumDimensionValue);\n\t\t}\n\t},\n\tisWithin: function () {\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tisTouches: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA > dimensionOfGeometryB) {\n\t\t\treturn this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]));\n\t\t}\n\t\treturn false;\n\t},\n\tisOverlaps: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\treturn false;\n\t},\n\tisEquals: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA !== dimensionOfGeometryB) {\n\t\t\treturn false;\n\t\t}\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer(\"123456789\");\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tbuf.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this.matrix[ai][bi]));\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tsetAll: function (dimensionValue) {\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tthis.matrix[ai][bi] = dimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tget: function (row, column) {\n\t\treturn this.matrix[row][column];\n\t},\n\ttranspose: function () {\n\t\tvar temp = this.matrix[1][0];\n\t\tthis.matrix[1][0] = this.matrix[0][1];\n\t\tthis.matrix[0][1] = temp;\n\t\ttemp = this.matrix[2][0];\n\t\tthis.matrix[2][0] = this.matrix[0][2];\n\t\tthis.matrix[0][2] = temp;\n\t\ttemp = this.matrix[2][1];\n\t\tthis.matrix[2][1] = this.matrix[1][2];\n\t\tthis.matrix[1][2] = temp;\n\t\treturn this;\n\t},\n\tmatches: function (requiredDimensionSymbols) {\n\t\tif (requiredDimensionSymbols.length !== 9) {\n\t\t\tthrow new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\n\t\t}\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tif (!IntersectionMatrix.matches(this.matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function (im) {\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tthis.setAtLeast(i, j, im.get(i, j));\n\t\t\t}\n\t\t}\n\t},\n\tisDisjoint: function () {\n\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCrosses: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === 0;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn IntersectionMatrix;\n\t}\n});\nIntersectionMatrix.matches = function () {\n\tif (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\n\t\tlet actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1];\n\t\tif (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n\t\tlet actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1];\n\t\tvar m = new IntersectionMatrix(actualDimensionSymbols);\n\t\treturn m.matches(requiredDimensionSymbols);\n\t}\n};\nIntersectionMatrix.isTrue = function (actualDimensionValue) {\n\tif (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","import LineString from '../geom/LineString';\nimport CGAlgorithms from './CGAlgorithms';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function Centroid() {\n\tthis.areaBasePt = null;\n\tthis.triangleCent3 = new Coordinate();\n\tthis.areasum2 = 0;\n\tthis.cg3 = new Coordinate();\n\tthis.lineCentSum = new Coordinate();\n\tthis.totalLength = 0.0;\n\tthis.ptCount = 0;\n\tthis.ptCentSum = new Coordinate();\n\tlet geom = arguments[0];\n\tthis.areaBasePt = null;\n\tthis.add(geom);\n}\nextend(Centroid.prototype, {\n\taddPoint: function (pt) {\n\t\tthis.ptCount += 1;\n\t\tthis.ptCentSum.x += pt.x;\n\t\tthis.ptCentSum.y += pt.y;\n\t},\n\tsetBasePoint: function (basePt) {\n\t\tif (this.areaBasePt === null) this.areaBasePt = basePt;\n\t},\n\taddLineSegments: function (pts) {\n\t\tvar lineLen = 0.0;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segmentLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segmentLen === 0.0) continue;\n\t\t\tlineLen += segmentLen;\n\t\t\tvar midx = (pts[i].x + pts[i + 1].x) / 2;\n\t\t\tthis.lineCentSum.x += segmentLen * midx;\n\t\t\tvar midy = (pts[i].y + pts[i + 1].y) / 2;\n\t\t\tthis.lineCentSum.y += segmentLen * midy;\n\t\t}\n\t\tthis.totalLength += lineLen;\n\t\tif (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\n\t},\n\taddHole: function (pts) {\n\t\tvar isPositiveArea = CGAlgorithms.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this.areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\tgetCentroid: function () {\n\t\tvar cent = new Coordinate();\n\t\tif (Math.abs(this.areasum2) > 0.0) {\n\t\t\tcent.x = this.cg3.x / 3 / this.areasum2;\n\t\t\tcent.y = this.cg3.y / 3 / this.areasum2;\n\t\t} else if (this.totalLength > 0.0) {\n\t\t\tcent.x = this.lineCentSum.x / this.totalLength;\n\t\t\tcent.y = this.lineCentSum.y / this.totalLength;\n\t\t} else if (this.ptCount > 0) {\n\t\t\tcent.x = this.ptCentSum.x / this.ptCount;\n\t\t\tcent.y = this.ptCentSum.y / this.ptCount;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\treturn cent;\n\t},\n\taddShell: function (pts) {\n\t\tif (pts.length > 0) this.setBasePoint(pts[0]);\n\t\tvar isPositiveArea = !CGAlgorithms.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this.areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\taddTriangle: function (p0, p1, p2, isPositiveArea) {\n\t\tvar sign = isPositiveArea ? 1.0 : -1.0;\n\t\tCentroid.centroid3(p0, p1, p2, this.triangleCent3);\n\t\tvar area2 = Centroid.area2(p0, p1, p2);\n\t\tthis.cg3.x += sign * area2 * this.triangleCent3.x;\n\t\tthis.cg3.y += sign * area2 * this.triangleCent3.y;\n\t\tthis.areasum2 += sign * area2;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.addShell(poly.getExteriorRing().getCoordinates());\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.addHole(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom.isEmpty()) return null;\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.addPoint(geom.getCoordinate());\n\t\t\t} else if (geom instanceof LineString) {\n\t\t\t\tthis.addLineSegments(geom.getCoordinates());\n\t\t\t} else if (geom instanceof Polygon) {\n\t\t\t\tvar poly = geom;\n\t\t\t\tthis.add(poly);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Centroid;\n\t}\n});\nCentroid.area2 = function (p1, p2, p3) {\n\treturn (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\n};\nCentroid.centroid3 = function (p1, p2, p3, c) {\n\tc.x = p1.x + p2.x + p3.x;\n\tc.y = p1.y + p2.y + p3.y;\n\treturn null;\n};\nCentroid.getCentroid = function (geom) {\n\tvar cent = new Centroid(geom);\n\treturn cent.getCentroid();\n};\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function EmptyStackException(message) {\n  this.message = message || '';\n};\nEmptyStackException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n","import EmptyStackException from './EmptyStackException'\nimport List from './List'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nexport default function Stack() {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n};\nStack.prototype = new List();\n\n\n/**\n * @override\n */\nStack.prototype.add = function(e) {\n  this.array_.push(e);\n  return true;\n};\n\n\n/**\n * @override\n */\nStack.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function(e) {\n  this.array_.push(e);\n  return e;\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function(e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_.pop();\n};\n\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function() {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_[this.array_.length - 1];\n};\n\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function() {\n  if (this.array_.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function() {\n  return this.empty();\n};\n\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function(o) {\n  return this.array_.indexOf(o);\n};\n\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function UniqueCoordinateArrayFilter() {\n\tthis.treeSet = new TreeSet();\n\tthis.list = new ArrayList();\n}\nextend(UniqueCoordinateArrayFilter.prototype, {\n\tfilter: function (coord) {\n\t\tif (!this.treeSet.contains(coord)) {\n\t\t\tthis.list.add(coord);\n\t\t\tthis.treeSet.add(coord);\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar coordinates = new Array(this.list.size()).fill(null);\n\t\treturn this.list.toArray(coordinates);\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function () {\n\t\treturn UniqueCoordinateArrayFilter;\n\t}\n});\nUniqueCoordinateArrayFilter.filterCoordinates = function (coords) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tfor (var i = 0; i < coords.length; i++) {\n\t\tfilter.filter(coords[i]);\n\t}\n\treturn filter.getCoordinates();\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CGAlgorithms from './CGAlgorithms';\nimport CoordinateList from '../geom/CoordinateList';\nimport Arrays from '../../../../java/util/Arrays';\nimport Stack from '../../../../java/util/Stack';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Comparator from '../../../../java/util/Comparator';\nimport UniqueCoordinateArrayFilter from '../util/UniqueCoordinateArrayFilter';\nimport Assert from '../util/Assert';\nexport default function ConvexHull() {\n\tthis.geomFactory = null;\n\tthis.inputPts = null;\n\tif (arguments.length === 1) {\n\t\tlet geometry = arguments[0];\n\t\tConvexHull.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], geomFactory = arguments[1];\n\t\tthis.inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\n\t\tthis.geomFactory = geomFactory;\n\t}\n}\nextend(ConvexHull.prototype, {\n\tpreSort: function (pts) {\n\t\tvar t = null;\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tif (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n\t\t\t\tt = pts[0];\n\t\t\t\tpts[0] = pts[i];\n\t\t\t\tpts[i] = t;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\n\t\treturn pts;\n\t},\n\tcomputeOctRing: function (inputPts) {\n\t\tvar octPts = this.computeOctPts(inputPts);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.add(octPts, false);\n\t\tif (coordList.size() < 3) {\n\t\t\treturn null;\n\t\t}\n\t\tcoordList.closeRing();\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tlineOrPolygon: function (coordinates) {\n\t\tcoordinates = this.cleanRing(coordinates);\n\t\tif (coordinates.length === 3) {\n\t\t\treturn this.geomFactory.createLineString([coordinates[0], coordinates[1]]);\n\t\t}\n\t\tvar linearRing = this.geomFactory.createLinearRing(coordinates);\n\t\treturn this.geomFactory.createPolygon(linearRing, null);\n\t},\n\tcleanRing: function (original) {\n\t\tAssert.equals(original[0], original[original.length - 1]);\n\t\tvar cleanedRing = new ArrayList();\n\t\tvar previousDistinctCoordinate = null;\n\t\tfor (var i = 0; i <= original.length - 2; i++) {\n\t\t\tvar currentCoordinate = original[i];\n\t\t\tvar nextCoordinate = original[i + 1];\n\t\t\tif (currentCoordinate.equals(nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcleanedRing.add(currentCoordinate);\n\t\t\tpreviousDistinctCoordinate = currentCoordinate;\n\t\t}\n\t\tcleanedRing.add(original[original.length - 1]);\n\t\tvar cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\n\t\treturn cleanedRing.toArray(cleanedRingCoordinates);\n\t},\n\tisBetween: function (c1, c2, c3) {\n\t\tif (CGAlgorithms.computeOrientation(c1, c2, c3) !== 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (c1.x !== c3.x) {\n\t\t\tif (c1.x <= c2.x && c2.x <= c3.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.x <= c2.x && c2.x <= c1.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (c1.y !== c3.y) {\n\t\t\tif (c1.y <= c2.y && c2.y <= c3.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.y <= c2.y && c2.y <= c1.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\treduce: function (inputPts) {\n\t\tvar polyPts = this.computeOctRing(inputPts);\n\t\tif (polyPts === null) return inputPts;\n\t\tvar reducedSet = new TreeSet();\n\t\tfor (var i = 0; i < polyPts.length; i++) {\n\t\t\treducedSet.add(polyPts[i]);\n\t\t}\n\t\tfor (var i = 0; i < inputPts.length; i++) {\n\t\t\tif (!CGAlgorithms.isPointInRing(inputPts[i], polyPts)) {\n\t\t\t\treducedSet.add(inputPts[i]);\n\t\t\t}\n\t\t}\n\t\tvar reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\n\t\tif (reducedPts.length < 3) return this.padArray3(reducedPts);\n\t\treturn reducedPts;\n\t},\n\tgetConvexHull: function () {\n\t\tif (this.inputPts.length === 0) {\n\t\t\treturn this.geomFactory.createGeometryCollection(null);\n\t\t}\n\t\tif (this.inputPts.length === 1) {\n\t\t\treturn this.geomFactory.createPoint(this.inputPts[0]);\n\t\t}\n\t\tif (this.inputPts.length === 2) {\n\t\t\treturn this.geomFactory.createLineString(this.inputPts);\n\t\t}\n\t\tvar reducedPts = this.inputPts;\n\t\tif (this.inputPts.length > 50) {\n\t\t\treducedPts = this.reduce(this.inputPts);\n\t\t}\n\t\tvar sortedPts = this.preSort(reducedPts);\n\t\tvar cHS = this.grahamScan(sortedPts);\n\t\tvar cH = this.toCoordinateArray(cHS);\n\t\treturn this.lineOrPolygon(cH);\n\t},\n\tpadArray3: function (pts) {\n\t\tvar pad = new Array(3).fill(null);\n\t\tfor (var i = 0; i < pad.length; i++) {\n\t\t\tif (i < pts.length) {\n\t\t\t\tpad[i] = pts[i];\n\t\t\t} else pad[i] = pts[0];\n\t\t}\n\t\treturn pad;\n\t},\n\tcomputeOctPts: function (inputPts) {\n\t\tvar pts = new Array(8).fill(null);\n\t\tfor (var j = 0; j < pts.length; j++) {\n\t\t\tpts[j] = inputPts[0];\n\t\t}\n\t\tfor (var i = 1; i < inputPts.length; i++) {\n\t\t\tif (inputPts[i].x < pts[0].x) {\n\t\t\t\tpts[0] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n\t\t\t\tpts[1] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y > pts[2].y) {\n\t\t\t\tpts[2] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n\t\t\t\tpts[3] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x > pts[4].x) {\n\t\t\t\tpts[4] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n\t\t\t\tpts[5] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y < pts[6].y) {\n\t\t\t\tpts[6] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n\t\t\t\tpts[7] = inputPts[i];\n\t\t\t}\n\t\t}\n\t\treturn pts;\n\t},\n\ttoCoordinateArray: function (stack) {\n\t\tvar coordinates = new Array(stack.size()).fill(null);\n\t\tfor (var i = 0; i < stack.size(); i++) {\n\t\t\tvar coordinate = stack.get(i);\n\t\t\tcoordinates[i] = coordinate;\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgrahamScan: function (c) {\n\t\tvar p = null;\n\t\tvar ps = new Stack();\n\t\tp = ps.push(c[0]);\n\t\tp = ps.push(c[1]);\n\t\tp = ps.push(c[2]);\n\t\tfor (var i = 3; i < c.length; i++) {\n\t\t\tp = ps.pop();\n\t\t\twhile (!ps.empty() && CGAlgorithms.computeOrientation(ps.peek(), p, c[i]) > 0) {\n\t\t\t\tp = ps.pop();\n\t\t\t}\n\t\t\tp = ps.push(p);\n\t\t\tp = ps.push(c[i]);\n\t\t}\n\t\tp = ps.push(c[0]);\n\t\treturn ps;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConvexHull;\n\t}\n});\nConvexHull.extractCoordinates = function (geom) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tgeom.apply(filter);\n\treturn filter.getCoordinates();\n};\nfunction RadialComparator() {\n\tthis.origin = null;\n\tlet origin = arguments[0];\n\tthis.origin = origin;\n}\nextend(RadialComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar p1 = o1;\n\t\tvar p2 = o2;\n\t\treturn RadialComparator.polarCompare(this.origin, p1, p2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn RadialComparator;\n\t}\n});\nRadialComparator.polarCompare = function (o, p, q) {\n\tvar dxp = p.x - o.x;\n\tvar dyp = p.y - o.y;\n\tvar dxq = q.x - o.x;\n\tvar dyq = q.y - o.y;\n\tvar orient = CGAlgorithms.computeOrientation(o, p, q);\n\tif (orient === CGAlgorithms.COUNTERCLOCKWISE) return 1;\n\tif (orient === CGAlgorithms.CLOCKWISE) return -1;\n\tvar op = dxp * dxp + dyp * dyp;\n\tvar oq = dxq * dxq + dyq * dyq;\n\tif (op < oq) {\n\t\treturn -1;\n\t}\n\tif (op > oq) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\nConvexHull.RadialComparator = RadialComparator;\n","import LineString from '../LineString';\nimport GeometryFactory from '../GeometryFactory';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport MultiLineString from '../MultiLineString';\nexport default function GeometryTransformer() {\n\tthis.inputGeom = null;\n\tthis.factory = null;\n\tthis.pruneEmptyGeometry = true;\n\tthis.preserveGeometryCollectionType = true;\n\tthis.preserveCollections = false;\n\tthis.preserveType = false;\n}\nextend(GeometryTransformer.prototype, {\n\ttransformPoint: function (geom, parent) {\n\t\treturn this.factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformPolygon: function (geom, parent) {\n\t\tvar isAllValidLinearRings = true;\n\t\tvar shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n\t\tif (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\n\t\t\tholes.add(hole);\n\t\t}\n\t\tif (isAllValidLinearRings) return this.factory.createPolygon(shell, holes.toArray([])); else {\n\t\t\tvar components = new ArrayList();\n\t\t\tif (shell !== null) components.add(shell);\n\t\t\tcomponents.addAll(holes);\n\t\t\treturn this.factory.buildGeometry(components);\n\t\t}\n\t},\n\tcreateCoordinateSequence: function (coords) {\n\t\treturn this.factory.getCoordinateSequenceFactory().create(coords);\n\t},\n\tgetInputGeometry: function () {\n\t\treturn this.inputGeom;\n\t},\n\ttransformMultiLineString: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\treturn this.copy(coords);\n\t},\n\ttransformLineString: function (geom, parent) {\n\t\treturn this.factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformMultiPoint: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\tcopy: function (seq) {\n\t\treturn seq.copy();\n\t},\n\ttransformGeometryCollection: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transform(geom.getGeometryN(i));\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (this.pruneEmptyGeometry && transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\tif (this.preserveGeometryCollectionType) return this.factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\ttransform: function (inputGeom) {\n\t\tthis.inputGeom = inputGeom;\n\t\tthis.factory = inputGeom.getFactory();\n\t\tif (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\n\t\tif (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\n\t\tif (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\n\t\tif (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\n\t\tif (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\n\t\tthrow new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\n\t},\n\ttransformLinearRing: function (geom, parent) {\n\t\tvar seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n\t\tif (seq === null) return this.factory.createLinearRing(null);\n\t\tvar seqSize = seq.size();\n\t\tif (seqSize > 0 && seqSize < 4 && !this.preserveType) return this.factory.createLineString(seq);\n\t\treturn this.factory.createLinearRing(seq);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryTransformer;\n\t}\n});\n","import LineString from '../../../geom/LineString';\nimport CoordinateList from '../../../geom/CoordinateList';\nimport Coordinate from '../../../geom/Coordinate';\nimport Double from '../../../../../../java/lang/Double';\nimport extend from '../../../../../../extend';\nimport LineSegment from '../../../geom/LineSegment';\nexport default function LineStringSnapper() {\n\tthis.snapTolerance = 0.0;\n\tthis.srcPts = null;\n\tthis.seg = new LineSegment();\n\tthis.allowSnappingToSourceVertices = false;\n\tthis._isClosed = false;\n\tif (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\n\t\tlet srcLine = arguments[0], snapTolerance = arguments[1];\n\t\tLineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n\t} else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\n\t\tlet srcPts = arguments[0], snapTolerance = arguments[1];\n\t\tthis.srcPts = srcPts;\n\t\tthis._isClosed = LineStringSnapper.isClosed(srcPts);\n\t\tthis.snapTolerance = snapTolerance;\n\t}\n}\nextend(LineStringSnapper.prototype, {\n\tsnapVertices: function (srcCoords, snapPts) {\n\t\tvar end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar srcPt = srcCoords.get(i);\n\t\t\tvar snapVert = this.findSnapForVertex(srcPt, snapPts);\n\t\t\tif (snapVert !== null) {\n\t\t\t\tsrcCoords.set(i, new Coordinate(snapVert));\n\t\t\t\tif (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\n\t\t\t}\n\t\t}\n\t},\n\tfindSnapForVertex: function (pt, snapPts) {\n\t\tfor (var i = 0; i < snapPts.length; i++) {\n\t\t\tif (pt.equals2D(snapPts[i])) return null;\n\t\t\tif (pt.distance(snapPts[i]) < this.snapTolerance) return snapPts[i];\n\t\t}\n\t\treturn null;\n\t},\n\tsnapTo: function (snapPts) {\n\t\tvar coordList = new CoordinateList(this.srcPts);\n\t\tthis.snapVertices(coordList, snapPts);\n\t\tthis.snapSegments(coordList, snapPts);\n\t\tvar newPts = coordList.toCoordinateArray();\n\t\treturn newPts;\n\t},\n\tsnapSegments: function (srcCoords, snapPts) {\n\t\tif (snapPts.length === 0) return null;\n\t\tvar distinctPtCount = snapPts.length;\n\t\tif (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\n\t\tfor (var i = 0; i < distinctPtCount; i++) {\n\t\t\tvar snapPt = snapPts[i];\n\t\t\tvar index = this.findSegmentIndexToSnap(snapPt, srcCoords);\n\t\t\tif (index >= 0) {\n\t\t\t\tsrcCoords.add(index + 1, new Coordinate(snapPt), false);\n\t\t\t}\n\t\t}\n\t},\n\tfindSegmentIndexToSnap: function (snapPt, srcCoords) {\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tvar snapIndex = -1;\n\t\tfor (var i = 0; i < srcCoords.size() - 1; i++) {\n\t\t\tthis.seg.p0 = srcCoords.get(i);\n\t\t\tthis.seg.p1 = srcCoords.get(i + 1);\n\t\t\tif (this.seg.p0.equals2D(snapPt) || this.seg.p1.equals2D(snapPt)) {\n\t\t\t\tif (this.allowSnappingToSourceVertices) continue; else return -1;\n\t\t\t}\n\t\t\tvar dist = this.seg.distance(snapPt);\n\t\t\tif (dist < this.snapTolerance && dist < minDist) {\n\t\t\t\tminDist = dist;\n\t\t\t\tsnapIndex = i;\n\t\t\t}\n\t\t}\n\t\treturn snapIndex;\n\t},\n\tsetAllowSnappingToSourceVertices: function (allowSnappingToSourceVertices) {\n\t\tthis.allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringSnapper;\n\t}\n});\nLineStringSnapper.isClosed = function (pts) {\n\tif (pts.length <= 1) return false;\n\treturn pts[0].equals2D(pts[pts.length - 1]);\n};\n","import TreeSet from '../../../../../../java/util/TreeSet';\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer';\nimport hasInterface from '../../../../../../hasInterface';\nimport Double from '../../../../../../java/lang/Double';\nimport extend from '../../../../../../extend';\nimport LineStringSnapper from './LineStringSnapper';\nimport PrecisionModel from '../../../geom/PrecisionModel';\nimport Polygonal from '../../../geom/Polygonal';\nimport inherits from '../../../../../../inherits';\nexport default function GeometrySnapper() {\n\tthis.srcGeom = null;\n\tlet srcGeom = arguments[0];\n\tthis.srcGeom = srcGeom;\n}\nextend(GeometrySnapper.prototype, {\n\tsnapTo: function (snapGeom, snapTolerance) {\n\t\tvar snapPts = this.extractTargetCoordinates(snapGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts);\n\t\treturn snapTrans.transform(this.srcGeom);\n\t},\n\tsnapToSelf: function (snapTolerance, cleanResult) {\n\t\tvar snapPts = this.extractTargetCoordinates(this.srcGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n\t\tvar snappedGeom = snapTrans.transform(this.srcGeom);\n\t\tvar result = snappedGeom;\n\t\tif (cleanResult && hasInterface(result, Polygonal)) {\n\t\t\tresult = snappedGeom.buffer(0);\n\t\t}\n\t\treturn result;\n\t},\n\tcomputeSnapTolerance: function (ringPts) {\n\t\tvar minSegLen = this.computeMinimumSegmentLength(ringPts);\n\t\tvar snapTol = minSegLen / 10;\n\t\treturn snapTol;\n\t},\n\textractTargetCoordinates: function (g) {\n\t\tvar ptSet = new TreeSet();\n\t\tvar pts = g.getCoordinates();\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tptSet.add(pts[i]);\n\t\t}\n\t\treturn ptSet.toArray(new Array(0).fill(null));\n\t},\n\tcomputeMinimumSegmentLength: function (pts) {\n\t\tvar minSegLen = Double.MAX_VALUE;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segLen < minSegLen) minSegLen = segLen;\n\t\t}\n\t\treturn minSegLen;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometrySnapper;\n\t}\n});\nGeometrySnapper.snap = function (g0, g1, snapTolerance) {\n\tvar snapGeom = new Array(2).fill(null);\n\tvar snapper0 = new GeometrySnapper(g0);\n\tsnapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n\tvar snapper1 = new GeometrySnapper(g1);\n\tsnapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n\treturn snapGeom;\n};\nGeometrySnapper.computeOverlaySnapTolerance = function () {\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tvar snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n\t\tvar pm = g.getPrecisionModel();\n\t\tif (pm.getType() === PrecisionModel.FIXED) {\n\t\t\tvar fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n\t\t\tif (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\n\t\t}\n\t\treturn snapTolerance;\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\treturn Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\n\t}\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function (g) {\n\tvar env = g.getEnvelopeInternal();\n\tvar minDimension = Math.min(env.getHeight(), env.getWidth());\n\tvar snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n\treturn snapTol;\n};\nGeometrySnapper.snapToSelf = function (geom, snapTolerance, cleanResult) {\n\tvar snapper0 = new GeometrySnapper(geom);\n\treturn snapper0.snapToSelf(snapTolerance, cleanResult);\n};\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\nfunction SnapTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.snapTolerance = null;\n\tthis.snapPts = null;\n\tthis.isSelfSnap = false;\n\tif (arguments.length === 2) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1];\n\t\tthis.snapTolerance = snapTolerance;\n\t\tthis.snapPts = snapPts;\n\t} else if (arguments.length === 3) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2];\n\t\tthis.snapTolerance = snapTolerance;\n\t\tthis.snapPts = snapPts;\n\t\tthis.isSelfSnap = isSelfSnap;\n\t}\n}\ninherits(SnapTransformer, GeometryTransformer);\nextend(SnapTransformer.prototype, {\n\tsnapLine: function (srcPts, snapPts) {\n\t\tvar snapper = new LineStringSnapper(srcPts, this.snapTolerance);\n\t\tsnapper.setAllowSnappingToSourceVertices(this.isSelfSnap);\n\t\treturn snapper.snapTo(snapPts);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar srcPts = coords.toCoordinateArray();\n\t\tvar newPts = this.snapLine(srcPts, this.snapPts);\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapTransformer;\n\t}\n});\n","import Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function CommonBits() {\n\tthis.isFirst = true;\n\tthis.commonMantissaBitsCount = 53;\n\tthis.commonBits = 0;\n\tthis.commonSignExp = null;\n}\nextend(CommonBits.prototype, {\n\tgetCommon: function () {\n\t\treturn Double.longBitsToDouble(this.commonBits);\n\t},\n\tadd: function (num) {\n\t\tvar numBits = Double.doubleToLongBits(num);\n\t\tif (this.isFirst) {\n\t\t\tthis.commonBits = numBits;\n\t\t\tthis.commonSignExp = CommonBits.signExpBits(this.commonBits);\n\t\t\tthis.isFirst = false;\n\t\t\treturn null;\n\t\t}\n\t\tvar numSignExp = CommonBits.signExpBits(numBits);\n\t\tif (numSignExp !== this.commonSignExp) {\n\t\t\tthis.commonBits = 0;\n\t\t\treturn null;\n\t\t}\n\t\tthis.commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this.commonBits, numBits);\n\t\tthis.commonBits = CommonBits.zeroLowerBits(this.commonBits, 64 - (12 + this.commonMantissaBitsCount));\n\t},\n\ttoString: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet bits = arguments[0];\n\t\t\tvar x = Double.longBitsToDouble(bits);\n\t\t\tvar numStr = Long.toBinaryString(bits);\n\t\t\tvar padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\n\t\t\tvar bitStr = padStr.substring(padStr.length - 64);\n\t\t\tvar str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\n\t\t\treturn str;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CommonBits;\n\t}\n});\nCommonBits.getBit = function (bits, i) {\n\tvar mask = 1 << i;\n\treturn (bits & mask) !== 0 ? 1 : 0;\n};\nCommonBits.signExpBits = function (num) {\n\treturn num >> 52;\n};\nCommonBits.zeroLowerBits = function (bits, nBits) {\n\tvar invMask = (1 << nBits) - 1;\n\tvar mask = ~invMask;\n\tvar zeroed = bits & mask;\n\treturn zeroed;\n};\nCommonBits.numCommonMostSigMantissaBits = function (num1, num2) {\n\tvar count = 0;\n\tfor (var i = 52; i >= 0; i--) {\n\t\tif (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\n\t\tcount++;\n\t}\n\treturn 52;\n};\n","import CommonBits from './CommonBits';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter';\nexport default function CommonBitsRemover() {\n\tthis.commonCoord = null;\n\tthis.ccFilter = new CommonCoordinateFilter();\n}\nextend(CommonBitsRemover.prototype, {\n\taddCommonBits: function (geom) {\n\t\tvar trans = new Translater(this.commonCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t},\n\tremoveCommonBits: function (geom) {\n\t\tif (this.commonCoord.x === 0.0 && this.commonCoord.y === 0.0) return geom;\n\t\tvar invCoord = new Coordinate(this.commonCoord);\n\t\tinvCoord.x = -invCoord.x;\n\t\tinvCoord.y = -invCoord.y;\n\t\tvar trans = new Translater(invCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t\treturn geom;\n\t},\n\tgetCommonCoordinate: function () {\n\t\treturn this.commonCoord;\n\t},\n\tadd: function (geom) {\n\t\tgeom.apply(this.ccFilter);\n\t\tthis.commonCoord = this.ccFilter.getCommonCoordinate();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CommonBitsRemover;\n\t}\n});\nfunction CommonCoordinateFilter() {\n\tthis.commonBitsX = new CommonBits();\n\tthis.commonBitsY = new CommonBits();\n}\nextend(CommonCoordinateFilter.prototype, {\n\tfilter: function (coord) {\n\t\tthis.commonBitsX.add(coord.x);\n\t\tthis.commonBitsY.add(coord.y);\n\t},\n\tgetCommonCoordinate: function () {\n\t\treturn new Coordinate(this.commonBitsX.getCommon(), this.commonBitsY.getCommon());\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function () {\n\t\treturn CommonCoordinateFilter;\n\t}\n});\nfunction Translater() {\n\tthis.trans = null;\n\tlet trans = arguments[0];\n\tthis.trans = trans;\n}\nextend(Translater.prototype, {\n\tfilter: function (seq, i) {\n\t\tvar xp = seq.getOrdinate(i, 0) + this.trans.x;\n\t\tvar yp = seq.getOrdinate(i, 1) + this.trans.y;\n\t\tseq.setOrdinate(i, 0, xp);\n\t\tseq.setOrdinate(i, 1, yp);\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\tisGeometryChanged: function () {\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFilter];\n\t},\n\tgetClass: function () {\n\t\treturn Translater;\n\t}\n});\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\nCommonBitsRemover.Translater = Translater;\n","import Iterator from '../../../../java/util/Iterator';\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nexport default function GeometryCollectionIterator() {\n\tthis.parent = null;\n\tthis.atStart = null;\n\tthis.max = null;\n\tthis.index = null;\n\tthis.subcollectionIterator = null;\n\tlet parent = arguments[0];\n\tthis.parent = parent;\n\tthis.atStart = true;\n\tthis.index = 0;\n\tthis.max = parent.getNumGeometries();\n}\nextend(GeometryCollectionIterator.prototype, {\n\tnext: function () {\n\t\tif (this.atStart) {\n\t\t\tthis.atStart = false;\n\t\t\tif (GeometryCollectionIterator.isAtomic(this.parent)) this.index++;\n\t\t\treturn this.parent;\n\t\t}\n\t\tif (this.subcollectionIterator !== null) {\n\t\t\tif (this.subcollectionIterator.hasNext()) {\n\t\t\t\treturn this.subcollectionIterator.next();\n\t\t\t} else {\n\t\t\t\tthis.subcollectionIterator = null;\n\t\t\t}\n\t\t}\n\t\tif (this.index >= this.max) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tvar obj = this.parent.getGeometryN(this.index++);\n\t\tif (obj instanceof GeometryCollection) {\n\t\t\tthis.subcollectionIterator = new GeometryCollectionIterator(obj);\n\t\t\treturn this.subcollectionIterator.next();\n\t\t}\n\t\treturn obj;\n\t},\n\tremove: function () {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function () {\n\t\tif (this.atStart) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.subcollectionIterator !== null) {\n\t\t\tif (this.subcollectionIterator.hasNext()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis.subcollectionIterator = null;\n\t\t}\n\t\tif (this.index >= this.max) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollectionIterator;\n\t}\n});\nGeometryCollectionIterator.isAtomic = function (geom) {\n\treturn !(geom instanceof GeometryCollection);\n};\n","import Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport CGAlgorithms from './CGAlgorithms';\nimport Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport BoundaryNodeRule from './BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function PointLocator() {\n\tthis.boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n\tthis.isIn = null;\n\tthis.numBoundaries = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet boundaryRule = arguments[0];\n\t\tif (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\n\t\tthis.boundaryRule = boundaryRule;\n\t}\n}\nextend(PointLocator.prototype, {\n\tlocateInternal: function () {\n\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n\t\t\tlet p = arguments[0], poly = arguments[1];\n\t\t\tif (poly.isEmpty()) return Location.EXTERIOR;\n\t\t\tvar shell = poly.getExteriorRing();\n\t\t\tvar shellLoc = this.locateInPolygonRing(p, shell);\n\t\t\tif (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\n\t\t\tif (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tvar hole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeLoc = this.locateInPolygonRing(p, hole);\n\t\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t\t}\n\t\t\treturn Location.INTERIOR;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n\t\t\tlet p = arguments[0], l = arguments[1];\n\t\t\tif (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\t\tvar pt = l.getCoordinates();\n\t\t\tif (!l.isClosed()) {\n\t\t\t\tif (p.equals(pt[0]) || p.equals(pt[pt.length - 1])) {\n\t\t\t\t\treturn Location.BOUNDARY;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (CGAlgorithms.isOnLine(p, pt)) return Location.INTERIOR;\n\t\t\treturn Location.EXTERIOR;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n\t\t\tlet p = arguments[0], pt = arguments[1];\n\t\t\tvar ptCoord = pt.getCoordinate();\n\t\t\tif (ptCoord.equals2D(p)) return Location.INTERIOR;\n\t\t\treturn Location.EXTERIOR;\n\t\t}\n\t},\n\tlocateInPolygonRing: function (p, ring) {\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\treturn CGAlgorithms.locatePointInRing(p, ring.getCoordinates());\n\t},\n\tintersects: function (p, geom) {\n\t\treturn this.locate(p, geom) !== Location.EXTERIOR;\n\t},\n\tupdateLocationInfo: function (loc) {\n\t\tif (loc === Location.INTERIOR) this.isIn = true;\n\t\tif (loc === Location.BOUNDARY) this.numBoundaries++;\n\t},\n\tcomputeLocation: function (p, geom) {\n\t\tif (geom instanceof Point) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t}\n\t\tif (geom instanceof LineString) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t} else if (geom instanceof Polygon) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t} else if (geom instanceof MultiLineString) {\n\t\t\tvar ml = geom;\n\t\t\tfor (var i = 0; i < ml.getNumGeometries(); i++) {\n\t\t\t\tvar l = ml.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, l));\n\t\t\t}\n\t\t} else if (geom instanceof MultiPolygon) {\n\t\t\tvar mpoly = geom;\n\t\t\tfor (var i = 0; i < mpoly.getNumGeometries(); i++) {\n\t\t\t\tvar poly = mpoly.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, poly));\n\t\t\t}\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\t\twhile (geomi.hasNext()) {\n\t\t\t\tvar g2 = geomi.next();\n\t\t\t\tif (g2 !== geom) this.computeLocation(p, g2);\n\t\t\t}\n\t\t}\n\t},\n\tlocate: function (p, geom) {\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\n\t\tif (geom instanceof LineString) {\n\t\t\treturn this.locateInternal(p, geom);\n\t\t} else if (geom instanceof Polygon) {\n\t\t\treturn this.locateInternal(p, geom);\n\t\t}\n\t\tthis.isIn = false;\n\t\tthis.numBoundaries = 0;\n\t\tthis.computeLocation(p, geom);\n\t\tif (this.boundaryRule.isInBoundary(this.numBoundaries)) return Location.BOUNDARY;\n\t\tif (this.numBoundaries > 0 || this.isIn) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointLocator;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Octant() {}\nextend(Octant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Octant;\n\t}\n});\nOctant.octant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tlet dx = arguments[0], dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tvar adx = Math.abs(dx);\n\t\tvar ady = Math.abs(dy);\n\t\tif (dx >= 0) {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 0; else return 1;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 7; else return 6;\n\t\t\t}\n\t\t} else {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 3; else return 2;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 4; else return 5;\n\t\t\t}\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\n\t\treturn Octant.octant(dx, dy);\n\t}\n};\n","import extend from '../../../../extend';\nexport default function SegmentString() {}\nextend(SegmentString.prototype, {\n\tgetCoordinates: function () {},\n\tsize: function () {},\n\tgetCoordinate: function (i) {},\n\tisClosed: function () {},\n\tsetData: function (data) {},\n\tgetData: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentString;\n\t}\n});\n","import WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Octant from './Octant';\nimport extend from '../../../../extend';\nimport SegmentString from './SegmentString';\nexport default function BasicSegmentString() {\n\tthis.pts = null;\n\tthis.data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis.pts = pts;\n\tthis.data = data;\n}\nextend(BasicSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tsize: function () {\n\t\treturn this.pts.length;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this.pts[i];\n\t},\n\tisClosed: function () {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetSegmentOctant: function (index) {\n\t\tif (index === this.pts.length - 1) return -1;\n\t\treturn Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function (data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function () {\n\t\treturn this.data;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.pts));\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn BasicSegmentString;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function Boundable() {}\nextend(Boundable.prototype, {\n\tgetBounds: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Boundable;\n\t}\n});\n","import Boundable from './Boundable';\nimport extend from '../../../../../extend';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function ItemBoundable() {\n\tthis.bounds = null;\n\tthis.item = null;\n\tlet bounds = arguments[0], item = arguments[1];\n\tthis.bounds = bounds;\n\tthis.item = item;\n}\nextend(ItemBoundable.prototype, {\n\tgetItem: function () {\n\t\treturn this.item;\n\t},\n\tgetBounds: function () {\n\t\treturn this.bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn ItemBoundable;\n\t}\n});\n","import extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function PriorityQueue() {\n\tthis._size = null;\n\tthis.items = null;\n\tthis._size = 0;\n\tthis.items = new ArrayList();\n\tthis.items.add(null);\n}\nextend(PriorityQueue.prototype, {\n\tpoll: function () {\n\t\tif (this.isEmpty()) return null;\n\t\tvar minItem = this.items.get(1);\n\t\tthis.items.set(1, this.items.get(this._size));\n\t\tthis._size -= 1;\n\t\tthis.reorder(1);\n\t\treturn minItem;\n\t},\n\tsize: function () {\n\t\treturn this._size;\n\t},\n\treorder: function (hole) {\n\t\tvar child = null;\n\t\tvar tmp = this.items.get(hole);\n\t\tfor (; hole * 2 <= this._size; hole = child) {\n\t\t\tchild = hole * 2;\n\t\t\tif (child !== this._size && this.items.get(child + 1).compareTo(this.items.get(child)) < 0) child++;\n\t\t\tif (this.items.get(child).compareTo(tmp) < 0) this.items.set(hole, this.items.get(child)); else break;\n\t\t}\n\t\tthis.items.set(hole, tmp);\n\t},\n\tclear: function () {\n\t\tthis._size = 0;\n\t\tthis.items.clear();\n\t},\n\tisEmpty: function () {\n\t\treturn this._size === 0;\n\t},\n\tadd: function (x) {\n\t\tthis.items.add(null);\n\t\tthis._size += 1;\n\t\tvar hole = this._size;\n\t\tthis.items.set(0, x);\n\t\tfor (; x.compareTo(this.items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n\t\t\tthis.items.set(hole, this.items.get(Math.trunc(hole / 2)));\n\t\t}\n\t\tthis.items.set(hole, x);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PriorityQueue;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function ItemVisitor() {}\nextend(ItemVisitor.prototype, {\n\tvisitItem: function (item) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ItemVisitor;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function SpatialIndex() {}\nextend(SpatialIndex.prototype, {\n\tinsert: function (itemEnv, item) {},\n\tremove: function (itemEnv, item) {},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SpatialIndex;\n\t}\n});\n","import Boundable from './Boundable';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nexport default function AbstractNode() {\n\tthis.childBoundables = new ArrayList();\n\tthis.bounds = null;\n\tthis.level = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet level = arguments[0];\n\t\tthis.level = level;\n\t}\n}\nextend(AbstractNode.prototype, {\n\tgetLevel: function () {\n\t\treturn this.level;\n\t},\n\tsize: function () {\n\t\treturn this.childBoundables.size();\n\t},\n\tgetChildBoundables: function () {\n\t\treturn this.childBoundables;\n\t},\n\taddChildBoundable: function (childBoundable) {\n\t\tAssert.isTrue(this.bounds === null);\n\t\tthis.childBoundables.add(childBoundable);\n\t},\n\tisEmpty: function () {\n\t\treturn this.childBoundables.isEmpty();\n\t},\n\tgetBounds: function () {\n\t\tif (this.bounds === null) {\n\t\t\tthis.bounds = this.computeBounds();\n\t\t}\n\t\treturn this.bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn AbstractNode;\n\t}\n});\nAbstractNode.serialVersionUID = 6493722185909573708;\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport AbstractNode from './AbstractNode';\nimport extend from '../../../../../extend';\nimport Comparable from '../../../../../java/lang/Comparable';\nexport default function BoundablePair() {\n\tthis.boundable1 = null;\n\tthis.boundable2 = null;\n\tthis._distance = null;\n\tthis.itemDistance = null;\n\tlet boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2];\n\tthis.boundable1 = boundable1;\n\tthis.boundable2 = boundable2;\n\tthis.itemDistance = itemDistance;\n\tthis._distance = this.distance();\n}\nextend(BoundablePair.prototype, {\n\texpandToQueue: function (priQ, minDistance) {\n\t\tvar isComp1 = BoundablePair.isComposite(this.boundable1);\n\t\tvar isComp2 = BoundablePair.isComposite(this.boundable2);\n\t\tif (isComp1 && isComp2) {\n\t\t\tif (BoundablePair.area(this.boundable1) > BoundablePair.area(this.boundable2)) {\n\t\t\t\tthis.expand(this.boundable1, this.boundable2, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis.expand(this.boundable2, this.boundable1, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isComp1) {\n\t\t\tthis.expand(this.boundable1, this.boundable2, priQ, minDistance);\n\t\t\treturn null;\n\t\t} else if (isComp2) {\n\t\t\tthis.expand(this.boundable2, this.boundable1, priQ, minDistance);\n\t\t\treturn null;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"neither boundable is composite\");\n\t},\n\tisLeaves: function () {\n\t\treturn !(BoundablePair.isComposite(this.boundable1) || BoundablePair.isComposite(this.boundable2));\n\t},\n\tcompareTo: function (o) {\n\t\tvar nd = o;\n\t\tif (this._distance < nd._distance) return -1;\n\t\tif (this._distance > nd._distance) return 1;\n\t\treturn 0;\n\t},\n\texpand: function (bndComposite, bndOther, priQ, minDistance) {\n\t\tvar children = bndComposite.getChildBoundables();\n\t\tfor (var i = children.iterator(); i.hasNext(); ) {\n\t\t\tvar child = i.next();\n\t\t\tvar bp = new BoundablePair(child, bndOther, this.itemDistance);\n\t\t\tif (bp.getDistance() < minDistance) {\n\t\t\t\tpriQ.add(bp);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundable: function (i) {\n\t\tif (i === 0) return this.boundable1;\n\t\treturn this.boundable2;\n\t},\n\tgetDistance: function () {\n\t\treturn this._distance;\n\t},\n\tdistance: function () {\n\t\tif (this.isLeaves()) {\n\t\t\treturn this.itemDistance.distance(this.boundable1, this.boundable2);\n\t\t}\n\t\treturn this.boundable1.getBounds().distance(this.boundable2.getBounds());\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn BoundablePair;\n\t}\n});\nBoundablePair.area = function (b) {\n\treturn b.getBounds().getArea();\n};\nBoundablePair.isComposite = function (item) {\n\treturn item instanceof AbstractNode;\n};\n","import ItemBoundable from './ItemBoundable';\nimport hasInterface from '../../../../../hasInterface';\nimport ItemVisitor from '../ItemVisitor';\nimport AbstractNode from './AbstractNode';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nimport List from '../../../../../java/util/List';\nexport default function AbstractSTRtree() {\n\tthis.root = null;\n\tthis.built = false;\n\tthis.itemBoundables = new ArrayList();\n\tthis.nodeCapacity = null;\n\tif (arguments.length === 0) {\n\t\tAbstractSTRtree.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAssert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\n\t\tthis.nodeCapacity = nodeCapacity;\n\t}\n}\nextend(AbstractSTRtree.prototype, {\n\tgetNodeCapacity: function () {\n\t\treturn this.nodeCapacity;\n\t},\n\tlastNode: function (nodes) {\n\t\treturn nodes.get(nodes.size() - 1);\n\t},\n\tsize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.size(this.root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar size = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tsize += this.size(childBoundable);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tsize += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn size;\n\t\t}\n\t},\n\tremoveItem: function (node, item) {\n\t\tvar childToRemove = null;\n\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (childBoundable instanceof ItemBoundable) {\n\t\t\t\tif (childBoundable.getItem() === item) childToRemove = childBoundable;\n\t\t\t}\n\t\t}\n\t\tif (childToRemove !== null) {\n\t\t\tnode.getChildBoundables().remove(childToRemove);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\titemsTree: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.build();\n\t\t\tvar valuesTree = this.itemsTree(this.root);\n\t\t\tif (valuesTree === null) return new ArrayList();\n\t\t\treturn valuesTree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar valuesTreeForNode = new ArrayList();\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar valuesTreeForChild = this.itemsTree(childBoundable);\n\t\t\t\t\tif (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvaluesTreeForNode.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valuesTreeForNode.size() <= 0) return null;\n\t\t\treturn valuesTreeForNode;\n\t\t}\n\t},\n\tinsert: function (bounds, item) {\n\t\tAssert.isTrue(!this.built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\n\t\tthis.itemBoundables.add(new ItemBoundable(bounds, item));\n\t},\n\tboundablesAtLevel: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet level = arguments[0];\n\t\t\tvar boundables = new ArrayList();\n\t\t\tthis.boundablesAtLevel(level, this.root, boundables);\n\t\t\treturn boundables;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet level = arguments[0], top = arguments[1], boundables = arguments[2];\n\t\t\tAssert.isTrue(level > -2);\n\t\t\tif (top.getLevel() === level) {\n\t\t\t\tboundables.add(top);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (var i = top.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar boundable = i.next();\n\t\t\t\tif (boundable instanceof AbstractNode) {\n\t\t\t\t\tthis.boundablesAtLevel(level, boundable, boundables);\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(boundable instanceof ItemBoundable);\n\t\t\t\t\tif (level === -1) {\n\t\t\t\t\t\tboundables.add(boundable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchBounds = arguments[0];\n\t\t\tthis.build();\n\t\t\tvar matches = new ArrayList();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn matches;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\n\t\t\t\tthis.query(searchBounds, this.root, matches);\n\t\t\t}\n\t\t\treturn matches;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], visitor = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\n\t\t\t\tthis.query(searchBounds, this.root, visitor);\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], visitor = arguments[2];\n\t\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\t\tthis.query(searchBounds, childBoundable, visitor);\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\t\tvisitor.visitItem(childBoundable.getItem());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], matches = arguments[2];\n\t\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\t\tthis.query(searchBounds, childBoundable, matches);\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\t\tmatches.add(childBoundable.getItem());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function () {\n\t\tif (this.built) return null;\n\t\tthis.root = this.itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this.itemBoundables, -1);\n\t\tthis.itemBoundables = null;\n\t\tthis.built = true;\n\t},\n\tgetRoot: function () {\n\t\tthis.build();\n\t\treturn this.root;\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], item = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\n\t\t\t\treturn this.remove(searchBounds, this.root, item);\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], item = arguments[2];\n\t\t\tvar found = this.removeItem(node, item);\n\t\t\tif (found) return true;\n\t\t\tvar childToPrune = null;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tfound = this.remove(searchBounds, childBoundable, item);\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tchildToPrune = childBoundable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (childToPrune !== null) {\n\t\t\t\tif (childToPrune.getChildBoundables().isEmpty()) {\n\t\t\t\t\tnode.getChildBoundables().remove(childToPrune);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn found;\n\t\t}\n\t},\n\tcreateHigherLevels: function (boundablesOfALevel, level) {\n\t\tAssert.isTrue(!boundablesOfALevel.isEmpty());\n\t\tvar parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n\t\tif (parentBoundables.size() === 1) {\n\t\t\treturn parentBoundables.get(0);\n\t\t}\n\t\treturn this.createHigherLevels(parentBoundables, level + 1);\n\t},\n\tdepth: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.depth(this.root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar maxChildDepth = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar childDepth = this.depth(childBoundable);\n\t\t\t\t\tif (childDepth > maxChildDepth) maxChildDepth = childDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn maxChildDepth + 1;\n\t\t}\n\t},\n\tcreateParentBoundables: function (childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar parentBoundables = new ArrayList();\n\t\tparentBoundables.add(this.createNode(newLevel));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, this.getComparator());\n\t\tfor (var i = sortedChildBoundables.iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n\t\t\t\tparentBoundables.add(this.createNode(newLevel));\n\t\t\t}\n\t\t\tthis.lastNode(parentBoundables).addChildBoundable(childBoundable);\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tisEmpty: function () {\n\t\tif (!this.built) return this.itemBoundables.isEmpty();\n\t\treturn this.root.isEmpty();\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn AbstractSTRtree;\n\t}\n});\nAbstractSTRtree.compareDoubles = function (a, b) {\n\treturn a > b ? 1 : a < b ? -1 : 0;\n};\nfunction IntersectsOp() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp;\nAbstractSTRtree.serialVersionUID = -3886435814360241337;\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","import extend from '../../../../../extend';\nexport default function ItemDistance() {}\nextend(ItemDistance.prototype, {\n\tdistance: function (item1, item2) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ItemDistance;\n\t}\n});\n","import ItemBoundable from './ItemBoundable';\nimport PriorityQueue from '../../util/PriorityQueue';\nimport hasInterface from '../../../../../hasInterface';\nimport ItemVisitor from '../ItemVisitor';\nimport SpatialIndex from '../SpatialIndex';\nimport AbstractNode from './AbstractNode';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport BoundablePair from './BoundablePair';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport List from '../../../../../java/util/List';\nimport AbstractSTRtree from './AbstractSTRtree';\nimport ItemDistance from './ItemDistance';\nexport default function STRtree() {\n\tif (arguments.length === 0) {\n\t\tSTRtree.call(this, STRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAbstractSTRtree.call(this, nodeCapacity);\n\t}\n}\ninherits(STRtree, AbstractSTRtree);\nextend(STRtree.prototype, {\n\tcreateParentBoundablesFromVerticalSlices: function (verticalSlices, newLevel) {\n\t\tAssert.isTrue(verticalSlices.length > 0);\n\t\tvar parentBoundables = new ArrayList();\n\t\tfor (var i = 0; i < verticalSlices.length; i++) {\n\t\t\tparentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tcreateNode: function (level) {\n\t\treturn new STRtreeNode(level);\n\t},\n\tsize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.size.call(this);\n\t\t} else return AbstractSTRtree.prototype.size.apply(this, arguments);\n\t},\n\tinsert: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\tif (itemEnv.isNull()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tAbstractSTRtree.prototype.insert.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.insert.apply(this, arguments);\n\t},\n\tgetIntersectsOp: function () {\n\t\treturn STRtree.intersectsOp;\n\t},\n\tverticalSlices: function (childBoundables, sliceCount) {\n\t\tvar sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n\t\tvar slices = new Array(sliceCount).fill(null);\n\t\tvar i = childBoundables.iterator();\n\t\tfor (var j = 0; j < sliceCount; j++) {\n\t\t\tslices[j] = new ArrayList();\n\t\t\tvar boundablesAddedToSlice = 0;\n\t\t\twhile (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tslices[j].add(childBoundable);\n\t\t\t\tboundablesAddedToSlice++;\n\t\t\t}\n\t\t}\n\t\treturn slices;\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\treturn AbstractSTRtree.prototype.query.call(this, searchEnv);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tAbstractSTRtree.prototype.query.call(this, searchEnv, visitor);\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], visitor = arguments[2];\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, searchBounds, node, visitor);\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], matches = arguments[2];\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, searchBounds, node, matches);\n\t\t\t}\n\t\t}\n\t},\n\tgetComparator: function () {\n\t\treturn STRtree.yComparator;\n\t},\n\tcreateParentBoundablesFromVerticalSlice: function (childBoundables, newLevel) {\n\t\treturn AbstractSTRtree.prototype.createParentBoundables.call(this, childBoundables, newLevel);\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\treturn AbstractSTRtree.prototype.remove.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.remove.apply(this, arguments);\n\t},\n\tdepth: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.depth.call(this);\n\t\t} else return AbstractSTRtree.prototype.depth.apply(this, arguments);\n\t},\n\tcreateParentBoundables: function (childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, STRtree.xComparator);\n\t\tvar verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n\t\treturn this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\n\t},\n\tnearestNeighbour: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], ItemDistance)) {\n\t\t\t\tlet itemDist = arguments[0];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair) {\n\t\t\t\tlet initBndPair = arguments[0];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n\t\t\t\tlet tree = arguments[0], itemDist = arguments[1];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar minPair = null;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) break;\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tdistanceLowerBound = currentDistance;\n\t\t\t\t\t\tminPair = bndPair;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2];\n\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\treturn this.nearestNeighbour(bp)[0];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn STRtree;\n\t}\n});\nSTRtree.centreX = function (e) {\n\treturn STRtree.avg(e.getMinX(), e.getMaxX());\n};\nSTRtree.avg = function (a, b) {\n\treturn (a + b) / 2;\n};\nSTRtree.centreY = function (e) {\n\treturn STRtree.avg(e.getMinY(), e.getMaxY());\n};\nfunction STRtreeNode() {\n\tlet level = arguments[0];\n\tAbstractNode.call(this, level);\n}\ninherits(STRtreeNode, AbstractNode);\nextend(STRtreeNode.prototype, {\n\tcomputeBounds: function () {\n\t\tvar bounds = null;\n\t\tfor (var i = this.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (bounds === null) {\n\t\t\t\tbounds = new Envelope(childBoundable.getBounds());\n\t\t\t} else {\n\t\t\t\tbounds.expandToInclude(childBoundable.getBounds());\n\t\t\t}\n\t\t}\n\t\treturn bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn STRtreeNode;\n\t}\n});\nSTRtree.STRtreeNode = STRtreeNode;\nSTRtree.serialVersionUID = 259274702368956900;\nSTRtree.xComparator = {\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tcompare: function (o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\n\t}\n};\nSTRtree.yComparator = {\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tcompare: function (o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\n\t}\n};\nSTRtree.intersectsOp = {\n\tinterfaces_: function () {\n\t\treturn [IntersectsOp];\n\t},\n\tintersects: function (aBounds, bBounds) {\n\t\treturn aBounds.intersects(bBounds);\n\t}\n};\nSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","import extend from '../../../../extend';\nimport Assert from '../util/Assert';\nexport default function SegmentPointComparator() {}\nextend(SegmentPointComparator.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentPointComparator;\n\t}\n});\nSegmentPointComparator.relativeSign = function (x0, x1) {\n\tif (x0 < x1) return -1;\n\tif (x0 > x1) return 1;\n\treturn 0;\n};\nSegmentPointComparator.compare = function (octant, p0, p1) {\n\tif (p0.equals2D(p1)) return 0;\n\tvar xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n\tvar ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n\tswitch (octant) {\n\t\tcase 0:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, ySign);\n\t\tcase 1:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, xSign);\n\t\tcase 2:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, -xSign);\n\t\tcase 3:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, ySign);\n\t\tcase 4:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, -ySign);\n\t\tcase 5:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, -xSign);\n\t\tcase 6:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, xSign);\n\t\tcase 7:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, -ySign);\n\t}\n\tAssert.shouldNeverReachHere(\"invalid octant value\");\n\treturn 0;\n};\nSegmentPointComparator.compareValue = function (compareSign0, compareSign1) {\n\tif (compareSign0 < 0) return -1;\n\tif (compareSign0 > 0) return 1;\n\tif (compareSign1 < 0) return -1;\n\tif (compareSign1 > 0) return 1;\n\treturn 0;\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport SegmentPointComparator from './SegmentPointComparator';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function SegmentNode() {\n\tthis.segString = null;\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.segmentOctant = null;\n\tthis._isInterior = null;\n\tlet segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3];\n\tthis.segString = segString;\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.segmentOctant = segmentOctant;\n\tthis._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n}\nextend(SegmentNode.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this.coord;\n\t},\n\tprint: function (out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\n\t\tif (this.coord.equals2D(other.coord)) return 0;\n\t\treturn SegmentPointComparator.compare(this.segmentOctant, this.coord, other.coord);\n\t},\n\tisEndPoint: function (maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && !this._isInterior) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\tisInterior: function () {\n\t\treturn this._isInterior;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentNode;\n\t}\n});\n","import CoordinateList from '../geom/CoordinateList';\nimport SegmentNode from './SegmentNode';\nimport Iterator from '../../../../java/util/Iterator';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function SegmentNodeList() {\n\tthis.nodeMap = new TreeMap();\n\tthis.edge = null;\n\tlet edge = arguments[0];\n\tthis.edge = edge;\n}\nextend(SegmentNodeList.prototype, {\n\tgetSplitCoordinates: function () {\n\t\tvar coordList = new CoordinateList();\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tthis.addEdgeCoordinates(eiPrev, ei, coordList);\n\t\t\teiPrev = ei;\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\taddCollapsedNodes: function () {\n\t\tvar collapsedVertexIndexes = new ArrayList();\n\t\tthis.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n\t\tthis.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n\t\tfor (var it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\n\t\t\tvar vertexIndex = it.next().intValue();\n\t\t\tthis.add(this.edge.getCoordinate(vertexIndex), vertexIndex);\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\tfindCollapsesFromExistingVertices: function (collapsedVertexIndexes) {\n\t\tfor (var i = 0; i < this.edge.size() - 2; i++) {\n\t\t\tvar p0 = this.edge.getCoordinate(i);\n\t\t\tvar p1 = this.edge.getCoordinate(i + 1);\n\t\t\tvar p2 = this.edge.getCoordinate(i + 2);\n\t\t\tif (p0.equals2D(p2)) {\n\t\t\t\tcollapsedVertexIndexes.add(new Integer(i + 1));\n\t\t\t}\n\t\t}\n\t},\n\taddEdgeCoordinates: function (ei0, ei1, coordList) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar ipt = 0;\n\t\tcoordList.add(new Coordinate(ei0.coord), false);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tcoordList.add(this.edge.getCoordinate(i));\n\t\t}\n\t\tif (useIntPt1) {\n\t\t\tcoordList.add(new Coordinate(ei1.coord));\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function (edgeList) {\n\t\tthis.addEndpoints();\n\t\tthis.addCollapsedNodes();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tfindCollapseIndex: function (ei0, ei1, collapsedVertexIndex) {\n\t\tif (!ei0.coord.equals2D(ei1.coord)) return false;\n\t\tvar numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n\t\tif (!ei1.isInterior()) {\n\t\t\tnumVerticesBetween--;\n\t\t}\n\t\tif (numVerticesBetween === 1) {\n\t\t\tcollapsedVertexIndex[0] = ei0.segmentIndex + 1;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tfindCollapsesFromInsertedNodes: function (collapsedVertexIndexes) {\n\t\tvar collapsedVertexIndex = new Array(1).fill(null);\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n\t\t\tif (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tgetEdge: function () {\n\t\treturn this.edge;\n\t},\n\taddEndpoints: function () {\n\t\tvar maxSegIndex = this.edge.size() - 1;\n\t\tthis.add(this.edge.getCoordinate(0), 0);\n\t\tthis.add(this.edge.getCoordinate(maxSegIndex), maxSegIndex);\n\t},\n\tcreateSplitEdge: function (ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.getCoordinate(i);\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\n\t\treturn new NodedSegmentString(pts, this.edge.getData());\n\t},\n\tadd: function (intPt, segmentIndex) {\n\t\tvar eiNew = new SegmentNode(this.edge, intPt, segmentIndex, this.edge.getSegmentOctant(segmentIndex));\n\t\tvar ei = this.nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\tAssert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\n\t\t\treturn ei;\n\t\t}\n\t\tthis.nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tcheckSplitEdgesCorrectness: function (splitEdges) {\n\t\tvar edgePts = this.edge.getCoordinates();\n\t\tvar split0 = splitEdges.get(0);\n\t\tvar pt0 = split0.getCoordinate(0);\n\t\tif (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\n\t\tvar splitn = splitEdges.get(splitEdges.size() - 1);\n\t\tvar splitnPts = splitn.getCoordinates();\n\t\tvar ptn = splitnPts[splitnPts.length - 1];\n\t\tif (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentNodeList;\n\t}\n});\nfunction NodeVertexIterator() {\n\tthis.nodeList = null;\n\tthis.edge = null;\n\tthis.nodeIt = null;\n\tthis.currNode = null;\n\tthis.nextNode = null;\n\tthis.currSegIndex = 0;\n\tlet nodeList = arguments[0];\n\tthis.nodeList = nodeList;\n\tthis.edge = nodeList.getEdge();\n\tthis.nodeIt = nodeList.iterator();\n\tthis.readNextNode();\n}\nextend(NodeVertexIterator.prototype, {\n\tnext: function () {\n\t\tif (this.currNode === null) {\n\t\t\tthis.currNode = this.nextNode;\n\t\t\tthis.currSegIndex = this.currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this.currNode;\n\t\t}\n\t\tif (this.nextNode === null) return null;\n\t\tif (this.nextNode.segmentIndex === this.currNode.segmentIndex) {\n\t\t\tthis.currNode = this.nextNode;\n\t\t\tthis.currSegIndex = this.currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this.currNode;\n\t\t}\n\t\tif (this.nextNode.segmentIndex > this.currNode.segmentIndex) {}\n\t\treturn null;\n\t},\n\tremove: function () {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function () {\n\t\tif (this.nextNode === null) return false;\n\t\treturn true;\n\t},\n\treadNextNode: function () {\n\t\tif (this.nodeIt.hasNext()) this.nextNode = this.nodeIt.next(); else this.nextNode = null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function () {\n\t\treturn NodeVertexIterator;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentString from './SegmentString';\nexport default function NodableSegmentString() {}\nextend(NodableSegmentString.prototype, {\n\taddIntersection: function (intPt, segmentIndex) {},\n\tinterfaces_: function () {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn NodableSegmentString;\n\t}\n});\n","import SegmentNodeList from './SegmentNodeList';\nimport WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Coordinate from '../geom/Coordinate';\nimport Octant from './Octant';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport NodableSegmentString from './NodableSegmentString';\nexport default function NodedSegmentString() {\n\tthis.nodeList = new SegmentNodeList(this);\n\tthis.pts = null;\n\tthis.data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis.pts = pts;\n\tthis.data = data;\n}\nextend(NodedSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tsize: function () {\n\t\treturn this.pts.length;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this.pts[i];\n\t},\n\tisClosed: function () {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetSegmentOctant: function (index) {\n\t\tif (index === this.pts.length - 1) return -1;\n\t\treturn this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function (data) {\n\t\tthis.data = data;\n\t},\n\tsafeOctant: function (p0, p1) {\n\t\tif (p0.equals2D(p1)) return 0;\n\t\treturn Octant.octant(p0, p1);\n\t},\n\tgetData: function () {\n\t\treturn this.data;\n\t},\n\taddIntersection: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet intPt = arguments[0], segmentIndex = arguments[1];\n\t\t\tthis.addIntersectionNode(intPt, segmentIndex);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3];\n\t\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\t\tthis.addIntersection(intPt, segmentIndex);\n\t\t}\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.pts));\n\t},\n\tgetNodeList: function () {\n\t\treturn this.nodeList;\n\t},\n\taddIntersectionNode: function (intPt, segmentIndex) {\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.nodeList.add(intPt, normalizedSegmentIndex);\n\t\treturn ei;\n\t},\n\taddIntersections: function (li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [NodableSegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn NodedSegmentString;\n\t}\n});\nNodedSegmentString.getNodedSubstrings = function () {\n\tif (arguments.length === 1) {\n\t\tlet segStrings = arguments[0];\n\t\tvar resultEdgelist = new ArrayList();\n\t\tNodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n\t\treturn resultEdgelist;\n\t} else if (arguments.length === 2) {\n\t\tlet segStrings = arguments[0], resultEdgelist = arguments[1];\n\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar ss = i.next();\n\t\t\tss.getNodeList().addSplitEdges(resultEdgelist);\n\t\t}\n\t}\n};\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChainOverlapAction() {\n\tthis.tempEnv1 = new Envelope();\n\tthis.tempEnv2 = new Envelope();\n\tthis.overlapSeg1 = new LineSegment();\n\tthis.overlapSeg2 = new LineSegment();\n}\nextend(MonotoneChainOverlapAction.prototype, {\n\toverlap: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet seg1 = arguments[0], seg2 = arguments[1];\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tmc1.getLineSegment(start1, this.overlapSeg1);\n\t\t\tmc2.getLineSegment(start2, this.overlapSeg2);\n\t\t\tthis.overlap(this.overlapSeg1, this.overlapSeg2);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainOverlapAction;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChain() {\n\tthis.pts = null;\n\tthis.start = null;\n\tthis.end = null;\n\tthis.env = null;\n\tthis.context = null;\n\tthis.id = null;\n\tlet pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3];\n\tthis.pts = pts;\n\tthis.start = start;\n\tthis.end = end;\n\tthis.context = context;\n}\nextend(MonotoneChain.prototype, {\n\tgetLineSegment: function (index, ls) {\n\t\tls.p0 = this.pts[index];\n\t\tls.p1 = this.pts[index + 1];\n\t},\n\tcomputeSelect: function (searchEnv, start0, end0, mcs) {\n\t\tvar p0 = this.pts[start0];\n\t\tvar p1 = this.pts[end0];\n\t\tmcs.tempEnv1.init(p0, p1);\n\t\tif (end0 - start0 === 1) {\n\t\t\tmcs.select(this, start0);\n\t\t\treturn null;\n\t\t}\n\t\tif (!searchEnv.intersects(mcs.tempEnv1)) return null;\n\t\tvar mid = Math.trunc((start0 + end0) / 2);\n\t\tif (start0 < mid) {\n\t\t\tthis.computeSelect(searchEnv, start0, mid, mcs);\n\t\t}\n\t\tif (mid < end0) {\n\t\t\tthis.computeSelect(searchEnv, mid, end0, mcs);\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar coord = new Array(this.end - this.start + 1).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this.start; i <= this.end; i++) {\n\t\t\tcoord[index++] = this.pts[i];\n\t\t}\n\t\treturn coord;\n\t},\n\tcomputeOverlaps: function (mc, mco) {\n\t\tthis.computeOverlapsInternal(this.start, this.end, mc, mc.start, mc.end, mco);\n\t},\n\tsetId: function (id) {\n\t\tthis.id = id;\n\t},\n\tselect: function (searchEnv, mcs) {\n\t\tthis.computeSelect(searchEnv, this.start, this.end, mcs);\n\t},\n\tgetEnvelope: function () {\n\t\tif (this.env === null) {\n\t\t\tvar p0 = this.pts[this.start];\n\t\t\tvar p1 = this.pts[this.end];\n\t\t\tthis.env = new Envelope(p0, p1);\n\t\t}\n\t\treturn this.env;\n\t},\n\tgetEndIndex: function () {\n\t\treturn this.end;\n\t},\n\tgetStartIndex: function () {\n\t\treturn this.start;\n\t},\n\tgetContext: function () {\n\t\treturn this.context;\n\t},\n\tgetId: function () {\n\t\treturn this.id;\n\t},\n\tcomputeOverlapsInternal: function (start0, end0, mc, start1, end1, mco) {\n\t\tvar p00 = this.pts[start0];\n\t\tvar p01 = this.pts[end0];\n\t\tvar p10 = mc.pts[start1];\n\t\tvar p11 = mc.pts[end1];\n\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\tmco.overlap(this, start0, mc, start1);\n\t\t\treturn null;\n\t\t}\n\t\tmco.tempEnv1.init(p00, p01);\n\t\tmco.tempEnv2.init(p10, p11);\n\t\tif (!mco.tempEnv1.intersects(mco.tempEnv2)) return null;\n\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\tif (start0 < mid0) {\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco);\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco);\n\t\t}\n\t\tif (mid0 < end0) {\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco);\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChain;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Quadrant() {}\nextend(Quadrant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Quadrant;\n\t}\n});\nQuadrant.isNorthern = function (quad) {\n\treturn quad === Quadrant.NE || quad === Quadrant.NW;\n};\nQuadrant.isOpposite = function (quad1, quad2) {\n\tif (quad1 === quad2) return false;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return true;\n\treturn false;\n};\nQuadrant.commonHalfPlane = function (quad1, quad2) {\n\tif (quad1 === quad2) return quad1;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return -1;\n\tvar min = quad1 < quad2 ? quad1 : quad2;\n\tvar max = quad1 > quad2 ? quad1 : quad2;\n\tif (min === 0 && max === 3) return 3;\n\treturn min;\n};\nQuadrant.isInHalfPlane = function (quad, halfPlane) {\n\tif (halfPlane === Quadrant.SE) {\n\t\treturn quad === Quadrant.SE || quad === Quadrant.SW;\n\t}\n\treturn quad === halfPlane || quad === halfPlane + 1;\n};\nQuadrant.quadrant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tlet dx = arguments[0], dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tif (dx >= 0.0) {\n\t\t\tif (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW;\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tif (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\n\t\tif (p1.x >= p0.x) {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW;\n\t\t}\n\t}\n};\nQuadrant.NE = 0;\nQuadrant.NW = 1;\nQuadrant.SW = 2;\nQuadrant.SE = 3;\n","import MonotoneChain from './MonotoneChain';\nimport extend from '../../../../../extend';\nimport Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../../geomgraph/Quadrant';\nexport default function MonotoneChainBuilder() {}\nextend(MonotoneChainBuilder.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainBuilder;\n\t}\n});\nMonotoneChainBuilder.getChainStartIndices = function (pts) {\n\tvar start = 0;\n\tvar startIndexList = new ArrayList();\n\tstartIndexList.add(new Integer(start));\n\tdo {\n\t\tvar last = MonotoneChainBuilder.findChainEnd(pts, start);\n\t\tstartIndexList.add(new Integer(last));\n\t\tstart = last;\n\t} while (start < pts.length - 1);\n\tvar startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n\treturn startIndex;\n};\nMonotoneChainBuilder.findChainEnd = function (pts, start) {\n\tvar safeStart = start;\n\twhile (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n\t\tsafeStart++;\n\t}\n\tif (safeStart >= pts.length - 1) {\n\t\treturn pts.length - 1;\n\t}\n\tvar chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n\tvar last = start + 1;\n\twhile (last < pts.length) {\n\t\tif (!pts[last - 1].equals2D(pts[last])) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t}\n\t\tlast++;\n\t}\n\treturn last - 1;\n};\nMonotoneChainBuilder.getChains = function () {\n\tif (arguments.length === 1) {\n\t\tlet pts = arguments[0];\n\t\treturn MonotoneChainBuilder.getChains(pts, null);\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], context = arguments[1];\n\t\tvar mcList = new ArrayList();\n\t\tvar startIndex = MonotoneChainBuilder.getChainStartIndices(pts);\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(pts, startIndex[i], startIndex[i + 1], context);\n\t\t\tmcList.add(mc);\n\t\t}\n\t\treturn mcList;\n\t}\n};\nMonotoneChainBuilder.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n","import extend from '../../../../extend';\nexport default function Noder() {}\nextend(Noder.prototype, {\n\tcomputeNodes: function (segStrings) {},\n\tgetNodedSubstrings: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Noder;\n\t}\n});\n","import Noder from './Noder';\nimport extend from '../../../../extend';\nexport default function SinglePassNoder() {\n\tthis.segInt = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet segInt = arguments[0];\n\t\tthis.setSegmentIntersector(segInt);\n\t}\n}\nextend(SinglePassNoder.prototype, {\n\tsetSegmentIntersector: function (segInt) {\n\t\tthis.segInt = segInt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn SinglePassNoder;\n\t}\n});\n","import STRtree from '../index/strtree/STRtree';\nimport NodedSegmentString from './NodedSegmentString';\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction';\nimport extend from '../../../../extend';\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nimport SinglePassNoder from './SinglePassNoder';\nexport default function MCIndexNoder() {\n\tthis.monoChains = new ArrayList();\n\tthis.index = new STRtree();\n\tthis.idCounter = 0;\n\tthis.nodedSegStrings = null;\n\tthis.nOverlaps = 0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet si = arguments[0];\n\t\tSinglePassNoder.call(this, si);\n\t}\n}\ninherits(MCIndexNoder, SinglePassNoder);\nextend(MCIndexNoder.prototype, {\n\tgetMonotoneChains: function () {\n\t\treturn this.monoChains;\n\t},\n\tgetNodedSubstrings: function () {\n\t\treturn NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);\n\t},\n\tgetIndex: function () {\n\t\treturn this.index;\n\t},\n\tadd: function (segStr) {\n\t\tvar segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n\t\tfor (var i = segChains.iterator(); i.hasNext(); ) {\n\t\t\tvar mc = i.next();\n\t\t\tmc.setId(this.idCounter++);\n\t\t\tthis.index.insert(mc.getEnvelope(), mc);\n\t\t\tthis.monoChains.add(mc);\n\t\t}\n\t},\n\tcomputeNodes: function (inputSegStrings) {\n\t\tthis.nodedSegStrings = inputSegStrings;\n\t\tfor (var i = inputSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t\tthis.intersectChains();\n\t},\n\tintersectChains: function () {\n\t\tvar overlapAction = new SegmentOverlapAction(this.segInt);\n\t\tfor (var i = this.monoChains.iterator(); i.hasNext(); ) {\n\t\t\tvar queryChain = i.next();\n\t\t\tvar overlapChains = this.index.query(queryChain.getEnvelope());\n\t\t\tfor (var j = overlapChains.iterator(); j.hasNext(); ) {\n\t\t\t\tvar testChain = j.next();\n\t\t\t\tif (testChain.getId() > queryChain.getId()) {\n\t\t\t\t\tqueryChain.computeOverlaps(testChain, overlapAction);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t\tif (this.segInt.isDone()) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexNoder;\n\t}\n});\nfunction SegmentOverlapAction() {\n\tMonotoneChainOverlapAction.apply(this);\n\tthis.si = null;\n\tlet si = arguments[0];\n\tthis.si = si;\n}\ninherits(SegmentOverlapAction, MonotoneChainOverlapAction);\nextend(SegmentOverlapAction.prototype, {\n\toverlap: function () {\n\t\tif (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tvar ss1 = mc1.getContext();\n\t\t\tvar ss2 = mc2.getContext();\n\t\t\tthis.si.processIntersections(ss1, start1, ss2, start2);\n\t\t} else return MonotoneChainOverlapAction.prototype.overlap.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentOverlapAction;\n\t}\n});\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\n","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport inherits from '../../../../inherits';\nexport default function TopologyException() {\n\tthis.pt = null;\n\tif (arguments.length === 1) {\n\t\tlet msg = arguments[0];\n\t\tRuntimeException.call(this, msg);\n\t} else if (arguments.length === 2) {\n\t\tlet msg = arguments[0], pt = arguments[1];\n\t\tRuntimeException.call(this, TopologyException.msgWithCoord(msg, pt));\n\t\tthis.name = 'TopologyException';\n\t\tthis.pt = new Coordinate(pt);\n\t}\n}\ninherits(TopologyException, RuntimeException);\nextend(TopologyException.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyException;\n\t}\n});\nTopologyException.msgWithCoord = function (msg, pt) {\n\tif (pt !== null) return msg + \" [ \" + pt + \" ]\";\n\treturn msg;\n};\n","import extend from '../../../../extend';\nexport default function SegmentIntersector() {}\nextend(SegmentIntersector.prototype, {\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {},\n\tisDone: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentIntersector;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function InteriorIntersectionFinder() {\n\tthis.findAllIntersections = false;\n\tthis.isCheckEndSegmentsOnly = false;\n\tthis.li = null;\n\tthis.interiorIntersection = null;\n\tthis.intSegments = null;\n\tthis.intersections = new ArrayList();\n\tthis.intersectionCount = 0;\n\tthis.keepIntersections = true;\n\tlet li = arguments[0];\n\tthis.li = li;\n\tthis.interiorIntersection = null;\n}\nextend(InteriorIntersectionFinder.prototype, {\n\tgetInteriorIntersection: function () {\n\t\treturn this.interiorIntersection;\n\t},\n\tsetCheckEndSegmentsOnly: function (isCheckEndSegmentsOnly) {\n\t\tthis.isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n\t},\n\tgetIntersectionSegments: function () {\n\t\treturn this.intSegments;\n\t},\n\tcount: function () {\n\t\treturn this.intersectionCount;\n\t},\n\tgetIntersections: function () {\n\t\treturn this.intersections;\n\t},\n\tsetFindAllIntersections: function (findAllIntersections) {\n\t\tthis.findAllIntersections = findAllIntersections;\n\t},\n\tsetKeepIntersections: function (keepIntersections) {\n\t\tthis.keepIntersections = keepIntersections;\n\t},\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (!this.findAllIntersections && this.hasIntersection()) return null;\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tif (this.isCheckEndSegmentsOnly) {\n\t\t\tvar isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n\t\t\tif (!isEndSegPresent) return null;\n\t\t}\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tif (this.li.isInteriorIntersection()) {\n\t\t\t\tthis.intSegments = new Array(4).fill(null);\n\t\t\t\tthis.intSegments[0] = p00;\n\t\t\t\tthis.intSegments[1] = p01;\n\t\t\t\tthis.intSegments[2] = p10;\n\t\t\t\tthis.intSegments[3] = p11;\n\t\t\t\tthis.interiorIntersection = this.li.getIntersection(0);\n\t\t\t\tif (this.keepIntersections) this.intersections.add(this.interiorIntersection);\n\t\t\t\tthis.intersectionCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisEndSegment: function (segStr, index) {\n\t\tif (index === 0) return true;\n\t\tif (index >= segStr.size() - 2) return true;\n\t\treturn false;\n\t},\n\thasIntersection: function () {\n\t\treturn this.interiorIntersection !== null;\n\t},\n\tisDone: function () {\n\t\tif (this.findAllIntersections) return false;\n\t\treturn this.interiorIntersection !== null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorIntersectionFinder;\n\t}\n});\nInteriorIntersectionFinder.createAllIntersectionsFinder = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\treturn finder;\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function (li) {\n\treturn new InteriorIntersectionFinder(li);\n};\nInteriorIntersectionFinder.createIntersectionCounter = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\tfinder.setKeepIntersections(false);\n\treturn finder;\n};\n","import WKTWriter from '../io/WKTWriter';\nimport MCIndexNoder from './MCIndexNoder';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinder from './InteriorIntersectionFinder';\nexport default function FastNodingValidator() {\n\tthis.li = new RobustLineIntersector();\n\tthis.segStrings = null;\n\tthis.findAllIntersections = false;\n\tthis.segInt = null;\n\tthis._isValid = true;\n\tlet segStrings = arguments[0];\n\tthis.segStrings = segStrings;\n}\nextend(FastNodingValidator.prototype, {\n\texecute: function () {\n\t\tif (this.segInt !== null) return null;\n\t\tthis.checkInteriorIntersections();\n\t},\n\tgetIntersections: function () {\n\t\treturn this.segInt.getIntersections();\n\t},\n\tisValid: function () {\n\t\tthis.execute();\n\t\treturn this._isValid;\n\t},\n\tsetFindAllIntersections: function (findAllIntersections) {\n\t\tthis.findAllIntersections = findAllIntersections;\n\t},\n\tcheckInteriorIntersections: function () {\n\t\tthis._isValid = true;\n\t\tthis.segInt = new InteriorIntersectionFinder(this.li);\n\t\tthis.segInt.setFindAllIntersections(this.findAllIntersections);\n\t\tvar noder = new MCIndexNoder();\n\t\tnoder.setSegmentIntersector(this.segInt);\n\t\tnoder.computeNodes(this.segStrings);\n\t\tif (this.segInt.hasIntersection()) {\n\t\t\tthis._isValid = false;\n\t\t\treturn null;\n\t\t}\n\t},\n\tcheckValid: function () {\n\t\tthis.execute();\n\t\tif (!this._isValid) throw new TopologyException(this.getErrorMessage(), this.segInt.getInteriorIntersection());\n\t},\n\tgetErrorMessage: function () {\n\t\tif (this._isValid) return \"no intersections found\";\n\t\tvar intSegs = this.segInt.getIntersectionSegments();\n\t\treturn \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn FastNodingValidator;\n\t}\n});\nFastNodingValidator.computeIntersections = function (segStrings) {\n\tvar nv = new FastNodingValidator(segStrings);\n\tnv.setFindAllIntersections(true);\n\tnv.isValid();\n\treturn nv.getIntersections();\n};\n","import BasicSegmentString from '../noding/BasicSegmentString';\nimport extend from '../../../../extend';\nimport FastNodingValidator from '../noding/FastNodingValidator';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function EdgeNodingValidator() {\n\tthis.nv = null;\n\tlet edges = arguments[0];\n\tthis.nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n}\nextend(EdgeNodingValidator.prototype, {\n\tcheckValid: function () {\n\t\tthis.nv.checkValid();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeNodingValidator;\n\t}\n});\nEdgeNodingValidator.toSegmentStrings = function (edges) {\n\tvar segStrings = new ArrayList();\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar e = i.next();\n\t\tsegStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n\t}\n\treturn segStrings;\n};\nEdgeNodingValidator.checkValid = function (edges) {\n\tvar validator = new EdgeNodingValidator(edges);\n\tvalidator.checkValid();\n};\n","import GeometryFactory from '../GeometryFactory';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function GeometryCollectionMapper() {\n\tthis.mapOp = null;\n\tlet mapOp = arguments[0];\n\tthis.mapOp = mapOp;\n}\nextend(GeometryCollectionMapper.prototype, {\n\tmap: function (gc) {\n\t\tvar mapped = new ArrayList();\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = this.mapOp.map(gc.getGeometryN(i));\n\t\t\tif (!g.isEmpty()) mapped.add(g);\n\t\t}\n\t\treturn gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollectionMapper;\n\t}\n});\nGeometryCollectionMapper.map = function (gc, op) {\n\tvar mapper = new GeometryCollectionMapper(op);\n\treturn mapper.map(gc);\n};\n","import extend from '../../../../extend';\nexport default function Position() {}\nextend(Position.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Position;\n\t}\n});\nPosition.opposite = function (position) {\n\tif (position === Position.LEFT) return Position.RIGHT;\n\tif (position === Position.RIGHT) return Position.LEFT;\n\treturn position;\n};\nPosition.ON = 0;\nPosition.LEFT = 1;\nPosition.RIGHT = 2;\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nexport default function TopologyLocation() {\n\tthis.location = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.init(location.length);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet on = arguments[0];\n\t\t\tthis.init(1);\n\t\t\tthis.location[Position.ON] = on;\n\t\t} else if (arguments[0] instanceof TopologyLocation) {\n\t\t\tlet gl = arguments[0];\n\t\t\tthis.init(gl.location.length);\n\t\t\tif (gl !== null) {\n\t\t\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\t\t\tthis.location[i] = gl.location[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet on = arguments[0], left = arguments[1], right = arguments[2];\n\t\tthis.init(3);\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t}\n}\nextend(TopologyLocation.prototype, {\n\tsetAllLocations: function (locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tthis.location[i] = locValue;\n\t\t}\n\t},\n\tisNull: function () {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== Location.NONE) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tsetAllLocationsIfNull: function (locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) this.location[i] = locValue;\n\t\t}\n\t},\n\tisLine: function () {\n\t\treturn this.location.length === 1;\n\t},\n\tmerge: function (gl) {\n\t\tif (gl.location.length > this.location.length) {\n\t\t\tvar newLoc = new Array(3).fill(null);\n\t\t\tnewLoc[Position.ON] = this.location[Position.ON];\n\t\t\tnewLoc[Position.LEFT] = Location.NONE;\n\t\t\tnewLoc[Position.RIGHT] = Location.NONE;\n\t\t\tthis.location = newLoc;\n\t\t}\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\n\t\t}\n\t},\n\tgetLocations: function () {\n\t\treturn this.location;\n\t},\n\tflip: function () {\n\t\tif (this.location.length <= 1) return null;\n\t\tvar temp = this.location[Position.LEFT];\n\t\tthis.location[Position.LEFT] = this.location[Position.RIGHT];\n\t\tthis.location[Position.RIGHT] = temp;\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\n\t\tbuf.append(Location.toLocationSymbol(this.location[Position.ON]));\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\n\t\treturn buf.toString();\n\t},\n\tsetLocations: function (on, left, right) {\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t},\n\tget: function (posIndex) {\n\t\tif (posIndex < this.location.length) return this.location[posIndex];\n\t\treturn Location.NONE;\n\t},\n\tisArea: function () {\n\t\treturn this.location.length > 1;\n\t},\n\tisAnyNull: function () {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tsetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet locValue = arguments[0];\n\t\t\tthis.setLocation(Position.ON, locValue);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet locIndex = arguments[0], locValue = arguments[1];\n\t\t\tthis.location[locIndex] = locValue;\n\t\t}\n\t},\n\tinit: function (size) {\n\t\tthis.location = new Array(size).fill(null);\n\t\tthis.setAllLocations(Location.NONE);\n\t},\n\tisEqualOnSide: function (le, locIndex) {\n\t\treturn this.location[locIndex] === le.location[locIndex];\n\t},\n\tallPositionsEqual: function (loc) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== loc) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyLocation;\n\t}\n});\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nimport TopologyLocation from './TopologyLocation';\nexport default function Label() {\n\tthis.elt = new Array(2).fill(null);\n\tif (arguments.length === 1) {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet onLoc = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(onLoc);\n\t\t\tthis.elt[1] = new TopologyLocation(onLoc);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(lbl.elt[0]);\n\t\t\tthis.elt[1] = new TopologyLocation(lbl.elt[1]);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[geomIndex].setLocation(onLoc);\n\t} else if (arguments.length === 3) {\n\t\tlet onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2];\n\t\tthis.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t\tthis.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t} else if (arguments.length === 4) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc);\n\t}\n}\nextend(Label.prototype, {\n\tgetGeometryCount: function () {\n\t\tvar count = 0;\n\t\tif (!this.elt[0].isNull()) count++;\n\t\tif (!this.elt[1].isNull()) count++;\n\t\treturn count;\n\t},\n\tsetAllLocations: function (geomIndex, location) {\n\t\tthis.elt[geomIndex].setAllLocations(location);\n\t},\n\tisNull: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isNull();\n\t},\n\tsetAllLocationsIfNull: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.setAllLocationsIfNull(0, location);\n\t\t\tthis.setAllLocationsIfNull(1, location);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setAllLocationsIfNull(location);\n\t\t}\n\t},\n\tisLine: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isLine();\n\t},\n\tmerge: function (lbl) {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.elt[i] === null && lbl.elt[i] !== null) {\n\t\t\t\tthis.elt[i] = new TopologyLocation(lbl.elt[i]);\n\t\t\t} else {\n\t\t\t\tthis.elt[i].merge(lbl.elt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tflip: function () {\n\t\tthis.elt[0].flip();\n\t\tthis.elt[1].flip();\n\t},\n\tgetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].get(Position.ON);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this.elt[geomIndex].get(posIndex);\n\t\t}\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.elt[0] !== null) {\n\t\t\tbuf.append(\"A:\");\n\t\t\tbuf.append(this.elt[0].toString());\n\t\t}\n\t\tif (this.elt[1] !== null) {\n\t\t\tbuf.append(\" B:\");\n\t\t\tbuf.append(this.elt[1].toString());\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tisArea: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.elt[0].isArea() || this.elt[1].isArea();\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].isArea();\n\t\t}\n\t},\n\tisAnyNull: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isAnyNull();\n\t},\n\tsetLocation: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setLocation(Position.ON, location);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tthis.elt[geomIndex].setLocation(posIndex, location);\n\t\t}\n\t},\n\tisEqualOnSide: function (lbl, side) {\n\t\treturn this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\n\t},\n\tallPositionsEqual: function (geomIndex, loc) {\n\t\treturn this.elt[geomIndex].allPositionsEqual(loc);\n\t},\n\ttoLine: function (geomIndex) {\n\t\tif (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Label;\n\t}\n});\nLabel.toLineLabel = function (label) {\n\tvar lineLabel = new Label(Location.NONE);\n\tfor (var i = 0; i < 2; i++) {\n\t\tlineLabel.setLocation(i, label.getLocation(i));\n\t}\n\treturn lineLabel;\n};\n","import Location from '../geom/Location';\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nexport default function EdgeRing() {\n\tthis.startDe = null;\n\tthis.maxNodeDegree = -1;\n\tthis.edges = new ArrayList();\n\tthis.pts = new ArrayList();\n\tthis.label = new Label(Location.NONE);\n\tthis.ring = null;\n\tthis._isHole = null;\n\tthis.shell = null;\n\tthis.holes = new ArrayList();\n\tthis.geometryFactory = null;\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tthis.geometryFactory = geometryFactory;\n\tthis.computePoints(start);\n\tthis.computeRing();\n}\nextend(EdgeRing.prototype, {\n\tcomputeRing: function () {\n\t\tif (this.ring !== null) return null;\n\t\tvar coord = new Array(this.pts.size()).fill(null);\n\t\tfor (var i = 0; i < this.pts.size(); i++) {\n\t\t\tcoord[i] = this.pts.get(i);\n\t\t}\n\t\tthis.ring = this.geometryFactory.createLinearRing(coord);\n\t\tthis._isHole = CGAlgorithms.isCCW(this.ring.getCoordinates());\n\t},\n\tisIsolated: function () {\n\t\treturn this.label.getGeometryCount() === 1;\n\t},\n\tcomputePoints: function (start) {\n\t\tthis.startDe = start;\n\t\tvar de = start;\n\t\tvar isFirstEdge = true;\n\t\tdo {\n\t\t\tif (de === null) throw new TopologyException(\"Found null DirectedEdge\");\n\t\t\tif (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\n\t\t\tthis.edges.add(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tAssert.isTrue(label.isArea());\n\t\t\tthis.mergeLabel(label);\n\t\t\tthis.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n\t\t\tisFirstEdge = false;\n\t\t\tthis.setEdgeRing(de, this);\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this.startDe);\n\t},\n\tgetLinearRing: function () {\n\t\treturn this.ring;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this.pts.get(i);\n\t},\n\tcomputeMaxNodeDegree: function () {\n\t\tthis.maxNodeDegree = 0;\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tvar degree = node.getEdges().getOutgoingDegree(this);\n\t\t\tif (degree > this.maxNodeDegree) this.maxNodeDegree = degree;\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this.startDe);\n\t\tthis.maxNodeDegree *= 2;\n\t},\n\taddPoints: function (edge, isForward, isFirstEdge) {\n\t\tvar edgePts = edge.getCoordinates();\n\t\tif (isForward) {\n\t\t\tvar startIndex = 1;\n\t\t\tif (isFirstEdge) startIndex = 0;\n\t\t\tfor (var i = startIndex; i < edgePts.length; i++) {\n\t\t\t\tthis.pts.add(edgePts[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tvar startIndex = edgePts.length - 2;\n\t\t\tif (isFirstEdge) startIndex = edgePts.length - 1;\n\t\t\tfor (var i = startIndex; i >= 0; i--) {\n\t\t\t\tthis.pts.add(edgePts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisHole: function () {\n\t\treturn this._isHole;\n\t},\n\tsetInResult: function () {\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tde.getEdge().setInResult(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this.startDe);\n\t},\n\tcontainsPoint: function (p) {\n\t\tvar shell = this.getLinearRing();\n\t\tvar env = shell.getEnvelopeInternal();\n\t\tif (!env.contains(p)) return false;\n\t\tif (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) return false;\n\t\tfor (var i = this.holes.iterator(); i.hasNext(); ) {\n\t\t\tvar hole = i.next();\n\t\t\tif (hole.containsPoint(p)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\taddHole: function (ring) {\n\t\tthis.holes.add(ring);\n\t},\n\tisShell: function () {\n\t\treturn this.shell === null;\n\t},\n\tgetLabel: function () {\n\t\treturn this.label;\n\t},\n\tgetEdges: function () {\n\t\treturn this.edges;\n\t},\n\tgetMaxNodeDegree: function () {\n\t\tif (this.maxNodeDegree < 0) this.computeMaxNodeDegree();\n\t\treturn this.maxNodeDegree;\n\t},\n\tgetShell: function () {\n\t\treturn this.shell;\n\t},\n\tmergeLabel: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet deLabel = arguments[0];\n\t\t\tthis.mergeLabel(deLabel, 0);\n\t\t\tthis.mergeLabel(deLabel, 1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deLabel = arguments[0], geomIndex = arguments[1];\n\t\t\tvar loc = deLabel.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (loc === Location.NONE) return null;\n\t\t\tif (this.label.getLocation(geomIndex) === Location.NONE) {\n\t\t\t\tthis.label.setLocation(geomIndex, loc);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function (shell) {\n\t\tthis.shell = shell;\n\t\tif (shell !== null) shell.addHole(this);\n\t},\n\ttoPolygon: function (geometryFactory) {\n\t\tvar holeLR = new Array(this.holes.size()).fill(null);\n\t\tfor (var i = 0; i < this.holes.size(); i++) {\n\t\t\tholeLR[i] = this.holes.get(i).getLinearRing();\n\t\t}\n\t\tvar poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n\t\treturn poly;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeRing;\n\t}\n});\n","import extend from '../../../../../extend';\nimport EdgeRing from '../../geomgraph/EdgeRing';\nimport inherits from '../../../../../inherits';\nexport default function MinimalEdgeRing() {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MinimalEdgeRing, EdgeRing);\nextend(MinimalEdgeRing.prototype, {\n\tsetEdgeRing: function (de, er) {\n\t\tde.setMinEdgeRing(er);\n\t},\n\tgetNext: function (de) {\n\t\treturn de.getNextMin();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimalEdgeRing;\n\t}\n});\n","import MinimalEdgeRing from './MinimalEdgeRing';\nimport extend from '../../../../../extend';\nimport EdgeRing from '../../geomgraph/EdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport inherits from '../../../../../inherits';\nexport default function MaximalEdgeRing() {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MaximalEdgeRing, EdgeRing);\nextend(MaximalEdgeRing.prototype, {\n\tbuildMinimalRings: function () {\n\t\tvar minEdgeRings = new ArrayList();\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tif (de.getMinEdgeRing() === null) {\n\t\t\t\tvar minEr = new MinimalEdgeRing(de, this.geometryFactory);\n\t\t\t\tminEdgeRings.add(minEr);\n\t\t\t}\n\t\t\tde = de.getNext();\n\t\t} while (de !== this.startDe);\n\t\treturn minEdgeRings;\n\t},\n\tsetEdgeRing: function (de, er) {\n\t\tde.setEdgeRing(er);\n\t},\n\tlinkDirectedEdgesForMinimalEdgeRings: function () {\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tnode.getEdges().linkMinimalDirectedEdges(this);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this.startDe);\n\t},\n\tgetNext: function (de) {\n\t\treturn de.getNext();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MaximalEdgeRing;\n\t}\n});\n","import extend from '../../../../extend';\nimport Assert from '../util/Assert';\nexport default function GraphComponent() {\n\tthis.label = null;\n\tthis._isInResult = false;\n\tthis._isCovered = false;\n\tthis._isCoveredSet = false;\n\tthis._isVisited = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet label = arguments[0];\n\t\tthis.label = label;\n\t}\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tsetInResult: function (isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tisCovered: function () {\n\t\treturn this._isCovered;\n\t},\n\tisCoveredSet: function () {\n\t\treturn this._isCoveredSet;\n\t},\n\tsetLabel: function (label) {\n\t\tthis.label = label;\n\t},\n\tgetLabel: function () {\n\t\treturn this.label;\n\t},\n\tsetCovered: function (isCovered) {\n\t\tthis._isCovered = isCovered;\n\t\tthis._isCoveredSet = true;\n\t},\n\tupdateIM: function (im) {\n\t\tAssert.isTrue(this.label.getGeometryCount() >= 2, \"found partial label\");\n\t\tthis.computeIM(im);\n\t},\n\tisInResult: function () {\n\t\treturn this._isInResult;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GraphComponent;\n\t}\n});\n","import Location from '../geom/Location';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Node() {\n\tGraphComponent.apply(this);\n\tthis.coord = null;\n\tthis.edges = null;\n\tlet coord = arguments[0], edges = arguments[1];\n\tthis.coord = coord;\n\tthis.edges = edges;\n\tthis.label = new Label(0, Location.NONE);\n}\ninherits(Node, GraphComponent);\nextend(Node.prototype, {\n\tisIncidentEdgeInResult: function () {\n\t\tfor (var it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getEdge().isInResult()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisIsolated: function () {\n\t\treturn this.label.getGeometryCount() === 1;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.coord;\n\t},\n\tprint: function (out) {\n\t\tout.println(\"node \" + this.coord + \" lbl: \" + this.label);\n\t},\n\tcomputeIM: function (im) {},\n\tcomputeMergedLocation: function (label2, eltIndex) {\n\t\tvar loc = Location.NONE;\n\t\tloc = this.label.getLocation(eltIndex);\n\t\tif (!label2.isNull(eltIndex)) {\n\t\t\tvar nLoc = label2.getLocation(eltIndex);\n\t\t\tif (loc !== Location.BOUNDARY) loc = nLoc;\n\t\t}\n\t\treturn loc;\n\t},\n\tsetLabel: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet argIndex = arguments[0], onLocation = arguments[1];\n\t\t\tif (this.label === null) {\n\t\t\t\tthis.label = new Label(argIndex, onLocation);\n\t\t\t} else this.label.setLocation(argIndex, onLocation);\n\t\t} else return GraphComponent.prototype.setLabel.apply(this, arguments);\n\t},\n\tgetEdges: function () {\n\t\treturn this.edges;\n\t},\n\tmergeLabel: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tthis.mergeLabel(n.label);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet label2 = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar loc = this.computeMergedLocation(label2, i);\n\t\t\t\tvar thisLoc = this.label.getLocation(i);\n\t\t\t\tif (thisLoc === Location.NONE) this.label.setLocation(i, loc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function (e) {\n\t\tthis.edges.insert(e);\n\t\te.setNode(this);\n\t},\n\tsetLabelBoundary: function (argIndex) {\n\t\tif (this.label === null) return null;\n\t\tvar loc = Location.NONE;\n\t\tif (this.label !== null) loc = this.label.getLocation(argIndex);\n\t\tvar newLoc = null;\n\t\tswitch (loc) {\n\t\t\tcase Location.BOUNDARY:\n\t\t\t\tnewLoc = Location.INTERIOR;\n\t\t\t\tbreak;\n\t\t\tcase Location.INTERIOR:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.label.setLocation(argIndex, newLoc);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\n","import Location from '../geom/Location';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function NodeMap() {\n\tthis.nodeMap = new TreeMap();\n\tthis.nodeFact = null;\n\tlet nodeFact = arguments[0];\n\tthis.nodeFact = nodeFact;\n}\nextend(NodeMap.prototype, {\n\tfind: function (coord) {\n\t\treturn this.nodeMap.get(coord);\n\t},\n\taddNode: function () {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tvar node = this.nodeMap.get(coord);\n\t\t\tif (node === null) {\n\t\t\t\tnode = this.nodeFact.createNode(coord);\n\t\t\t\tthis.nodeMap.put(coord, node);\n\t\t\t}\n\t\t\treturn node;\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tvar node = this.nodeMap.get(n.getCoordinate());\n\t\t\tif (node === null) {\n\t\t\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tnode.mergeLabel(n);\n\t\t\treturn node;\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar n = it.next();\n\t\t\tn.print(out);\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\tvalues: function () {\n\t\treturn this.nodeMap.values();\n\t},\n\tgetBoundaryNodes: function (geomIndex) {\n\t\tvar bdyNodes = new ArrayList();\n\t\tfor (var i = this.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\n\t\t}\n\t\treturn bdyNodes;\n\t},\n\tadd: function (e) {\n\t\tvar p = e.getCoordinate();\n\t\tvar n = this.addNode(p);\n\t\tn.add(e);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeMap;\n\t}\n});\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nexport default function EdgeEnd() {\n\tthis.edge = null;\n\tthis.label = null;\n\tthis.node = null;\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.dx = null;\n\tthis.dy = null;\n\tthis.quadrant = null;\n\tif (arguments.length === 1) {\n\t\tlet edge = arguments[0];\n\t\tthis.edge = edge;\n\t} else if (arguments.length === 3) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\tEdgeEnd.call(this, edge, p0, p1, null);\n\t} else if (arguments.length === 4) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3];\n\t\tEdgeEnd.call(this, edge);\n\t\tthis.init(p0, p1);\n\t\tthis.label = label;\n\t}\n}\nextend(EdgeEnd.prototype, {\n\tcompareDirection: function (e) {\n\t\tif (this.dx === e.dx && this.dy === e.dy) return 0;\n\t\tif (this.quadrant > e.quadrant) return 1;\n\t\tif (this.quadrant < e.quadrant) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e.p0, e.p1, this.p1);\n\t},\n\tgetDy: function () {\n\t\treturn this.dy;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.p0;\n\t},\n\tsetNode: function (node) {\n\t\tthis.node = node;\n\t},\n\tprint: function (out) {\n\t\tvar angle = Math.atan2(this.dy, this.dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + angle + \"   \" + this.label);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar e = obj;\n\t\treturn this.compareDirection(e);\n\t},\n\tgetDirectedCoordinate: function () {\n\t\treturn this.p1;\n\t},\n\tgetDx: function () {\n\t\treturn this.dx;\n\t},\n\tgetLabel: function () {\n\t\treturn this.label;\n\t},\n\tgetEdge: function () {\n\t\treturn this.edge;\n\t},\n\tgetQuadrant: function () {\n\t\treturn this.quadrant;\n\t},\n\tgetNode: function () {\n\t\treturn this.node;\n\t},\n\ttoString: function () {\n\t\tvar angle = Math.atan2(this.dy, this.dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\treturn \"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + angle + \"   \" + this.label;\n\t},\n\tcomputeLabel: function (boundaryNodeRule) {},\n\tinit: function (p0, p1) {\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t\tthis.dx = p1.x - p0.x;\n\t\tthis.dy = p1.y - p0.y;\n\t\tthis.quadrant = Quadrant.quadrant(this.dx, this.dy);\n\t\tAssert.isTrue(!(this.dx === 0 && this.dy === 0), \"EdgeEnd with identical endpoints found\");\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEnd;\n\t}\n});\n","import Location from '../geom/Location';\nimport EdgeEnd from './EdgeEnd';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport inherits from '../../../../inherits';\nexport default function DirectedEdge() {\n\tthis._isForward = null;\n\tthis._isInResult = false;\n\tthis._isVisited = false;\n\tthis.sym = null;\n\tthis.next = null;\n\tthis.nextMin = null;\n\tthis.edgeRing = null;\n\tthis.minEdgeRing = null;\n\tthis.depth = [0, -999, -999];\n\tlet edge = arguments[0], isForward = arguments[1];\n\tEdgeEnd.call(this, edge);\n\tthis._isForward = isForward;\n\tif (isForward) {\n\t\tthis.init(edge.getCoordinate(0), edge.getCoordinate(1));\n\t} else {\n\t\tvar n = edge.getNumPoints() - 1;\n\t\tthis.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n\t}\n\tthis.computeDirectedLabel();\n}\ninherits(DirectedEdge, EdgeEnd);\nextend(DirectedEdge.prototype, {\n\tgetNextMin: function () {\n\t\treturn this.nextMin;\n\t},\n\tgetDepth: function (position) {\n\t\treturn this.depth[position];\n\t},\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tcomputeDirectedLabel: function () {\n\t\tthis.label = new Label(this.edge.getLabel());\n\t\tif (!this._isForward) this.label.flip();\n\t},\n\tgetNext: function () {\n\t\treturn this.next;\n\t},\n\tsetDepth: function (position, depthVal) {\n\t\tif (this.depth[position] !== -999) {\n\t\t\tif (this.depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\n\t\t}\n\t\tthis.depth[position] = depthVal;\n\t},\n\tisInteriorAreaEdge: function () {\n\t\tvar isInteriorAreaEdge = true;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!(this.label.isArea(i) && this.label.getLocation(i, Position.LEFT) === Location.INTERIOR && this.label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n\t\t\t\tisInteriorAreaEdge = false;\n\t\t\t}\n\t\t}\n\t\treturn isInteriorAreaEdge;\n\t},\n\tsetNextMin: function (nextMin) {\n\t\tthis.nextMin = nextMin;\n\t},\n\tprint: function (out) {\n\t\tEdgeEnd.prototype.print.call(this, out);\n\t\tout.print(\" \" + this.depth[Position.LEFT] + \"/\" + this.depth[Position.RIGHT]);\n\t\tout.print(\" (\" + this.getDepthDelta() + \")\");\n\t\tif (this._isInResult) out.print(\" inResult\");\n\t},\n\tsetMinEdgeRing: function (minEdgeRing) {\n\t\tthis.minEdgeRing = minEdgeRing;\n\t},\n\tisLineEdge: function () {\n\t\tvar isLine = this.label.isLine(0) || this.label.isLine(1);\n\t\tvar isExteriorIfArea0 = !this.label.isArea(0) || this.label.allPositionsEqual(0, Location.EXTERIOR);\n\t\tvar isExteriorIfArea1 = !this.label.isArea(1) || this.label.allPositionsEqual(1, Location.EXTERIOR);\n\t\treturn isLine && isExteriorIfArea0 && isExteriorIfArea1;\n\t},\n\tsetEdgeRing: function (edgeRing) {\n\t\tthis.edgeRing = edgeRing;\n\t},\n\tgetMinEdgeRing: function () {\n\t\treturn this.minEdgeRing;\n\t},\n\tgetDepthDelta: function () {\n\t\tvar depthDelta = this.edge.getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\treturn depthDelta;\n\t},\n\tsetInResult: function (isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tgetSym: function () {\n\t\treturn this.sym;\n\t},\n\tisForward: function () {\n\t\treturn this._isForward;\n\t},\n\tgetEdge: function () {\n\t\treturn this.edge;\n\t},\n\tprintEdge: function (out) {\n\t\tthis.print(out);\n\t\tout.print(\" \");\n\t\tif (this._isForward) this.edge.print(out); else this.edge.printReverse(out);\n\t},\n\tsetSym: function (de) {\n\t\tthis.sym = de;\n\t},\n\tsetVisitedEdge: function (isVisited) {\n\t\tthis.setVisited(isVisited);\n\t\tthis.sym.setVisited(isVisited);\n\t},\n\tsetEdgeDepths: function (position, depth) {\n\t\tvar depthDelta = this.getEdge().getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\tvar directionFactor = 1;\n\t\tif (position === Position.LEFT) directionFactor = -1;\n\t\tvar oppositePos = Position.opposite(position);\n\t\tvar delta = depthDelta * directionFactor;\n\t\tvar oppositeDepth = depth + delta;\n\t\tthis.setDepth(position, depth);\n\t\tthis.setDepth(oppositePos, oppositeDepth);\n\t},\n\tgetEdgeRing: function () {\n\t\treturn this.edgeRing;\n\t},\n\tisInResult: function () {\n\t\treturn this._isInResult;\n\t},\n\tsetNext: function (next) {\n\t\tthis.next = next;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.depthFactor = function (currLocation, nextLocation) {\n\tif (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\n\treturn 0;\n};\n","import Node from './Node';\nimport extend from '../../../../extend';\nexport default function NodeFactory() {}\nextend(NodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new Node(coord, null);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeFactory;\n\t}\n});\n","import Location from '../geom/Location';\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport NodeMap from './NodeMap';\nimport DirectedEdge from './DirectedEdge';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport NodeFactory from './NodeFactory';\nexport default function PlanarGraph() {\n\tthis.edges = new ArrayList();\n\tthis.nodes = null;\n\tthis.edgeEndList = new ArrayList();\n\tif (arguments.length === 0) {\n\t\tthis.nodes = new NodeMap(new NodeFactory());\n\t} else if (arguments.length === 1) {\n\t\tlet nodeFact = arguments[0];\n\t\tthis.nodes = new NodeMap(nodeFact);\n\t}\n}\nextend(PlanarGraph.prototype, {\n\tprintEdges: function (out) {\n\t\tout.println(\"Edges:\");\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tout.println(\"edge \" + i + \":\");\n\t\t\tvar e = this.edges.get(i);\n\t\t\te.print(out);\n\t\t\te.eiList.print(out);\n\t\t}\n\t},\n\tfind: function (coord) {\n\t\treturn this.nodes.find(coord);\n\t},\n\taddNode: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\treturn this.nodes.addNode(node);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\treturn this.nodes.addNode(coord);\n\t\t}\n\t},\n\tgetNodeIterator: function () {\n\t\treturn this.nodes.iterator();\n\t},\n\tlinkResultDirectedEdges: function () {\n\t\tfor (var nodeit = this.nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkResultDirectedEdges();\n\t\t}\n\t},\n\tdebugPrintln: function (o) {\n\t\tSystem.out.println(o);\n\t},\n\tisBoundaryNode: function (geomIndex, coord) {\n\t\tvar node = this.nodes.find(coord);\n\t\tif (node === null) return false;\n\t\tvar label = node.getLabel();\n\t\tif (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\n\t\treturn false;\n\t},\n\tlinkAllDirectedEdges: function () {\n\t\tfor (var nodeit = this.nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkAllDirectedEdges();\n\t\t}\n\t},\n\tmatchInSameDirection: function (p0, p1, ep0, ep1) {\n\t\tif (!p0.equals(ep0)) return false;\n\t\tif (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\n\t\treturn false;\n\t},\n\tgetEdgeEnds: function () {\n\t\treturn this.edgeEndList;\n\t},\n\tdebugPrint: function (o) {\n\t\tSystem.out.print(o);\n\t},\n\tgetEdgeIterator: function () {\n\t\treturn this.edges.iterator();\n\t},\n\tfindEdgeInSameDirection: function (p0, p1) {\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tvar e = this.edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinsertEdge: function (e) {\n\t\tthis.edges.add(e);\n\t},\n\tfindEdgeEnd: function (e) {\n\t\tfor (var i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\n\t\t\tvar ee = i.next();\n\t\t\tif (ee.getEdge() === e) return ee;\n\t\t}\n\t\treturn null;\n\t},\n\taddEdges: function (edgesToAdd) {\n\t\tfor (var it = edgesToAdd.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tthis.edges.add(e);\n\t\t\tvar de1 = new DirectedEdge(e, true);\n\t\t\tvar de2 = new DirectedEdge(e, false);\n\t\t\tde1.setSym(de2);\n\t\t\tde2.setSym(de1);\n\t\t\tthis.add(de1);\n\t\t\tthis.add(de2);\n\t\t}\n\t},\n\tadd: function (e) {\n\t\tthis.nodes.add(e);\n\t\tthis.edgeEndList.add(e);\n\t},\n\tgetNodes: function () {\n\t\treturn this.nodes.values();\n\t},\n\tfindEdge: function (p0, p1) {\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tvar e = this.edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PlanarGraph;\n\t}\n});\nPlanarGraph.linkResultDirectedEdges = function (nodes) {\n\tfor (var nodeit = nodes.iterator(); nodeit.hasNext(); ) {\n\t\tvar node = nodeit.next();\n\t\tnode.getEdges().linkResultDirectedEdges();\n\t}\n};\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport MaximalEdgeRing from './MaximalEdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function PolygonBuilder() {\n\tthis.geometryFactory = null;\n\tthis.shellList = new ArrayList();\n\tlet geometryFactory = arguments[0];\n\tthis.geometryFactory = geometryFactory;\n}\nextend(PolygonBuilder.prototype, {\n\tsortShellsAndHoles: function (edgeRings, shellList, freeHoleList) {\n\t\tfor (var it = edgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\tfreeHoleList.add(er);\n\t\t\t} else {\n\t\t\t\tshellList.add(er);\n\t\t\t}\n\t\t}\n\t},\n\tcomputePolygons: function (shellList) {\n\t\tvar resultPolyList = new ArrayList();\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tvar poly = er.toPolygon(this.geometryFactory);\n\t\t\tresultPolyList.add(poly);\n\t\t}\n\t\treturn resultPolyList;\n\t},\n\tplaceFreeHoles: function (shellList, freeHoleList) {\n\t\tfor (var it = freeHoleList.iterator(); it.hasNext(); ) {\n\t\t\tvar hole = it.next();\n\t\t\tif (hole.getShell() === null) {\n\t\t\t\tvar shell = this.findEdgeRingContaining(hole, shellList);\n\t\t\t\tif (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\n\t\t\t\thole.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tbuildMinimalEdgeRings: function (maxEdgeRings, shellList, freeHoleList) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = maxEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.getMaxNodeDegree() > 2) {\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tvar shell = this.findShell(minEdgeRings);\n\t\t\t\tif (shell !== null) {\n\t\t\t\t\tthis.placePolygonHoles(shell, minEdgeRings);\n\t\t\t\t\tshellList.add(shell);\n\t\t\t\t} else {\n\t\t\t\t\tfreeHoleList.addAll(minEdgeRings);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tedgeRings.add(er);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\tcontainsPoint: function (p) {\n\t\tfor (var it = this.shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.containsPoint(p)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tbuildMaximalEdgeRings: function (dirEdges) {\n\t\tvar maxEdgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getLabel().isArea()) {\n\t\t\t\tif (de.getEdgeRing() === null) {\n\t\t\t\t\tvar er = new MaximalEdgeRing(de, this.geometryFactory);\n\t\t\t\t\tmaxEdgeRings.add(er);\n\t\t\t\t\ter.setInResult();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn maxEdgeRings;\n\t},\n\tplacePolygonHoles: function (shell, minEdgeRings) {\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\ter.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tgetPolygons: function () {\n\t\tvar resultPolyList = this.computePolygons(this.shellList);\n\t\treturn resultPolyList;\n\t},\n\tfindEdgeRingContaining: function (testEr, shellList) {\n\t\tvar testRing = testEr.getLinearRing();\n\t\tvar testEnv = testRing.getEnvelopeInternal();\n\t\tvar testPt = testRing.getCoordinateN(0);\n\t\tvar minShell = null;\n\t\tvar minEnv = null;\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar tryShell = it.next();\n\t\t\tvar tryRing = tryShell.getLinearRing();\n\t\t\tvar tryEnv = tryRing.getEnvelopeInternal();\n\t\t\tif (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\n\t\t\tvar isContained = false;\n\t\t\tif (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) isContained = true;\n\t\t\tif (isContained) {\n\t\t\t\tif (minShell === null || minEnv.contains(tryEnv)) {\n\t\t\t\t\tminShell = tryShell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn minShell;\n\t},\n\tfindShell: function (minEdgeRings) {\n\t\tvar shellCount = 0;\n\t\tvar shell = null;\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (!er.isHole()) {\n\t\t\t\tshell = er;\n\t\t\t\tshellCount++;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\n\t\treturn shell;\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet graph = arguments[0];\n\t\t\tthis.add(graph.getEdgeEnds(), graph.getNodes());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet dirEdges = arguments[0], nodes = arguments[1];\n\t\t\tPlanarGraph.linkResultDirectedEdges(nodes);\n\t\t\tvar maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n\t\t\tvar freeHoleList = new ArrayList();\n\t\t\tvar edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this.shellList, freeHoleList);\n\t\t\tthis.sortShellsAndHoles(edgeRings, this.shellList, freeHoleList);\n\t\t\tthis.placeFreeHoles(this.shellList, freeHoleList);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonBuilder;\n\t}\n});\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport OverlayOp from './OverlayOp';\nexport default function LineBuilder() {\n\tthis.op = null;\n\tthis.geometryFactory = null;\n\tthis.ptLocator = null;\n\tthis.lineEdgesList = new ArrayList();\n\tthis.resultLineList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis.op = op;\n\tthis.geometryFactory = geometryFactory;\n\tthis.ptLocator = ptLocator;\n}\nextend(LineBuilder.prototype, {\n\tcollectLines: function (opCode) {\n\t\tfor (var it = this.op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tthis.collectLineEdge(de, opCode, this.lineEdgesList);\n\t\t\tthis.collectBoundaryTouchEdge(de, opCode, this.lineEdgesList);\n\t\t}\n\t},\n\tlabelIsolatedLine: function (e, targetIndex) {\n\t\tvar loc = this.ptLocator.locate(e.getCoordinate(), this.op.getArgGeometry(targetIndex));\n\t\te.getLabel().setLocation(targetIndex, loc);\n\t},\n\tbuild: function (opCode) {\n\t\tthis.findCoveredLineEdges();\n\t\tthis.collectLines(opCode);\n\t\tthis.buildLines(opCode);\n\t\treturn this.resultLineList;\n\t},\n\tcollectLineEdge: function (de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tvar e = de.getEdge();\n\t\tif (de.isLineEdge()) {\n\t\t\tif (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n\t\t\t\tedges.add(e);\n\t\t\t\tde.setVisitedEdge(true);\n\t\t\t}\n\t\t}\n\t},\n\tfindCoveredLineEdges: function () {\n\t\tfor (var nodeit = this.op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().findCoveredLineEdges();\n\t\t}\n\t\tfor (var it = this.op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar e = de.getEdge();\n\t\t\tif (de.isLineEdge() && !e.isCoveredSet()) {\n\t\t\t\tvar isCovered = this.op.isCoveredByA(de.getCoordinate());\n\t\t\t\te.setCovered(isCovered);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedLines: function (edgesList) {\n\t\tfor (var it = edgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1);\n\t\t\t}\n\t\t}\n\t},\n\tbuildLines: function (opCode) {\n\t\tfor (var it = this.lineEdgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tvar line = this.geometryFactory.createLineString(e.getCoordinates());\n\t\t\tthis.resultLineList.add(line);\n\t\t\te.setInResult(true);\n\t\t}\n\t},\n\tcollectBoundaryTouchEdge: function (de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tif (de.isLineEdge()) return null;\n\t\tif (de.isVisited()) return null;\n\t\tif (de.isInteriorAreaEdge()) return null;\n\t\tif (de.getEdge().isInResult()) return null;\n\t\tAssert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n\t\tif (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n\t\t\tedges.add(de.getEdge());\n\t\t\tde.setVisitedEdge(true);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineBuilder;\n\t}\n});\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport OverlayOp from './OverlayOp';\nexport default function PointBuilder() {\n\tthis.op = null;\n\tthis.geometryFactory = null;\n\tthis.resultPointList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis.op = op;\n\tthis.geometryFactory = geometryFactory;\n}\nextend(PointBuilder.prototype, {\n\tfilterCoveredNodeToPoint: function (n) {\n\t\tvar coord = n.getCoordinate();\n\t\tif (!this.op.isCoveredByLA(coord)) {\n\t\t\tvar pt = this.geometryFactory.createPoint(coord);\n\t\t\tthis.resultPointList.add(pt);\n\t\t}\n\t},\n\textractNonCoveredResultNodes: function (opCode) {\n\t\tfor (var nodeit = this.op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar n = nodeit.next();\n\t\t\tif (n.isInResult()) continue;\n\t\t\tif (n.isIncidentEdgeInResult()) continue;\n\t\t\tif (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n\t\t\t\tvar label = n.getLabel();\n\t\t\t\tif (OverlayOp.isResultOfOp(label, opCode)) {\n\t\t\t\t\tthis.filterCoveredNodeToPoint(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function (opCode) {\n\t\tthis.extractNonCoveredResultNodes(opCode);\n\t\treturn this.resultPointList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointBuilder;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function PointOnGeometryLocator() {}\nextend(PointOnGeometryLocator.prototype, {\n\tlocate: function (p) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointOnGeometryLocator;\n\t}\n});\n","import Location from '../../geom/Location';\nimport CGAlgorithms from '../CGAlgorithms';\nimport Polygon from '../../geom/Polygon';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport extend from '../../../../../extend';\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../../geom/GeometryCollection';\nexport default function SimplePointInAreaLocator() {\n\tthis.geom = null;\n\tlet geom = arguments[0];\n\tthis.geom = geom;\n}\nextend(SimplePointInAreaLocator.prototype, {\n\tlocate: function (p) {\n\t\treturn SimplePointInAreaLocator.locate(p, this.geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function () {\n\t\treturn SimplePointInAreaLocator;\n\t}\n});\nSimplePointInAreaLocator.isPointInRing = function (p, ring) {\n\tif (!ring.getEnvelopeInternal().intersects(p)) return false;\n\treturn CGAlgorithms.isPointInRing(p, ring.getCoordinates());\n};\nSimplePointInAreaLocator.containsPointInPolygon = function (p, poly) {\n\tif (poly.isEmpty()) return false;\n\tvar shell = poly.getExteriorRing();\n\tif (!SimplePointInAreaLocator.isPointInRing(p, shell)) return false;\n\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\tvar hole = poly.getInteriorRingN(i);\n\t\tif (SimplePointInAreaLocator.isPointInRing(p, hole)) return false;\n\t}\n\treturn true;\n};\nSimplePointInAreaLocator.containsPoint = function (p, geom) {\n\tif (geom instanceof Polygon) {\n\t\treturn SimplePointInAreaLocator.containsPointInPolygon(p, geom);\n\t} else if (geom instanceof GeometryCollection) {\n\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\twhile (geomi.hasNext()) {\n\t\t\tvar g2 = geomi.next();\n\t\t\tif (g2 !== geom) if (SimplePointInAreaLocator.containsPoint(p, g2)) return true;\n\t\t}\n\t}\n\treturn false;\n};\nSimplePointInAreaLocator.locate = function (p, geom) {\n\tif (geom.isEmpty()) return Location.EXTERIOR;\n\tif (SimplePointInAreaLocator.containsPoint(p, geom)) return Location.INTERIOR;\n\treturn Location.EXTERIOR;\n};\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeEndStar() {\n\tthis.edgeMap = new TreeMap();\n\tthis.edgeList = null;\n\tthis.ptInAreaLocation = [Location.NONE, Location.NONE];\n}\nextend(EdgeEndStar.prototype, {\n\tgetNextCW: function (ee) {\n\t\tthis.getEdges();\n\t\tvar i = this.edgeList.indexOf(ee);\n\t\tvar iNextCW = i - 1;\n\t\tif (i === 0) iNextCW = this.edgeList.size() - 1;\n\t\treturn this.edgeList.get(iNextCW);\n\t},\n\tpropagateSideLabels: function (geomIndex) {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\n\t\t\tif (label.isArea(geomIndex)) {\n\t\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\t\tif (rightLoc !== Location.NONE) {\n\t\t\t\t\tif (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\n\t\t\t\t\tif (leftLoc === Location.NONE) {\n\t\t\t\t\t\tAssert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\n\t\t\t\t\t}\n\t\t\t\t\tcurrLoc = leftLoc;\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.RIGHT, currLoc);\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.LEFT, currLoc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\tprint: function (out) {\n\t\tSystem.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\te.print(out);\n\t\t}\n\t},\n\tisAreaLabelsConsistent: function (geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n\t\treturn this.checkAreaLabelsConsistent(0);\n\t},\n\tcheckAreaLabelsConsistent: function (geomIndex) {\n\t\tvar edges = this.getEdges();\n\t\tif (edges.size() <= 0) return true;\n\t\tvar lastEdgeIndex = edges.size() - 1;\n\t\tvar startLabel = edges.get(lastEdgeIndex).getLabel();\n\t\tvar startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n\t\tAssert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tAssert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\n\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (leftLoc === rightLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rightLoc !== currLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcurrLoc = leftLoc;\n\t\t}\n\t\treturn true;\n\t},\n\tfindIndex: function (eSearch) {\n\t\tthis.iterator();\n\t\tfor (var i = 0; i < this.edgeList.size(); i++) {\n\t\t\tvar e = this.edgeList.get(i);\n\t\t\tif (e === eSearch) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function () {\n\t\treturn this.getEdges().iterator();\n\t},\n\tgetEdges: function () {\n\t\tif (this.edgeList === null) {\n\t\t\tthis.edgeList = new ArrayList(this.edgeMap.values());\n\t\t}\n\t\treturn this.edgeList;\n\t},\n\tgetLocation: function (geomIndex, p, geom) {\n\t\tif (this.ptInAreaLocation[geomIndex] === Location.NONE) {\n\t\t\tthis.ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n\t\t}\n\t\treturn this.ptInAreaLocation[geomIndex];\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tbuf.append(\"\\n\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tbuf.append(e);\n\t\t\tbuf.append(\"\\n\");\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tcomputeEdgeEndLabels: function (boundaryNodeRule) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.computeLabel(boundaryNodeRule);\n\t\t}\n\t},\n\tcomputeLabelling: function (geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n\t\tthis.propagateSideLabels(0);\n\t\tthis.propagateSideLabels(1);\n\t\tvar hasDimensionalCollapseEdge = [false, false];\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\n\t\t\t}\n\t\t}\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isAnyNull(geomi)) {\n\t\t\t\t\tvar loc = Location.NONE;\n\t\t\t\t\tif (hasDimensionalCollapseEdge[geomi]) {\n\t\t\t\t\t\tloc = Location.EXTERIOR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p = e.getCoordinate();\n\t\t\t\t\t\tloc = this.getLocation(geomi, p, geomGraph);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.setAllLocationsIfNull(geomi, loc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDegree: function () {\n\t\treturn this.edgeMap.size();\n\t},\n\tinsertEdgeEnd: function (e, obj) {\n\t\tthis.edgeMap.put(e, obj);\n\t\tthis.edgeList = null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndStar;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport EdgeEndStar from './EdgeEndStar';\nimport System from '../../../../java/lang/System';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function DirectedEdgeStar() {\n\tEdgeEndStar.apply(this);\n\tthis.resultAreaEdgeList = null;\n\tthis.label = null;\n\tthis.SCANNING_FOR_INCOMING = 1;\n\tthis.LINKING_TO_OUTGOING = 2;\n}\ninherits(DirectedEdgeStar, EdgeEndStar);\nextend(DirectedEdgeStar.prototype, {\n\tlinkResultDirectedEdges: function () {\n\t\tthis.getResultAreaEdges();\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this.SCANNING_FOR_INCOMING;\n\t\tfor (var i = 0; i < this.resultAreaEdgeList.size(); i++) {\n\t\t\tvar nextOut = this.resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.getLabel().isArea()) continue;\n\t\t\tif (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this.SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (!nextIn.isInResult()) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this.LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.LINKING_TO_OUTGOING:\n\t\t\t\t\tif (!nextOut.isInResult()) continue;\n\t\t\t\t\tincoming.setNext(nextOut);\n\t\t\t\t\tstate = this.SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this.LINKING_TO_OUTGOING) {\n\t\t\tif (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\n\t\t\tAssert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNext(firstOut);\n\t\t}\n\t},\n\tinsert: function (ee) {\n\t\tvar de = ee;\n\t\tthis.insertEdgeEnd(de, de);\n\t},\n\tgetRightmostEdge: function () {\n\t\tvar edges = this.getEdges();\n\t\tvar size = edges.size();\n\t\tif (size < 1) return null;\n\t\tvar de0 = edges.get(0);\n\t\tif (size === 1) return de0;\n\t\tvar deLast = edges.get(size - 1);\n\t\tvar quad0 = de0.getQuadrant();\n\t\tvar quad1 = deLast.getQuadrant();\n\t\tif (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0; else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast; else {\n\t\t\tvar nonHorizontalEdge = null;\n\t\t\tif (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\n\t\treturn null;\n\t},\n\tprint: function (out) {\n\t\tSystem.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tout.print(\"out \");\n\t\t\tde.print(out);\n\t\t\tout.println();\n\t\t\tout.print(\"in \");\n\t\t\tde.getSym().print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\tgetResultAreaEdges: function () {\n\t\tif (this.resultAreaEdgeList !== null) return this.resultAreaEdgeList;\n\t\tthis.resultAreaEdgeList = new ArrayList();\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() || de.getSym().isInResult()) this.resultAreaEdgeList.add(de);\n\t\t}\n\t\treturn this.resultAreaEdgeList;\n\t},\n\tupdateLabelling: function (nodeLabel) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n\t\t\tlabel.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n\t\t}\n\t},\n\tlinkAllDirectedEdges: function () {\n\t\tthis.getEdges();\n\t\tvar prevOut = null;\n\t\tvar firstIn = null;\n\t\tfor (var i = this.edgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this.edgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstIn === null) firstIn = nextIn;\n\t\t\tif (prevOut !== null) nextIn.setNext(prevOut);\n\t\t\tprevOut = nextOut;\n\t\t}\n\t\tfirstIn.setNext(prevOut);\n\t},\n\tcomputeDepths: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar edgeIndex = this.findIndex(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tvar startDepth = de.getDepth(Position.LEFT);\n\t\t\tvar targetLastDepth = de.getDepth(Position.RIGHT);\n\t\t\tvar nextDepth = this.computeDepths(edgeIndex + 1, this.edgeList.size(), startDepth);\n\t\t\tvar lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n\t\t\tif (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2];\n\t\t\tvar currDepth = startDepth;\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\t\tvar nextDe = this.edgeList.get(i);\n\t\t\t\tvar label = nextDe.getLabel();\n\t\t\t\tnextDe.setEdgeDepths(Position.RIGHT, currDepth);\n\t\t\t\tcurrDepth = nextDe.getDepth(Position.LEFT);\n\t\t\t}\n\t\t\treturn currDepth;\n\t\t}\n\t},\n\tmergeSymLabels: function () {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.merge(de.getSym().getLabel());\n\t\t}\n\t},\n\tlinkMinimalDirectedEdges: function (er) {\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this.SCANNING_FOR_INCOMING;\n\t\tfor (var i = this.resultAreaEdgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this.resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this.SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (nextIn.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this.LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.LINKING_TO_OUTGOING:\n\t\t\t\t\tif (nextOut.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming.setNextMin(nextOut);\n\t\t\t\t\tstate = this.SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this.LINKING_TO_OUTGOING) {\n\t\t\tAssert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\n\t\t\tAssert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNextMin(firstOut);\n\t\t}\n\t},\n\tgetOutgoingDegree: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.isInResult()) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet er = arguments[0];\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.getEdgeRing() === er) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t}\n\t},\n\tgetLabel: function () {\n\t\treturn this.label;\n\t},\n\tfindCoveredLineEdges: function () {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.isLineEdge()) {\n\t\t\t\tif (nextOut.isInResult()) {\n\t\t\t\t\tstartLoc = Location.INTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (nextIn.isInResult()) {\n\t\t\t\t\tstartLoc = Location.EXTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (nextOut.isLineEdge()) {\n\t\t\t\tnextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\n\t\t\t} else {\n\t\t\t\tif (nextOut.isInResult()) currLoc = Location.EXTERIOR;\n\t\t\t\tif (nextIn.isInResult()) currLoc = Location.INTERIOR;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function (geom) {\n\t\tEdgeEndStar.prototype.computeLabelling.call(this, geom);\n\t\tthis.label = new Label(Location.NONE);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tvar e = ee.getEdge();\n\t\t\tvar eLabel = e.getLabel();\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar eLoc = eLabel.getLocation(i);\n\t\t\t\tif (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this.label.setLocation(i, Location.INTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar';\nimport Node from '../../geomgraph/Node';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default function OverlayNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(OverlayNodeFactory, NodeFactory);\nextend(OverlayNodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new Node(coord, new DirectedEdgeStar());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OverlayNodeFactory;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function MonotoneChain() {\n\tthis.mce = null;\n\tthis.chainIndex = null;\n\tlet mce = arguments[0], chainIndex = arguments[1];\n\tthis.mce = mce;\n\tthis.chainIndex = chainIndex;\n}\nextend(MonotoneChain.prototype, {\n\tcomputeIntersections: function (mc, si) {\n\t\tthis.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChain;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Comparable from '../../../../../java/lang/Comparable';\nexport default function SweepLineEvent() {\n\tthis.label = null;\n\tthis.xValue = null;\n\tthis.eventType = null;\n\tthis.insertEvent = null;\n\tthis.deleteEventIndex = null;\n\tthis.obj = null;\n\tif (arguments.length === 2) {\n\t\tlet x = arguments[0], insertEvent = arguments[1];\n\t\tthis.eventType = SweepLineEvent.DELETE;\n\t\tthis.xValue = x;\n\t\tthis.insertEvent = insertEvent;\n\t} else if (arguments.length === 3) {\n\t\tlet label = arguments[0], x = arguments[1], obj = arguments[2];\n\t\tthis.eventType = SweepLineEvent.INSERT;\n\t\tthis.label = label;\n\t\tthis.xValue = x;\n\t\tthis.obj = obj;\n\t}\n}\nextend(SweepLineEvent.prototype, {\n\tisDelete: function () {\n\t\treturn this.eventType === SweepLineEvent.DELETE;\n\t},\n\tsetDeleteEventIndex: function (deleteEventIndex) {\n\t\tthis.deleteEventIndex = deleteEventIndex;\n\t},\n\tgetObject: function () {\n\t\treturn this.obj;\n\t},\n\tcompareTo: function (o) {\n\t\tvar pe = o;\n\t\tif (this.xValue < pe.xValue) return -1;\n\t\tif (this.xValue > pe.xValue) return 1;\n\t\tif (this.eventType < pe.eventType) return -1;\n\t\tif (this.eventType > pe.eventType) return 1;\n\t\treturn 0;\n\t},\n\tgetInsertEvent: function () {\n\t\treturn this.insertEvent;\n\t},\n\tisInsert: function () {\n\t\treturn this.eventType === SweepLineEvent.INSERT;\n\t},\n\tisSameLabel: function (ev) {\n\t\tif (this.label === null) return false;\n\t\treturn this.label === ev.label;\n\t},\n\tgetDeleteEventIndex: function () {\n\t\treturn this.deleteEventIndex;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn SweepLineEvent;\n\t}\n});\nSweepLineEvent.INSERT = 1;\nSweepLineEvent.DELETE = 2;\n","import extend from '../../../../../extend';\nexport default function EdgeSetIntersector() {}\nextend(EdgeSetIntersector.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeSetIntersector;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function SegmentIntersector() {\n\tthis._hasIntersection = false;\n\tthis.hasProper = false;\n\tthis.hasProperInterior = false;\n\tthis.properIntersectionPoint = null;\n\tthis.li = null;\n\tthis.includeProper = null;\n\tthis.recordIsolated = null;\n\tthis.isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numTests = 0;\n\tthis.bdyNodes = null;\n\tthis._isDone = false;\n\tthis.isDoneWhenProperInt = false;\n\tlet li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2];\n\tthis.li = li;\n\tthis.includeProper = includeProper;\n\tthis.recordIsolated = recordIsolated;\n}\nextend(SegmentIntersector.prototype, {\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this.li.getIntersectionNum() === 1) {\n\t\t\t\tif (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.getNumPoints() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function () {\n\t\treturn this.properIntersectionPoint;\n\t},\n\tsetIsDoneIfProperInt: function (isDoneWhenProperInt) {\n\t\tthis.isDoneWhenProperInt = isDoneWhenProperInt;\n\t},\n\thasProperInteriorIntersection: function () {\n\t\treturn this.hasProperInterior;\n\t},\n\tisBoundaryPointInternal: function (li, bdyNodes) {\n\t\tfor (var i = bdyNodes.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tvar pt = node.getCoordinate();\n\t\t\tif (li.isIntersection(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\thasProperIntersection: function () {\n\t\treturn this.hasProper;\n\t},\n\thasIntersection: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn this._isDone;\n\t},\n\tisBoundaryPoint: function (li, bdyNodes) {\n\t\tif (bdyNodes === null) return false;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\n\t\treturn false;\n\t},\n\tsetBoundaryNodes: function (bdyNodes0, bdyNodes1) {\n\t\tthis.bdyNodes = new Array(2).fill(null);\n\t\tthis.bdyNodes[0] = bdyNodes0;\n\t\tthis.bdyNodes[1] = bdyNodes1;\n\t},\n\taddIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tif (this.recordIsolated) {\n\t\t\t\te0.setIsolated(false);\n\t\t\t\te1.setIsolated(false);\n\t\t\t}\n\t\t\tthis.numIntersections++;\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\tif (this.includeProper || !this.li.isProper()) {\n\t\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\n\t\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\n\t\t\t\t}\n\t\t\t\tif (this.li.isProper()) {\n\t\t\t\t\tthis.properIntersectionPoint = this.li.getIntersection(0).copy();\n\t\t\t\t\tthis.hasProper = true;\n\t\t\t\t\tif (this.isDoneWhenProperInt) {\n\t\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.isBoundaryPoint(this.li, this.bdyNodes)) this.hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentIntersector;\n\t}\n});\nSegmentIntersector.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport MonotoneChain from './MonotoneChain';\nimport SweepLineEvent from './SweepLineEvent';\nimport EdgeSetIntersector from './EdgeSetIntersector';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport inherits from '../../../../../inherits';\nimport List from '../../../../../java/util/List';\nexport default function SimpleMCSweepLineIntersector() {\n\tEdgeSetIntersector.apply(this);\n\tthis.events = new ArrayList();\n\tthis.nOverlaps = null;\n}\ninherits(SimpleMCSweepLineIntersector, EdgeSetIntersector);\nextend(SimpleMCSweepLineIntersector.prototype, {\n\tprepareEvents: function () {\n\t\tCollections.sort(this.events);\n\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\tvar ev = this.events.get(i);\n\t\t\tif (ev.isDelete()) {\n\t\t\t\tev.getInsertEvent().setDeleteEventIndex(i);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeIntersections: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet si = arguments[0];\n\t\t\tthis.nOverlaps = 0;\n\t\t\tthis.prepareEvents();\n\t\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\t\tvar ev = this.events.get(i);\n\t\t\t\tif (ev.isInsert()) {\n\t\t\t\t\tthis.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n\t\t\t\t}\n\t\t\t\tif (si.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet edges0 = arguments[0], edges1 = arguments[1], si = arguments[2];\n\t\t\t\tthis.addEdges(edges0, edges0);\n\t\t\t\tthis.addEdges(edges1, edges1);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n\t\t\t\tlet edges = arguments[0], si = arguments[1], testAllSegments = arguments[2];\n\t\t\t\tif (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t}\n\t\t}\n\t},\n\taddEdge: function (edge, edgeSet) {\n\t\tvar mce = edge.getMonotoneChainEdge();\n\t\tvar startIndex = mce.getStartIndexes();\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(mce, i);\n\t\t\tvar insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n\t\t\tthis.events.add(insertEvent);\n\t\t\tthis.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n\t\t}\n\t},\n\tprocessOverlaps: function (start, end, ev0, si) {\n\t\tvar mc0 = ev0.getObject();\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar ev1 = this.events.get(i);\n\t\t\tif (ev1.isInsert()) {\n\t\t\t\tvar mc1 = ev1.getObject();\n\t\t\t\tif (!ev0.isSameLabel(ev1)) {\n\t\t\t\t\tmc0.computeIntersections(mc1, si);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\taddEdges: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edge);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edges = arguments[0], edgeSet = arguments[1];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edgeSet);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SimpleMCSweepLineIntersector;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport Comparator from '../../../../../java/util/Comparator';\nexport default function IntervalRTreeNode() {\n\tthis.min = Double.POSITIVE_INFINITY;\n\tthis.max = Double.NEGATIVE_INFINITY;\n}\nextend(IntervalRTreeNode.prototype, {\n\tgetMin: function () {\n\t\treturn this.min;\n\t},\n\tintersects: function (queryMin, queryMax) {\n\t\tif (this.min > queryMax || this.max < queryMin) return false;\n\t\treturn true;\n\t},\n\tgetMax: function () {\n\t\treturn this.max;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new Coordinate(this.min, 0), new Coordinate(this.max, 0));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeNode;\n\t}\n});\nfunction NodeComparator() {}\nextend(NodeComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar n1 = o1;\n\t\tvar n2 = o2;\n\t\tvar mid1 = (n1.min + n1.max) / 2;\n\t\tvar mid2 = (n2.min + n2.max) / 2;\n\t\tif (mid1 < mid2) return -1;\n\t\tif (mid1 > mid2) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn NodeComparator;\n\t}\n});\nIntervalRTreeNode.NodeComparator = NodeComparator;\n","import IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function IntervalRTreeLeafNode() {\n\tIntervalRTreeNode.apply(this);\n\tthis.item = null;\n\tlet min = arguments[0], max = arguments[1], item = arguments[2];\n\tthis.min = min;\n\tthis.max = max;\n\tthis.item = item;\n}\ninherits(IntervalRTreeLeafNode, IntervalRTreeNode);\nextend(IntervalRTreeLeafNode.prototype, {\n\tquery: function (queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) return null;\n\t\tvisitor.visitItem(this.item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeLeafNode;\n\t}\n});\n","import IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function IntervalRTreeBranchNode() {\n\tIntervalRTreeNode.apply(this);\n\tthis.node1 = null;\n\tthis.node2 = null;\n\tlet n1 = arguments[0], n2 = arguments[1];\n\tthis.node1 = n1;\n\tthis.node2 = n2;\n\tthis.buildExtent(this.node1, this.node2);\n}\ninherits(IntervalRTreeBranchNode, IntervalRTreeNode);\nextend(IntervalRTreeBranchNode.prototype, {\n\tbuildExtent: function (n1, n2) {\n\t\tthis.min = Math.min(n1.min, n2.min);\n\t\tthis.max = Math.max(n1.max, n2.max);\n\t},\n\tquery: function (queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.node1 !== null) this.node1.query(queryMin, queryMax, visitor);\n\t\tif (this.node2 !== null) this.node2.query(queryMin, queryMax, visitor);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeBranchNode;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport System from '../../../../../java/lang/System';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode';\nexport default function SortedPackedIntervalRTree() {\n\tthis.leaves = new ArrayList();\n\tthis.root = null;\n\tthis.level = 0;\n}\nextend(SortedPackedIntervalRTree.prototype, {\n\tbuildTree: function () {\n\t\tCollections.sort(this.leaves, new IntervalRTreeNode.NodeComparator());\n\t\tvar src = this.leaves;\n\t\tvar temp = null;\n\t\tvar dest = new ArrayList();\n\t\twhile (true) {\n\t\t\tthis.buildLevel(src, dest);\n\t\t\tif (dest.size() === 1) return dest.get(0);\n\t\t\ttemp = src;\n\t\t\tsrc = dest;\n\t\t\tdest = temp;\n\t\t}\n\t},\n\tinsert: function (min, max, item) {\n\t\tif (this.root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\n\t\tthis.leaves.add(new IntervalRTreeLeafNode(min, max, item));\n\t},\n\tquery: function (min, max, visitor) {\n\t\tthis.init();\n\t\tthis.root.query(min, max, visitor);\n\t},\n\tbuildRoot: function () {\n\t\tif (this.root !== null) return null;\n\t\tthis.root = this.buildTree();\n\t},\n\tprintNode: function (node) {\n\t\tSystem.out.println(WKTWriter.toLineString(new Coordinate(node.min, this.level), new Coordinate(node.max, this.level)));\n\t},\n\tinit: function () {\n\t\tif (this.root !== null) return null;\n\t\tthis.buildRoot();\n\t},\n\tbuildLevel: function (src, dest) {\n\t\tthis.level++;\n\t\tdest.clear();\n\t\tfor (var i = 0; i < src.size(); i += 2) {\n\t\t\tvar n1 = src.get(i);\n\t\t\tvar n2 = i + 1 < src.size() ? src.get(i) : null;\n\t\t\tif (n2 === null) {\n\t\t\t\tdest.add(n1);\n\t\t\t} else {\n\t\t\t\tvar node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n\t\t\t\tdest.add(node);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SortedPackedIntervalRTree;\n\t}\n});\n","import LineString from '../LineString';\nimport Geometry from '../Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport GeometryComponentFilter from '../GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function LinearComponentExtracter() {\n\tthis.lines = null;\n\tthis.isForcedToLineString = false;\n\tif (arguments.length === 1) {\n\t\tlet lines = arguments[0];\n\t\tthis.lines = lines;\n\t} else if (arguments.length === 2) {\n\t\tlet lines = arguments[0], isForcedToLineString = arguments[1];\n\t\tthis.lines = lines;\n\t\tthis.isForcedToLineString = isForcedToLineString;\n\t}\n}\nextend(LinearComponentExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (this.isForcedToLineString && geom instanceof LinearRing) {\n\t\t\tvar line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n\t\t\tthis.lines.add(line);\n\t\t\treturn null;\n\t\t}\n\t\tif (geom instanceof LineString) this.lines.add(geom);\n\t},\n\tsetForceToLineString: function (isForcedToLineString) {\n\t\tthis.isForcedToLineString = isForcedToLineString;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LinearComponentExtracter;\n\t}\n});\nLinearComponentExtracter.getGeometry = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString));\n\t}\n};\nLinearComponentExtracter.getLines = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn LinearComponentExtracter.getLines(geom, false);\n\t} else if (arguments.length === 2) {\n\t\tif (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\tlet geoms = arguments[0], lines = arguments[1];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\n\t\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\t\tvar lines = new ArrayList();\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\tlet geom = arguments[0], lines = arguments[1];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tlines.add(geom);\n\t\t\t} else {\n\t\t\t\tgeom.apply(new LinearComponentExtracter(lines));\n\t\t\t}\n\t\t\treturn lines;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n\t\t\tlet geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines, forceToLineString);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n\t\t\tlet geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t}\n\t}\n};\n","import ItemVisitor from './ItemVisitor';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function ArrayListVisitor() {\n\tthis.items = new ArrayList();\n}\nextend(ArrayListVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tthis.items.add(item);\n\t},\n\tgetItems: function () {\n\t\treturn this.items;\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn ArrayListVisitor;\n\t}\n});\n","import hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport ItemVisitor from '../../index/ItemVisitor';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport extend from '../../../../../extend';\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree';\nimport LineSegment from '../../geom/LineSegment';\nimport Polygonal from '../../geom/Polygonal';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport ArrayListVisitor from '../../index/ArrayListVisitor';\nimport RayCrossingCounter from '../RayCrossingCounter';\nexport default function IndexedPointInAreaLocator() {\n\tthis.index = null;\n\tlet g = arguments[0];\n\tif (!hasInterface(g, Polygonal)) throw new IllegalArgumentException(\"Argument must be Polygonal\");\n\tthis.index = new IntervalIndexedGeometry(g);\n}\nextend(IndexedPointInAreaLocator.prototype, {\n\tlocate: function (p) {\n\t\tvar rcc = new RayCrossingCounter(p);\n\t\tvar visitor = new SegmentVisitor(rcc);\n\t\tthis.index.query(p.y, p.y, visitor);\n\t\treturn rcc.getLocation();\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function () {\n\t\treturn IndexedPointInAreaLocator;\n\t}\n});\nfunction SegmentVisitor() {\n\tthis.counter = null;\n\tlet counter = arguments[0];\n\tthis.counter = counter;\n}\nextend(SegmentVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tvar seg = item;\n\t\tthis.counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentVisitor;\n\t}\n});\nfunction IntervalIndexedGeometry() {\n\tthis.index = new SortedPackedIntervalRTree();\n\tlet geom = arguments[0];\n\tthis.init(geom);\n}\nextend(IntervalIndexedGeometry.prototype, {\n\tinit: function (geom) {\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar line = i.next();\n\t\t\tvar pts = line.getCoordinates();\n\t\t\tthis.addLine(pts);\n\t\t}\n\t},\n\taddLine: function (pts) {\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tvar seg = new LineSegment(pts[i - 1], pts[i]);\n\t\t\tvar min = Math.min(seg.p0.y, seg.p1.y);\n\t\t\tvar max = Math.max(seg.p0.y, seg.p1.y);\n\t\t\tthis.index.insert(min, max, seg);\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.index.query(min, max, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet min = arguments[0], max = arguments[1], visitor = arguments[2];\n\t\t\tthis.index.query(min, max, visitor);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalIndexedGeometry;\n\t}\n});\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function EdgeIntersection() {\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.dist = null;\n\tlet coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2];\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.dist = dist;\n}\nextend(EdgeIntersection.prototype, {\n\tgetSegmentIndex: function () {\n\t\treturn this.segmentIndex;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.coord;\n\t},\n\tprint: function (out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t\tout.println(\" dist = \" + this.dist);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\treturn this.compare(other.segmentIndex, other.dist);\n\t},\n\tisEndPoint: function (maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && this.dist === 0.0) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\ttoString: function () {\n\t\treturn this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n\t},\n\tgetDistance: function () {\n\t\treturn this.dist;\n\t},\n\tcompare: function (segmentIndex, dist) {\n\t\tif (this.segmentIndex < segmentIndex) return -1;\n\t\tif (this.segmentIndex > segmentIndex) return 1;\n\t\tif (this.dist < dist) return -1;\n\t\tif (this.dist > dist) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeIntersection;\n\t}\n});\n","import EdgeIntersection from './EdgeIntersection';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport Edge from './Edge';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeIntersectionList() {\n\tthis.nodeMap = new TreeMap();\n\tthis.edge = null;\n\tlet edge = arguments[0];\n\tthis.edge = edge;\n}\nextend(EdgeIntersectionList.prototype, {\n\tprint: function (out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function (edgeList) {\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\taddEndpoints: function () {\n\t\tvar maxSegIndex = this.edge.pts.length - 1;\n\t\tthis.add(this.edge.pts[0], 0, 0.0);\n\t\tthis.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n\t},\n\tcreateSplitEdge: function (ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n\t\tvar useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.pts[i];\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = ei1.coord;\n\t\treturn new Edge(pts, new Label(this.edge.label));\n\t},\n\tadd: function (intPt, segmentIndex, dist) {\n\t\tvar eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n\t\tvar ei = this.nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\treturn ei;\n\t\t}\n\t\tthis.nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tisIntersection: function (pt) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tif (ei.coord.equals(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeIntersectionList;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../Quadrant';\nexport default function MonotoneChainIndexer() {}\nextend(MonotoneChainIndexer.prototype, {\n\tgetChainStartIndices: function (pts) {\n\t\tvar start = 0;\n\t\tvar startIndexList = new ArrayList();\n\t\tstartIndexList.add(new Integer(start));\n\t\tdo {\n\t\t\tvar last = this.findChainEnd(pts, start);\n\t\t\tstartIndexList.add(new Integer(last));\n\t\t\tstart = last;\n\t\t} while (start < pts.length - 1);\n\t\tvar startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n\t\treturn startIndex;\n\t},\n\tfindChainEnd: function (pts, start) {\n\t\tvar chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n\t\tvar last = start + 1;\n\t\twhile (last < pts.length) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t\tlast++;\n\t\t}\n\t\treturn last - 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainIndexer;\n\t}\n});\nMonotoneChainIndexer.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n","import extend from '../../../../../extend';\nimport MonotoneChainIndexer from './MonotoneChainIndexer';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChainEdge() {\n\tthis.e = null;\n\tthis.pts = null;\n\tthis.startIndex = null;\n\tthis.env1 = new Envelope();\n\tthis.env2 = new Envelope();\n\tlet e = arguments[0];\n\tthis.e = e;\n\tthis.pts = e.getCoordinates();\n\tvar mcb = new MonotoneChainIndexer();\n\tthis.startIndex = mcb.getChainStartIndices(this.pts);\n}\nextend(MonotoneChainEdge.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tgetMaxX: function (chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 > x2 ? x1 : x2;\n\t},\n\tgetMinX: function (chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 < x2 ? x1 : x2;\n\t},\n\tcomputeIntersectsForChain: function () {\n\t\tif (arguments.length === 4) {\n\t\t\tlet chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3];\n\t\t\tthis.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5];\n\t\t\tvar p00 = this.pts[start0];\n\t\t\tvar p01 = this.pts[end0];\n\t\t\tvar p10 = mce.pts[start1];\n\t\t\tvar p11 = mce.pts[end1];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tei.addIntersections(this.e, start0, mce.e, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.env1.init(p00, p01);\n\t\t\tthis.env2.init(p10, p11);\n\t\t\tif (!this.env1.intersects(this.env2)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t}\n\t},\n\tgetStartIndexes: function () {\n\t\treturn this.startIndex;\n\t},\n\tcomputeIntersects: function (mce, si) {\n\t\tfor (var i = 0; i < this.startIndex.length - 1; i++) {\n\t\t\tfor (var j = 0; j < mce.startIndex.length - 1; j++) {\n\t\t\t\tthis.computeIntersectsForChain(i, mce, j, si);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainEdge;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nexport default function Depth() {\n\tthis.depth = Array(2).fill().map(() => Array(3));\n\tfor (var i = 0; i < 2; i++) {\n\t\tfor (var j = 0; j < 3; j++) {\n\t\t\tthis.depth[i][j] = Depth.NULL_VALUE;\n\t\t}\n\t}\n}\nextend(Depth.prototype, {\n\tgetDepth: function (geomIndex, posIndex) {\n\t\treturn this.depth[geomIndex][posIndex];\n\t},\n\tsetDepth: function (geomIndex, posIndex, depthValue) {\n\t\tthis.depth[geomIndex][posIndex] = depthValue;\n\t},\n\tisNull: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\tif (this.depth[i][j] !== Depth.NULL_VALUE) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.depth[geomIndex][1] === Depth.NULL_VALUE;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this.depth[geomIndex][posIndex] === Depth.NULL_VALUE;\n\t\t}\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!this.isNull(i)) {\n\t\t\t\tvar minDepth = this.depth[i][1];\n\t\t\t\tif (this.depth[i][2] < minDepth) minDepth = this.depth[i][2];\n\t\t\t\tif (minDepth < 0) minDepth = 0;\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar newValue = 0;\n\t\t\t\t\tif (this.depth[i][j] > minDepth) newValue = 1;\n\t\t\t\t\tthis.depth[i][j] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDelta: function (geomIndex) {\n\t\treturn this.depth[geomIndex][Position.RIGHT] - this.depth[geomIndex][Position.LEFT];\n\t},\n\tgetLocation: function (geomIndex, posIndex) {\n\t\tif (this.depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\n\t\treturn Location.INTERIOR;\n\t},\n\ttoString: function () {\n\t\treturn \"A: \" + this.depth[0][1] + \",\" + this.depth[0][2] + \" B: \" + this.depth[1][1] + \",\" + this.depth[1][2];\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar loc = lbl.getLocation(i, j);\n\t\t\t\t\tif (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n\t\t\t\t\t\tif (this.isNull(i, j)) {\n\t\t\t\t\t\t\tthis.depth[i][j] = Depth.depthAtLocation(loc);\n\t\t\t\t\t\t} else this.depth[i][j] += Depth.depthAtLocation(loc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tif (location === Location.INTERIOR) this.depth[geomIndex][posIndex]++;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Depth;\n\t}\n});\nDepth.depthAtLocation = function (location) {\n\tif (location === Location.EXTERIOR) return 0;\n\tif (location === Location.INTERIOR) return 1;\n\treturn Depth.NULL_VALUE;\n};\nDepth.NULL_VALUE = -1;\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport EdgeIntersectionList from './EdgeIntersectionList';\nimport MonotoneChainEdge from './index/MonotoneChainEdge';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport Depth from './Depth';\nimport GraphComponent from './GraphComponent';\nexport default function Edge() {\n\tGraphComponent.apply(this);\n\tthis.pts = null;\n\tthis.env = null;\n\tthis.eiList = new EdgeIntersectionList(this);\n\tthis.name = null;\n\tthis.mce = null;\n\tthis._isIsolated = true;\n\tthis.depth = new Depth();\n\tthis.depthDelta = 0;\n\tif (arguments.length === 1) {\n\t\tlet pts = arguments[0];\n\t\tEdge.call(this, pts, null);\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], label = arguments[1];\n\t\tthis.pts = pts;\n\t\tthis.label = label;\n\t}\n}\ninherits(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tgetDepth: function () {\n\t\treturn this.depth;\n\t},\n\tgetCollapsedEdge: function () {\n\t\tvar newPts = new Array(2).fill(null);\n\t\tnewPts[0] = this.pts[0];\n\t\tnewPts[1] = this.pts[1];\n\t\tvar newe = new Edge(newPts, Label.toLineLabel(this.label));\n\t\treturn newe;\n\t},\n\tisIsolated: function () {\n\t\treturn this._isIsolated;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tsetIsolated: function (isIsolated) {\n\t\tthis._isIsolated = isIsolated;\n\t},\n\tsetName: function (name) {\n\t\tthis.name = name;\n\t},\n\tequals: function (o) {\n\t\tif (!(o instanceof Edge)) return false;\n\t\tvar e = o;\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tvar isEqualForward = true;\n\t\tvar isEqualReverse = true;\n\t\tvar iRev = this.pts.length;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\tisEqualForward = false;\n\t\t\t}\n\t\t\tif (!this.pts[i].equals2D(e.pts[-- iRev])) {\n\t\t\t\tisEqualReverse = false;\n\t\t\t}\n\t\t\tif (!isEqualForward && !isEqualReverse) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.pts.length > 0) return this.pts[0];\n\t\t\treturn null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this.pts[i];\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tout.print(\"edge \" + this.name + \": \");\n\t\tout.print(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) out.print(\",\");\n\t\t\tout.print(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tout.print(\")  \" + this.label + \" \" + this.depthDelta);\n\t},\n\tcomputeIM: function (im) {\n\t\tEdge.updateIM(this.label, im);\n\t},\n\tisCollapsed: function () {\n\t\tif (!this.label.isArea()) return false;\n\t\tif (this.pts.length !== 3) return false;\n\t\tif (this.pts[0].equals(this.pts[2])) return true;\n\t\treturn false;\n\t},\n\tisClosed: function () {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetMaximumSegmentIndex: function () {\n\t\treturn this.pts.length - 1;\n\t},\n\tgetDepthDelta: function () {\n\t\treturn this.depthDelta;\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.pts.length;\n\t},\n\tprintReverse: function (out) {\n\t\tout.print(\"edge \" + this.name + \": \");\n\t\tfor (var i = this.pts.length - 1; i >= 0; i--) {\n\t\t\tout.print(this.pts[i] + \" \");\n\t\t}\n\t\tout.println(\"\");\n\t},\n\tgetMonotoneChainEdge: function () {\n\t\tif (this.mce === null) this.mce = new MonotoneChainEdge(this);\n\t\treturn this.mce;\n\t},\n\tgetEnvelope: function () {\n\t\tif (this.env === null) {\n\t\t\tthis.env = new Envelope();\n\t\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\t\tthis.env.expandToInclude(this.pts[i]);\n\t\t\t}\n\t\t}\n\t\treturn this.env;\n\t},\n\taddIntersection: function (li, segmentIndex, geomIndex, intIndex) {\n\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar dist = li.getEdgeDistance(geomIndex, intIndex);\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t\tdist = 0.0;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"edge \" + this.name + \": \");\n\t\tbuf.append(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) buf.append(\",\");\n\t\t\tbuf.append(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tbuf.append(\")  \" + this.label + \" \" + this.depthDelta);\n\t\treturn buf.toString();\n\t},\n\tisPointwiseEqual: function (e) {\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsetDepthDelta: function (depthDelta) {\n\t\tthis.depthDelta = depthDelta;\n\t},\n\tgetEdgeIntersectionList: function () {\n\t\treturn this.eiList;\n\t},\n\taddIntersections: function (li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Edge;\n\t}\n});\nEdge.updateIM = function () {\n\tif (arguments.length === 2) {\n\t\tlet label = arguments[0], im = arguments[1];\n\t\tim.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n\t\tif (label.isArea()) {\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n\t\t}\n\t} else return GraphComponent.prototype.updateIM.apply(this, arguments);\n};\n","import PointLocator from '../algorithm/PointLocator';\nimport Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\nimport hasInterface from '../../../../hasInterface';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport MultiPoint from '../geom/MultiPoint';\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector';\nimport LinearRing from '../geom/LinearRing';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport SegmentIntersector from './index/SegmentIntersector';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport Label from './Label';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Polygonal from '../geom/Polygonal';\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator';\nimport Assert from '../util/Assert';\nimport Edge from './Edge';\nimport inherits from '../../../../inherits';\nimport MultiLineString from '../geom/MultiLineString';\nimport PlanarGraph from './PlanarGraph';\nexport default function GeometryGraph() {\n\tPlanarGraph.apply(this);\n\tthis.parentGeom = null;\n\tthis.lineEdgeMap = new HashMap();\n\tthis.boundaryNodeRule = null;\n\tthis.useBoundaryDeterminationRule = true;\n\tthis.argIndex = null;\n\tthis.boundaryNodes = null;\n\tthis._hasTooFewPoints = false;\n\tthis.invalidPoint = null;\n\tthis.areaPtLocator = null;\n\tthis.ptLocator = new PointLocator();\n\tif (arguments.length === 2) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1];\n\t\tGeometryGraph.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2];\n\t\tthis.argIndex = argIndex;\n\t\tthis.parentGeom = parentGeom;\n\t\tthis.boundaryNodeRule = boundaryNodeRule;\n\t\tif (parentGeom !== null) {\n\t\t\tthis.add(parentGeom);\n\t\t}\n\t}\n}\ninherits(GeometryGraph, PlanarGraph);\nextend(GeometryGraph.prototype, {\n\tinsertBoundaryPoint: function (argIndex, coord) {\n\t\tvar n = this.nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tvar boundaryCount = 1;\n\t\tvar loc = Location.NONE;\n\t\tloc = lbl.getLocation(argIndex, Position.ON);\n\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\tvar newLoc = GeometryGraph.determineBoundary(this.boundaryNodeRule, boundaryCount);\n\t\tlbl.setLocation(argIndex, newLoc);\n\t},\n\tcomputeSelfNodes: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1];\n\t\t\treturn this.computeSelfNodes(li, computeRingSelfNodes, false);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2];\n\t\t\tvar si = new SegmentIntersector(li, true, false);\n\t\t\tsi.setIsDoneIfProperInt(isDoneIfProperInt);\n\t\t\tvar esi = this.createEdgeSetIntersector();\n\t\t\tvar isRings = this.parentGeom instanceof LinearRing || this.parentGeom instanceof Polygon || this.parentGeom instanceof MultiPolygon;\n\t\t\tvar computeAllSegments = computeRingSelfNodes || !isRings;\n\t\t\tesi.computeIntersections(this.edges, si, computeAllSegments);\n\t\t\tthis.addSelfIntersectionNodes(this.argIndex);\n\t\t\treturn si;\n\t\t}\n\t},\n\tcomputeSplitEdges: function (edgelist) {\n\t\tfor (var i = this.edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\te.eiList.addSplitEdges(edgelist);\n\t\t}\n\t},\n\tcomputeEdgeIntersections: function (g, li, includeProper) {\n\t\tvar si = new SegmentIntersector(li, includeProper, true);\n\t\tsi.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n\t\tvar esi = this.createEdgeSetIntersector();\n\t\tesi.computeIntersections(this.edges, g.edges, si);\n\t\treturn si;\n\t},\n\tgetGeometry: function () {\n\t\treturn this.parentGeom;\n\t},\n\tgetBoundaryNodeRule: function () {\n\t\treturn this.boundaryNodeRule;\n\t},\n\thasTooFewPoints: function () {\n\t\treturn this._hasTooFewPoints;\n\t},\n\taddPoint: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar coord = p.getCoordinate();\n\t\t\tthis.insertPoint(this.argIndex, coord, Location.INTERIOR);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\tthis.insertPoint(this.argIndex, pt, Location.INTERIOR);\n\t\t}\n\t},\n\taddPolygon: function (p) {\n\t\tthis.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tthis.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\taddEdge: function (e) {\n\t\tthis.insertEdge(e);\n\t\tvar coord = e.getCoordinates();\n\t\tthis.insertPoint(this.argIndex, coord[0], Location.BOUNDARY);\n\t\tthis.insertPoint(this.argIndex, coord[coord.length - 1], Location.BOUNDARY);\n\t},\n\taddLineString: function (line) {\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (coord.length < 2) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis.invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this.argIndex, Location.INTERIOR));\n\t\tthis.lineEdgeMap.put(line, e);\n\t\tthis.insertEdge(e);\n\t\tAssert.isTrue(coord.length >= 2, \"found LineString with single point\");\n\t\tthis.insertBoundaryPoint(this.argIndex, coord[0]);\n\t\tthis.insertBoundaryPoint(this.argIndex, coord[coord.length - 1]);\n\t},\n\tgetInvalidPoint: function () {\n\t\treturn this.invalidPoint;\n\t},\n\tgetBoundaryPoints: function () {\n\t\tvar coll = this.getBoundaryNodes();\n\t\tvar pts = new Array(coll.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = coll.iterator(); it.hasNext(); ) {\n\t\t\tvar node = it.next();\n\t\t\tpts[i++] = node.getCoordinate().copy();\n\t\t}\n\t\treturn pts;\n\t},\n\tgetBoundaryNodes: function () {\n\t\tif (this.boundaryNodes === null) this.boundaryNodes = this.nodes.getBoundaryNodes(this.argIndex);\n\t\treturn this.boundaryNodes;\n\t},\n\taddSelfIntersectionNode: function (argIndex, coord, loc) {\n\t\tif (this.isBoundaryNode(argIndex, coord)) return null;\n\t\tif (loc === Location.BOUNDARY && this.useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc);\n\t},\n\taddPolygonRing: function (lr, cwLeft, cwRight) {\n\t\tif (lr.isEmpty()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n\t\tif (coord.length < 4) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis.invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar left = cwLeft;\n\t\tvar right = cwRight;\n\t\tif (CGAlgorithms.isCCW(coord)) {\n\t\t\tleft = cwRight;\n\t\t\tright = cwLeft;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this.argIndex, Location.BOUNDARY, left, right));\n\t\tthis.lineEdgeMap.put(lr, e);\n\t\tthis.insertEdge(e);\n\t\tthis.insertPoint(this.argIndex, coord[0], Location.BOUNDARY);\n\t},\n\tinsertPoint: function (argIndex, coord, onLocation) {\n\t\tvar n = this.nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tif (lbl === null) {\n\t\t\tn.label = new Label(argIndex, onLocation);\n\t\t} else lbl.setLocation(argIndex, onLocation);\n\t},\n\tcreateEdgeSetIntersector: function () {\n\t\treturn new SimpleMCSweepLineIntersector();\n\t},\n\taddSelfIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this.edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tthis.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof MultiPolygon) this.useBoundaryDeterminationRule = false;\n\t\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t} else return PlanarGraph.prototype.add.apply(this, arguments);\n\t},\n\taddCollection: function (gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tlocate: function (pt) {\n\t\tif (hasInterface(this.parentGeom, Polygonal) && this.parentGeom.getNumGeometries() > 50) {\n\t\t\tif (this.areaPtLocator === null) {\n\t\t\t\tthis.areaPtLocator = new IndexedPointInAreaLocator(this.parentGeom);\n\t\t\t}\n\t\t\treturn this.areaPtLocator.locate(pt);\n\t\t}\n\t\treturn this.ptLocator.locate(pt, this.parentGeom);\n\t},\n\tfindEdge: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet line = arguments[0];\n\t\t\treturn this.lineEdgeMap.get(line);\n\t\t} else return PlanarGraph.prototype.findEdge.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryGraph;\n\t}\n});\nGeometryGraph.determineBoundary = function (boundaryNodeRule, boundaryCount) {\n\treturn boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\n};\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default function GeometryGraphOperation() {\n\tthis.li = new RobustLineIntersector();\n\tthis.resultPrecisionModel = null;\n\tthis.arg = null;\n\tif (arguments.length === 1) {\n\t\tlet g0 = arguments[0];\n\t\tthis.setComputationPrecision(g0.getPrecisionModel());\n\t\tthis.arg = new Array(1).fill(null);\n\t\tthis.arg[0] = new GeometryGraph(0, g0);\n\t\t;\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tif (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel());\n\t\tthis.arg = new Array(2).fill(null);\n\t\tthis.arg[0] = new GeometryGraph(0, g0, boundaryNodeRule);\n\t\tthis.arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n\t}\n}\nextend(GeometryGraphOperation.prototype, {\n\tgetArgGeometry: function (i) {\n\t\treturn this.arg[i].getGeometry();\n\t},\n\tsetComputationPrecision: function (pm) {\n\t\tthis.resultPrecisionModel = pm;\n\t\tthis.li.setPrecisionModel(this.resultPrecisionModel);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryGraphOperation;\n\t}\n});\n","import extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nexport default function OrientedCoordinateArray() {\n\tthis.pts = null;\n\tthis._orientation = null;\n\tlet pts = arguments[0];\n\tthis.pts = pts;\n\tthis._orientation = OrientedCoordinateArray.orientation(pts);\n}\nextend(OrientedCoordinateArray.prototype, {\n\tcompareTo: function (o1) {\n\t\tvar oca = o1;\n\t\tvar comp = OrientedCoordinateArray.compareOriented(this.pts, this._orientation, oca.pts, oca._orientation);\n\t\treturn comp;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn OrientedCoordinateArray;\n\t}\n});\nOrientedCoordinateArray.orientation = function (pts) {\n\treturn CoordinateArrays.increasingDirection(pts) === 1;\n};\nOrientedCoordinateArray.compareOriented = function (pts1, orientation1, pts2, orientation2) {\n\tvar dir1 = orientation1 ? 1 : -1;\n\tvar dir2 = orientation2 ? 1 : -1;\n\tvar limit1 = orientation1 ? pts1.length : -1;\n\tvar limit2 = orientation2 ? pts2.length : -1;\n\tvar i1 = orientation1 ? 0 : pts1.length - 1;\n\tvar i2 = orientation2 ? 0 : pts2.length - 1;\n\tvar comp = 0;\n\twhile (true) {\n\t\tvar compPt = pts1[i1].compareTo(pts2[i2]);\n\t\tif (compPt !== 0) return compPt;\n\t\ti1 += dir1;\n\t\ti2 += dir2;\n\t\tvar done1 = i1 === limit1;\n\t\tvar done2 = i2 === limit2;\n\t\tif (done1 && !done2) return -1;\n\t\tif (!done1 && done2) return 1;\n\t\tif (done1 && done2) return 0;\n\t}\n};\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeList() {\n\tthis.edges = new ArrayList();\n\tthis.ocaMap = new TreeMap();\n}\nextend(EdgeList.prototype, {\n\tprint: function (out) {\n\t\tout.print(\"MULTILINESTRING ( \");\n\t\tfor (var j = 0; j < this.edges.size(); j++) {\n\t\t\tvar e = this.edges.get(j);\n\t\t\tif (j > 0) out.print(\",\");\n\t\t\tout.print(\"(\");\n\t\t\tvar pts = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tif (i > 0) out.print(\",\");\n\t\t\t\tout.print(pts[i].x + \" \" + pts[i].y);\n\t\t\t}\n\t\t\tout.println(\")\");\n\t\t}\n\t\tout.print(\")  \");\n\t},\n\taddAll: function (edgeColl) {\n\t\tfor (var i = edgeColl.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t},\n\tfindEdgeIndex: function (e) {\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tif (this.edges.get(i).equals(e)) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function () {\n\t\treturn this.edges.iterator();\n\t},\n\tgetEdges: function () {\n\t\treturn this.edges;\n\t},\n\tget: function (i) {\n\t\treturn this.edges.get(i);\n\t},\n\tfindEqualEdge: function (e) {\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tvar matchEdge = this.ocaMap.get(oca);\n\t\treturn matchEdge;\n\t},\n\tadd: function (e) {\n\t\tthis.edges.add(e);\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tthis.ocaMap.put(oca, e);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeList;\n\t}\n});\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator';\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper';\nimport PolygonBuilder from './PolygonBuilder';\nimport Position from '../../geomgraph/Position';\nimport LineBuilder from './LineBuilder';\nimport PointBuilder from './PointBuilder';\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from './OverlayNodeFactory';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function OverlayOp() {\n\tthis.ptLocator = new PointLocator();\n\tthis.geomFact = null;\n\tthis.resultGeom = null;\n\tthis.graph = null;\n\tthis.edgeList = new EdgeList();\n\tthis.resultPolyList = new ArrayList();\n\tthis.resultLineList = new ArrayList();\n\tthis.resultPointList = new ArrayList();\n\tlet g0 = arguments[0], g1 = arguments[1];\n\tGeometryGraphOperation.call(this, g0, g1);\n\tthis.graph = new PlanarGraph(new OverlayNodeFactory());\n\tthis.geomFact = g0.getFactory();\n}\ninherits(OverlayOp, GeometryGraphOperation);\nextend(OverlayOp.prototype, {\n\tinsertUniqueEdge: function (e) {\n\t\tvar existingEdge = this.edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\tvar depth = existingEdge.getDepth();\n\t\t\tif (depth.isNull()) {\n\t\t\t\tdepth.add(existingLabel);\n\t\t\t}\n\t\t\tdepth.add(labelToMerge);\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t} else {\n\t\t\tthis.edgeList.add(e);\n\t\t}\n\t},\n\tgetGraph: function () {\n\t\treturn this.graph;\n\t},\n\tcancelDuplicateResultEdges: function () {\n\t\tfor (var it = this.graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.isInResult() && sym.isInResult()) {\n\t\t\t\tde.setInResult(false);\n\t\t\t\tsym.setInResult(false);\n\t\t\t}\n\t\t}\n\t},\n\tisCoveredByLA: function (coord) {\n\t\tif (this.isCovered(coord, this.resultLineList)) return true;\n\t\tif (this.isCovered(coord, this.resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tcomputeGeometry: function (resultPointList, resultLineList, resultPolyList, opcode) {\n\t\tvar geomList = new ArrayList();\n\t\tgeomList.addAll(resultPointList);\n\t\tgeomList.addAll(resultLineList);\n\t\tgeomList.addAll(resultPolyList);\n\t\tif (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this.arg[0].getGeometry(), this.arg[1].getGeometry(), this.geomFact);\n\t\treturn this.geomFact.buildGeometry(geomList);\n\t},\n\tmergeSymLabels: function () {\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().mergeSymLabels();\n\t\t}\n\t},\n\tisCovered: function (coord, geomList) {\n\t\tfor (var it = geomList.iterator(); it.hasNext(); ) {\n\t\t\tvar geom = it.next();\n\t\t\tvar loc = this.ptLocator.locate(coord, geom);\n\t\t\tif (loc !== Location.EXTERIOR) return true;\n\t\t}\n\t\treturn false;\n\t},\n\treplaceCollapsedEdges: function () {\n\t\tvar newEdges = new ArrayList();\n\t\tfor (var it = this.edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.isCollapsed()) {\n\t\t\t\tit.remove();\n\t\t\t\tnewEdges.add(e.getCollapsedEdge());\n\t\t\t}\n\t\t}\n\t\tthis.edgeList.addAll(newEdges);\n\t},\n\tupdateNodeLabelling: function () {\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tvar lbl = node.getEdges().getLabel();\n\t\t\tnode.getLabel().merge(lbl);\n\t\t}\n\t},\n\tgetResultGeometry: function (overlayOpCode) {\n\t\tthis.computeOverlay(overlayOpCode);\n\t\treturn this.resultGeom;\n\t},\n\tinsertUniqueEdges: function (edges) {\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.insertUniqueEdge(e);\n\t\t}\n\t},\n\tcomputeOverlay: function (opCode) {\n\t\tthis.copyPoints(0);\n\t\tthis.copyPoints(1);\n\t\tthis.arg[0].computeSelfNodes(this.li, false);\n\t\tthis.arg[1].computeSelfNodes(this.li, false);\n\t\tthis.arg[0].computeEdgeIntersections(this.arg[1], this.li, true);\n\t\tvar baseSplitEdges = new ArrayList();\n\t\tthis.arg[0].computeSplitEdges(baseSplitEdges);\n\t\tthis.arg[1].computeSplitEdges(baseSplitEdges);\n\t\tvar splitEdges = baseSplitEdges;\n\t\tthis.insertUniqueEdges(baseSplitEdges);\n\t\tthis.computeLabelsFromDepths();\n\t\tthis.replaceCollapsedEdges();\n\t\tEdgeNodingValidator.checkValid(this.edgeList.getEdges());\n\t\tthis.graph.addEdges(this.edgeList.getEdges());\n\t\tthis.computeLabelling();\n\t\tthis.labelIncompleteNodes();\n\t\tthis.findResultAreaEdges(opCode);\n\t\tthis.cancelDuplicateResultEdges();\n\t\tvar polyBuilder = new PolygonBuilder(this.geomFact);\n\t\tpolyBuilder.add(this.graph);\n\t\tthis.resultPolyList = polyBuilder.getPolygons();\n\t\tvar lineBuilder = new LineBuilder(this, this.geomFact, this.ptLocator);\n\t\tthis.resultLineList = lineBuilder.build(opCode);\n\t\tvar pointBuilder = new PointBuilder(this, this.geomFact, this.ptLocator);\n\t\tthis.resultPointList = pointBuilder.build(opCode);\n\t\tthis.resultGeom = this.computeGeometry(this.resultPointList, this.resultLineList, this.resultPolyList, opCode);\n\t},\n\tlabelIncompleteNode: function (n, targetIndex) {\n\t\tvar loc = this.ptLocator.locate(n.getCoordinate(), this.arg[targetIndex].getGeometry());\n\t\tn.getLabel().setLocation(targetIndex, loc);\n\t},\n\tcopyPoints: function (argIndex) {\n\t\tfor (var i = this.arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this.graph.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tfindResultAreaEdges: function (opCode) {\n\t\tfor (var it = this.graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tif (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelsFromDepths: function () {\n\t\tfor (var it = this.edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar lbl = e.getLabel();\n\t\t\tvar depth = e.getDepth();\n\t\t\tif (!depth.isNull()) {\n\t\t\t\tdepth.normalize();\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tif (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n\t\t\t\t\t\tif (depth.getDelta(i) === 0) {\n\t\t\t\t\t\t\tlbl.toLine(i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function () {\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().computeLabelling(this.arg);\n\t\t}\n\t\tthis.mergeSymLabels();\n\t\tthis.updateNodeLabelling();\n\t},\n\tlabelIncompleteNodes: function () {\n\t\tvar nodeCount = 0;\n\t\tfor (var ni = this.graph.getNodes().iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tnodeCount++;\n\t\t\t\tif (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1);\n\t\t\t}\n\t\t\tn.getEdges().updateLabelling(label);\n\t\t}\n\t},\n\tisCoveredByA: function (coord) {\n\t\tif (this.isCovered(coord, this.resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OverlayOp;\n\t}\n});\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n\tvar gov = new OverlayOp(geom0, geom1);\n\tvar geomOv = gov.getResultGeometry(opCode);\n\treturn geomOv;\n};\nOverlayOp.intersection = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory());\n\tif (g.isGeometryCollection()) {\n\t\tvar g2 = other;\n\t\treturn GeometryCollectionMapper.map(g, {\n\t\t\tinterfaces_: function () {\n\t\t\t\treturn [MapOp];\n\t\t\t},\n\t\t\tmap: function (g) {\n\t\t\t\treturn g.intersection(g2);\n\t\t\t}\n\t\t});\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION);\n};\nOverlayOp.symDifference = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE);\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n\tvar dim0 = g0.getDimension();\n\tvar dim1 = g1.getDimension();\n\tvar resultDimension = -1;\n\tswitch (opCode) {\n\t\tcase OverlayOp.INTERSECTION:\n\t\t\tresultDimension = Math.min(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.UNION:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.DIFFERENCE:\n\t\t\tresultDimension = dim0;\n\t\t\tbreak;\n\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t}\n\treturn resultDimension;\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n\tvar result = null;\n\tswitch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n\t\tcase -1:\n\t\t\tresult = geomFact.createGeometryCollection(new Array(0).fill(null));\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tresult = geomFact.createPoint();\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tresult = geomFact.createLineString();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tresult = geomFact.createPolygon();\n\t\t\tbreak;\n\t}\n\treturn result;\n};\nOverlayOp.difference = function (g, other) {\n\tif (g.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory());\n\tif (other.isEmpty()) return g.copy();\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE);\n};\nOverlayOp.isResultOfOp = function () {\n\tif (arguments.length === 2) {\n\t\tlet label = arguments[0], opCode = arguments[1];\n\t\tvar loc0 = label.getLocation(0);\n\t\tvar loc1 = label.getLocation(1);\n\t\treturn OverlayOp.isResultOfOp(loc0, loc1, opCode);\n\t} else if (arguments.length === 3) {\n\t\tlet loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2];\n\t\tif (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR;\n\t\tif (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR;\n\t\tswitch (overlayOpCode) {\n\t\t\tcase OverlayOp.INTERSECTION:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.UNION:\n\t\t\t\treturn loc0 === Location.INTERIOR || loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.DIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR;\n\t\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t}\n\t\treturn false;\n\t}\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n","import GeometrySnapper from './GeometrySnapper';\nimport extend from '../../../../../../extend';\nimport System from '../../../../../../java/lang/System';\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover';\nimport OverlayOp from '../OverlayOp';\nexport default function SnapOverlayOp() {\n\tthis.geom = new Array(2).fill(null);\n\tthis.snapTolerance = null;\n\tthis.cbr = null;\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis.geom[0] = g1;\n\tthis.geom[1] = g2;\n\tthis.computeSnapTolerance();\n}\nextend(SnapOverlayOp.prototype, {\n\tselfSnap: function (geom) {\n\t\tvar snapper0 = new GeometrySnapper(geom);\n\t\tvar snapGeom = snapper0.snapTo(geom, this.snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tremoveCommonBits: function (geom) {\n\t\tthis.cbr = new CommonBitsRemover();\n\t\tthis.cbr.add(geom[0]);\n\t\tthis.cbr.add(geom[1]);\n\t\tvar remGeom = new Array(2).fill(null);\n\t\tremGeom[0] = this.cbr.removeCommonBits(geom[0].copy());\n\t\tremGeom[1] = this.cbr.removeCommonBits(geom[1].copy());\n\t\treturn remGeom;\n\t},\n\tprepareResult: function (geom) {\n\t\tthis.cbr.addCommonBits(geom);\n\t\treturn geom;\n\t},\n\tgetResultGeometry: function (opCode) {\n\t\tvar prepGeom = this.snap(this.geom);\n\t\tvar result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n\t\treturn this.prepareResult(result);\n\t},\n\tcheckValid: function (g) {\n\t\tif (!g.isValid()) {\n\t\t\tSystem.out.println(\"Snapped geometry is invalid\");\n\t\t}\n\t},\n\tcomputeSnapTolerance: function () {\n\t\tthis.snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this.geom[0], this.geom[1]);\n\t},\n\tsnap: function (geom) {\n\t\tvar remGeom = this.removeCommonBits(geom);\n\t\tvar snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this.snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapOverlayOp;\n\t}\n});\nSnapOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapOverlayOp.union = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapOverlayOp.intersection = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapOverlayOp.difference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n","import SnapOverlayOp from './SnapOverlayOp';\nimport extend from '../../../../../../extend';\nimport RuntimeException from '../../../../../../java/lang/RuntimeException';\nimport OverlayOp from '../OverlayOp';\nexport default function SnapIfNeededOverlayOp() {\n\tthis.geom = new Array(2).fill(null);\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis.geom[0] = g1;\n\tthis.geom[1] = g2;\n}\nextend(SnapIfNeededOverlayOp.prototype, {\n\tgetResultGeometry: function (opCode) {\n\t\tvar result = null;\n\t\tvar isSuccess = false;\n\t\tvar savedException = null;\n\t\ttry {\n\t\t\tresult = OverlayOp.overlayOp(this.geom[0], this.geom[1], opCode);\n\t\t\tvar isValid = true;\n\t\t\tif (isValid) isSuccess = true;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tsavedException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (!isSuccess) {\n\t\t\ttry {\n\t\t\t\tresult = SnapOverlayOp.overlayOp(this.geom[0], this.geom[1], opCode);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\t\tthrow savedException;\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t}\n\t\treturn result;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapIfNeededOverlayOp;\n\t}\n});\nSnapIfNeededOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapIfNeededOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapIfNeededOverlayOp.union = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapIfNeededOverlayOp.intersection = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapIfNeededOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapIfNeededOverlayOp.difference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport SnapIfNeededOverlayOp from '../operation/overlay/snap/SnapIfNeededOverlayOp';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport OverlayOp from '../operation/overlay/OverlayOp';\nexport default function InteriorPointArea() {\n\tthis.factory = null;\n\tthis.interiorPoint = null;\n\tthis.maxWidth = 0.0;\n\tlet g = arguments[0];\n\tthis.factory = g.getFactory();\n\tthis.add(g);\n}\nextend(InteriorPointArea.prototype, {\n\taddPolygon: function (geometry) {\n\t\tif (geometry.isEmpty()) return null;\n\t\tvar intPt = null;\n\t\tvar width = 0;\n\t\tvar bisector = this.horizontalBisector(geometry);\n\t\tif (bisector.getLength() === 0.0) {\n\t\t\twidth = 0;\n\t\t\tintPt = bisector.getCoordinate();\n\t\t} else {\n\t\t\tvar intersections = SnapIfNeededOverlayOp.overlayOp(bisector, geometry, OverlayOp.INTERSECTION);\n\t\t\tvar widestIntersection = this.widestGeometry(intersections);\n\t\t\twidth = widestIntersection.getEnvelopeInternal().getWidth();\n\t\t\tintPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\n\t\t}\n\t\tif (this.interiorPoint === null || width > this.maxWidth) {\n\t\t\tthis.interiorPoint = intPt;\n\t\t\tthis.maxWidth = width;\n\t\t}\n\t},\n\tgetInteriorPoint: function () {\n\t\treturn this.interiorPoint;\n\t},\n\twidestGeometry: function () {\n\t\tif (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tif (gc.isEmpty()) {\n\t\t\t\treturn gc;\n\t\t\t}\n\t\t\tvar widestGeometry = gc.getGeometryN(0);\n\t\t\tfor (var i = 1; i < gc.getNumGeometries(); i++) {\n\t\t\t\tif (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n\t\t\t\t\twidestGeometry = gc.getGeometryN(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn widestGeometry;\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tif (!(geometry instanceof GeometryCollection)) {\n\t\t\t\treturn geometry;\n\t\t\t}\n\t\t\treturn this.widestGeometry(geometry);\n\t\t}\n\t},\n\thorizontalBisector: function (geometry) {\n\t\tvar envelope = geometry.getEnvelopeInternal();\n\t\tvar bisectY = SafeBisectorFinder.getBisectorY(geometry);\n\t\treturn this.factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\n\t},\n\tadd: function (geom) {\n\t\tif (geom instanceof Polygon) {\n\t\t\tthis.addPolygon(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar gc = geom;\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointArea;\n\t}\n});\nInteriorPointArea.centre = function (envelope) {\n\treturn new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\n};\nInteriorPointArea.avg = function (a, b) {\n\treturn (a + b) / 2.0;\n};\nfunction SafeBisectorFinder() {\n\tthis.poly = null;\n\tthis.centreY = null;\n\tthis.hiY = Double.MAX_VALUE;\n\tthis.loY = -Double.MAX_VALUE;\n\tlet poly = arguments[0];\n\tthis.poly = poly;\n\tthis.hiY = poly.getEnvelopeInternal().getMaxY();\n\tthis.loY = poly.getEnvelopeInternal().getMinY();\n\tthis.centreY = InteriorPointArea.avg(this.loY, this.hiY);\n}\nextend(SafeBisectorFinder.prototype, {\n\tupdateInterval: function (y) {\n\t\tif (y <= this.centreY) {\n\t\t\tif (y > this.loY) this.loY = y;\n\t\t} else if (y > this.centreY) {\n\t\t\tif (y < this.hiY) {\n\t\t\t\tthis.hiY = y;\n\t\t\t}\n\t\t}\n\t},\n\tgetBisectorY: function () {\n\t\tthis.process(this.poly.getExteriorRing());\n\t\tfor (var i = 0; i < this.poly.getNumInteriorRing(); i++) {\n\t\t\tthis.process(this.poly.getInteriorRingN(i));\n\t\t}\n\t\tvar bisectY = InteriorPointArea.avg(this.hiY, this.loY);\n\t\treturn bisectY;\n\t},\n\tprocess: function (line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tfor (var i = 0; i < seq.size(); i++) {\n\t\t\tvar y = seq.getY(i);\n\t\t\tthis.updateInterval(y);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SafeBisectorFinder;\n\t}\n});\nSafeBisectorFinder.getBisectorY = function (poly) {\n\tvar finder = new SafeBisectorFinder(poly);\n\treturn finder.getBisectorY();\n};\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\n","import LineString from '../geom/LineString';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointLine() {\n\tthis.centroid = null;\n\tthis.minDistance = Double.MAX_VALUE;\n\tthis.interiorPoint = null;\n\tlet g = arguments[0];\n\tthis.centroid = g.getCentroid().getCoordinate();\n\tthis.addInterior(g);\n\tif (this.interiorPoint === null) this.addEndpoints(g);\n}\nextend(InteriorPointLine.prototype, {\n\taddEndpoints: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addEndpoints(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addEndpoints(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tthis.add(pts[0]);\n\t\t\tthis.add(pts[pts.length - 1]);\n\t\t}\n\t},\n\tgetInteriorPoint: function () {\n\t\treturn this.interiorPoint;\n\t},\n\taddInterior: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addInterior(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addInterior(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tfor (var i = 1; i < pts.length - 1; i++) {\n\t\t\t\tthis.add(pts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function (point) {\n\t\tvar dist = point.distance(this.centroid);\n\t\tif (dist < this.minDistance) {\n\t\t\tthis.interiorPoint = new Coordinate(point);\n\t\t\tthis.minDistance = dist;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointLine;\n\t}\n});\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointPoint() {\n\tthis.centroid = null;\n\tthis.minDistance = Double.MAX_VALUE;\n\tthis.interiorPoint = null;\n\tlet g = arguments[0];\n\tthis.centroid = g.getCentroid().getCoordinate();\n\tthis.add(g);\n}\nextend(InteriorPointPoint.prototype, {\n\tgetInteriorPoint: function () {\n\t\treturn this.interiorPoint;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.add(geom.getCoordinate());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet point = arguments[0];\n\t\t\tvar dist = point.distance(this.centroid);\n\t\t\tif (dist < this.minDistance) {\n\t\t\t\tthis.interiorPoint = new Coordinate(point);\n\t\t\t\tthis.minDistance = dist;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointPoint;\n\t}\n});\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChainSelectAction() {\n\tthis.tempEnv1 = new Envelope();\n\tthis.selectedSegment = new LineSegment();\n}\nextend(MonotoneChainSelectAction.prototype, {\n\tselect: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet seg = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tmc.getLineSegment(startIndex, this.selectedSegment);\n\t\t\tthis.select(this.selectedSegment);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainSelectAction;\n\t}\n});\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function NodeBase() {\n\tthis.items = new ArrayList();\n\tthis.subnode = [null, null];\n}\nextend(NodeBase.prototype, {\n\thasChildren: function () {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function () {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function (items) {\n\t\titems.addAll(this.items);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].addAllItems(items);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\tsize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this.items.size();\n\t},\n\taddAllItemsFromOverlapping: function (interval, resultItems) {\n\t\tif (interval !== null && !this.isSearchMatch(interval)) return null;\n\t\tresultItems.addAll(this.items);\n\t\tif (this.subnode[0] !== null) this.subnode[0].addAllItemsFromOverlapping(interval, resultItems);\n\t\tif (this.subnode[1] !== null) this.subnode[1].addAllItemsFromOverlapping(interval, resultItems);\n\t},\n\thasItems: function () {\n\t\treturn !this.items.isEmpty();\n\t},\n\tremove: function (itemInterval, item) {\n\t\tif (!this.isSearchMatch(itemInterval)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tfound = this.subnode[i].remove(itemInterval, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this.subnode[i].isPrunable()) this.subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this.items.remove(item);\n\t\treturn found;\n\t},\n\tgetItems: function () {\n\t\treturn this.items;\n\t},\n\tdepth: function () {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tvar sqd = this.subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tnodeSize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].nodeSize();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tadd: function (item) {\n\t\tthis.items.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (interval, centre) {\n\tvar subnodeIndex = -1;\n\tif (interval.min >= centre) subnodeIndex = 1;\n\tif (interval.max <= centre) subnodeIndex = 0;\n\treturn subnodeIndex;\n};\n","import extend from '../../../../../extend';\nexport default function Interval() {\n\tthis.min = null;\n\tthis.max = null;\n\tif (arguments.length === 0) {\n\t\tthis.min = 0.0;\n\t\tthis.max = 0.0;\n\t} else if (arguments.length === 1) {\n\t\tlet interval = arguments[0];\n\t\tthis.init(interval.min, interval.max);\n\t} else if (arguments.length === 2) {\n\t\tlet min = arguments[0], max = arguments[1];\n\t\tthis.init(min, max);\n\t}\n}\nextend(Interval.prototype, {\n\texpandToInclude: function (interval) {\n\t\tif (interval.max > this.max) this.max = interval.max;\n\t\tif (interval.min < this.min) this.min = interval.min;\n\t},\n\tgetWidth: function () {\n\t\treturn this.max - this.min;\n\t},\n\toverlaps: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet interval = arguments[0];\n\t\t\treturn this.overlaps(interval.min, interval.max);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\tif (this.min > max || this.max < min) return false;\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetMin: function () {\n\t\treturn this.min;\n\t},\n\ttoString: function () {\n\t\treturn \"[\" + this.min + \", \" + this.max + \"]\";\n\t},\n\tcontains: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Interval) {\n\t\t\t\tlet interval = arguments[0];\n\t\t\t\treturn this.contains(interval.min, interval.max);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn p >= this.min && p <= this.max;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\treturn min >= this.min && max <= this.max;\n\t\t}\n\t},\n\tinit: function (min, max) {\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t\tif (min > max) {\n\t\t\tthis.min = max;\n\t\t\tthis.max = min;\n\t\t}\n\t},\n\tgetMax: function () {\n\t\treturn this.max;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Interval;\n\t}\n});\n","export default function DoubleBits () { }\nDoubleBits.exponent = function (d) {\n  return CVTFWD(64, d) - 1023\n}\nDoubleBits.powerOf2 = function (exp) {\n  return Math.pow(2, exp)\n}\n\n/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n */\nfunction CVTFWD (NumW, Qty) {\n  var Sign\n  var Expo\n  var Mant\n  var Bin\n  var Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  }\n  var ExW = {\n    32: 8,\n    64: 11\n  }[NumW]\n\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0 // OK for +-0\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW]\n      if (Sign) {\n        Bin.d += 1 << (NumW / 4 - 1)\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW]\n    Mant = Math.abs(Qty)\n    while (Mant >= 2) {\n      Expo++\n      Mant /= 2\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--\n      Mant *= 2\n    }\n    if (Expo <= 0) {\n      Mant /= 2\n    }\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  return Expo\n}\n","import Interval from './Interval';\nimport extend from '../../../../../extend';\nimport DoubleBits from '../quadtree/DoubleBits';\nexport default function Key() {\n\tthis.pt = 0.0;\n\tthis.level = 0;\n\tthis.interval = null;\n\tlet interval = arguments[0];\n\tthis.computeKey(interval);\n}\nextend(Key.prototype, {\n\tgetInterval: function () {\n\t\treturn this.interval;\n\t},\n\tgetLevel: function () {\n\t\treturn this.level;\n\t},\n\tcomputeKey: function (itemInterval) {\n\t\tthis.level = Key.computeLevel(itemInterval);\n\t\tthis.interval = new Interval();\n\t\tthis.computeInterval(this.level, itemInterval);\n\t\twhile (!this.interval.contains(itemInterval)) {\n\t\t\tthis.level += 1;\n\t\t\tthis.computeInterval(this.level, itemInterval);\n\t\t}\n\t},\n\tcomputeInterval: function (level, itemInterval) {\n\t\tvar size = DoubleBits.powerOf2(level);\n\t\tthis.pt = Math.floor(itemInterval.getMin() / size) * size;\n\t\tthis.interval.init(this.pt, this.pt + size);\n\t},\n\tgetPoint: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Key;\n\t}\n});\nKey.computeLevel = function (interval) {\n\tvar dx = interval.getWidth();\n\tvar level = DoubleBits.exponent(dx) + 1;\n\treturn level;\n};\n","import NodeBase from './NodeBase';\nimport Interval from './Interval';\nimport extend from '../../../../../extend';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport Key from './Key';\nexport default function Node() {\n\tNodeBase.apply(this);\n\tthis.interval = null;\n\tthis.centre = null;\n\tthis.level = null;\n\tlet interval = arguments[0], level = arguments[1];\n\tthis.interval = interval;\n\tthis.level = level;\n\tthis.centre = (interval.getMin() + interval.getMax()) / 2;\n}\ninherits(Node, NodeBase);\nextend(Node.prototype, {\n\tgetInterval: function () {\n\t\treturn this.interval;\n\t},\n\tfind: function (searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this.centre);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this.subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this.subnode[subnodeIndex];\n\t\t\treturn node.find(searchInterval);\n\t\t}\n\t\treturn this;\n\t},\n\tinsert: function (node) {\n\t\tAssert.isTrue(this.interval === null || this.interval.contains(node.interval));\n\t\tvar index = NodeBase.getSubnodeIndex(node.interval, this.centre);\n\t\tif (node.level === this.level - 1) {\n\t\t\tthis.subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insert(node);\n\t\t\tthis.subnode[index] = childNode;\n\t\t}\n\t},\n\tisSearchMatch: function (itemInterval) {\n\t\treturn itemInterval.overlaps(this.interval);\n\t},\n\tgetSubnode: function (index) {\n\t\tif (this.subnode[index] === null) {\n\t\t\tthis.subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this.subnode[index];\n\t},\n\tgetNode: function (searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this.centre);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchInterval);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function (index) {\n\t\tvar min = 0.0;\n\t\tvar max = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tmin = this.interval.getMin();\n\t\t\t\tmax = this.centre;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tmin = this.centre;\n\t\t\t\tmax = this.interval.getMax();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar subInt = new Interval(min, max);\n\t\tvar node = new Node(subInt, this.level - 1);\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.createNode = function (itemInterval) {\n\tvar key = new Key(itemInterval);\n\tvar node = new Node(key.getInterval(), key.getLevel());\n\treturn node;\n};\nNode.createExpanded = function (node, addInterval) {\n\tvar expandInt = new Interval(addInterval);\n\tif (node !== null) expandInt.expandToInclude(node.interval);\n\tvar largerNode = Node.createNode(expandInt);\n\tif (node !== null) largerNode.insert(node);\n\treturn largerNode;\n};\n","import extend from '../../../../../extend';\nimport DoubleBits from './DoubleBits';\nexport default function IntervalSize() {}\nextend(IntervalSize.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalSize;\n\t}\n});\nIntervalSize.isZeroWidth = function (min, max) {\n\tvar width = max - min;\n\tif (width === 0.0) return true;\n\tvar maxAbs = Math.max(Math.abs(min), Math.abs(max));\n\tvar scaledInterval = width / maxAbs;\n\tvar level = DoubleBits.exponent(scaledInterval);\n\treturn level <= IntervalSize.MIN_BINARY_EXPONENT;\n};\nIntervalSize.MIN_BINARY_EXPONENT = -50;\n","import NodeBase from './NodeBase';\nimport Node from './Node';\nimport extend from '../../../../../extend';\nimport IntervalSize from '../quadtree/IntervalSize';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function Root() {\n\tNodeBase.apply(this);\n}\ninherits(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function (itemInterval, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemInterval, Root.origin);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.subnode[index];\n\t\tif (node === null || !node.getInterval().contains(itemInterval)) {\n\t\t\tvar largerNode = Node.createExpanded(node, itemInterval);\n\t\t\tthis.subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this.subnode[index], itemInterval, item);\n\t},\n\tisSearchMatch: function (interval) {\n\t\treturn true;\n\t},\n\tinsertContained: function (tree, itemInterval, item) {\n\t\tAssert.isTrue(tree.getInterval().contains(itemInterval));\n\t\tvar isZeroArea = IntervalSize.isZeroWidth(itemInterval.getMin(), itemInterval.getMax());\n\t\tvar node = null;\n\t\tif (isZeroArea) node = tree.find(itemInterval); else node = tree.getNode(itemInterval);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Root;\n\t}\n});\nRoot.origin = 0.0;\n","import Root from './Root';\nimport Interval from './Interval';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function Bintree() {\n\tthis.root = null;\n\tthis.minExtent = 1.0;\n\tthis.root = new Root();\n}\nextend(Bintree.prototype, {\n\tsize: function () {\n\t\tif (this.root !== null) return this.root.size();\n\t\treturn 0;\n\t},\n\tinsert: function (itemInterval, item) {\n\t\tthis.collectStats(itemInterval);\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this.minExtent);\n\t\tthis.root.insert(insertInterval, item);\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\treturn this.query(new Interval(x, x));\n\t\t\t} else if (arguments[0] instanceof Interval) {\n\t\t\t\tlet interval = arguments[0];\n\t\t\t\tvar foundItems = new ArrayList();\n\t\t\t\tthis.query(interval, foundItems);\n\t\t\t\treturn foundItems;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet interval = arguments[0], foundItems = arguments[1];\n\t\t\tthis.root.addAllItemsFromOverlapping(interval, foundItems);\n\t\t}\n\t},\n\titerator: function () {\n\t\tvar foundItems = new ArrayList();\n\t\tthis.root.addAllItems(foundItems);\n\t\treturn foundItems.iterator();\n\t},\n\tremove: function (itemInterval, item) {\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this.minExtent);\n\t\treturn this.root.remove(insertInterval, item);\n\t},\n\tcollectStats: function (interval) {\n\t\tvar del = interval.getWidth();\n\t\tif (del < this.minExtent && del > 0.0) this.minExtent = del;\n\t},\n\tdepth: function () {\n\t\tif (this.root !== null) return this.root.depth();\n\t\treturn 0;\n\t},\n\tnodeSize: function () {\n\t\tif (this.root !== null) return this.root.nodeSize();\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Bintree;\n\t}\n});\nBintree.ensureExtent = function (itemInterval, minExtent) {\n\tvar min = itemInterval.getMin();\n\tvar max = itemInterval.getMax();\n\tif (min !== max) return itemInterval;\n\tif (min === max) {\n\t\tmin = min - minExtent / 2.0;\n\t\tmax = min + minExtent / 2.0;\n\t}\n\treturn new Interval(min, max);\n};\n","import extend from '../../../../extend';\nexport default function PointInRing() {}\nextend(PointInRing.prototype, {\n\tisInside: function (pt) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointInRing;\n\t}\n});\n","import MonotoneChainSelectAction from '../index/chain/MonotoneChainSelectAction';\nimport Bintree from '../index/bintree/Bintree';\nimport Interval from '../index/bintree/Interval';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport RobustDeterminant from './RobustDeterminant';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport PointInRing from './PointInRing';\nexport default function MCPointInRing() {\n\tthis.ring = null;\n\tthis.tree = null;\n\tthis.crossings = 0;\n\tthis.interval = new Interval();\n\tlet ring = arguments[0];\n\tthis.ring = ring;\n\tthis.buildIndex();\n}\nextend(MCPointInRing.prototype, {\n\ttestLineSegment: function (p, seg) {\n\t\tvar xInt = null;\n\t\tvar x1 = null;\n\t\tvar y1 = null;\n\t\tvar x2 = null;\n\t\tvar y2 = null;\n\t\tvar p1 = seg.p0;\n\t\tvar p2 = seg.p1;\n\t\tx1 = p1.x - p.x;\n\t\ty1 = p1.y - p.y;\n\t\tx2 = p2.x - p.x;\n\t\ty2 = p2.y - p.y;\n\t\tif (y1 > 0 && y2 <= 0 || y2 > 0 && y1 <= 0) {\n\t\t\txInt = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2) / (y2 - y1);\n\t\t\tif (0.0 < xInt) {\n\t\t\t\tthis.crossings++;\n\t\t\t}\n\t\t}\n\t},\n\tbuildIndex: function () {\n\t\tthis.tree = new Bintree();\n\t\tvar pts = CoordinateArrays.removeRepeatedPoints(this.ring.getCoordinates());\n\t\tvar mcList = MonotoneChainBuilder.getChains(pts);\n\t\tfor (var i = 0; i < mcList.size(); i++) {\n\t\t\tvar mc = mcList.get(i);\n\t\t\tvar mcEnv = mc.getEnvelope();\n\t\t\tthis.interval.min = mcEnv.getMinY();\n\t\t\tthis.interval.max = mcEnv.getMaxY();\n\t\t\tthis.tree.insert(this.interval, mc);\n\t\t}\n\t},\n\ttestMonotoneChain: function (rayEnv, mcSelecter, mc) {\n\t\tmc.select(rayEnv, mcSelecter);\n\t},\n\tisInside: function (pt) {\n\t\tthis.crossings = 0;\n\t\tvar rayEnv = new Envelope(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, pt.y, pt.y);\n\t\tthis.interval.min = pt.y;\n\t\tthis.interval.max = pt.y;\n\t\tvar segs = this.tree.query(this.interval);\n\t\tvar mcSelecter = new MCSelecter(this, pt);\n\t\tfor (var i = segs.iterator(); i.hasNext(); ) {\n\t\t\tvar mc = i.next();\n\t\t\tthis.testMonotoneChain(rayEnv, mcSelecter, mc);\n\t\t}\n\t\tif (this.crossings % 2 === 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointInRing];\n\t},\n\tgetClass: function () {\n\t\treturn MCPointInRing;\n\t}\n});\nfunction MCSelecter() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis.mcp = null;\n\tthis.p = null;\n\tlet mcp = arguments[0], p = arguments[1];\n\tthis.mcp = mcp;\n\tthis.p = p;\n}\ninherits(MCSelecter, MonotoneChainSelectAction);\nextend(MCSelecter.prototype, {\n\tselect: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ls = arguments[0];\n\t\t\tthis.mcp.testLineSegment(this.p, ls);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCSelecter;\n\t}\n});\nMCPointInRing.MCSelecter = MCSelecter;\n","import CGAlgorithms from './CGAlgorithms';\nimport extend from '../../../../extend';\nexport default function Angle() {}\nextend(Angle.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Angle;\n\t}\n});\nAngle.toDegrees = function (radians) {\n\treturn radians * 180 / Math.PI;\n};\nAngle.normalize = function (angle) {\n\twhile (angle > Math.PI) angle -= Angle.PI_TIMES_2;\n\twhile (angle <= -Math.PI) angle += Angle.PI_TIMES_2;\n\treturn angle;\n};\nAngle.angle = function () {\n\tif (arguments.length === 1) {\n\t\tlet p = arguments[0];\n\t\treturn Math.atan2(p.y, p.x);\n\t} else if (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\treturn Math.atan2(dy, dx);\n\t}\n};\nAngle.isAcute = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod > 0;\n};\nAngle.isObtuse = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod < 0;\n};\nAngle.interiorAngle = function (p0, p1, p2) {\n\tvar anglePrev = Angle.angle(p1, p0);\n\tvar angleNext = Angle.angle(p1, p2);\n\treturn Math.abs(angleNext - anglePrev);\n};\nAngle.normalizePositive = function (angle) {\n\tif (angle < 0.0) {\n\t\twhile (angle < 0.0) angle += Angle.PI_TIMES_2;\n\t\tif (angle >= Angle.PI_TIMES_2) angle = 0.0;\n\t} else {\n\t\twhile (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2;\n\t\tif (angle < 0.0) angle = 0.0;\n\t}\n\treturn angle;\n};\nAngle.angleBetween = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\treturn Angle.diff(a1, a2);\n};\nAngle.diff = function (ang1, ang2) {\n\tvar delAngle = null;\n\tif (ang1 < ang2) {\n\t\tdelAngle = ang2 - ang1;\n\t} else {\n\t\tdelAngle = ang1 - ang2;\n\t}\n\tif (delAngle > Math.PI) {\n\t\tdelAngle = 2 * Math.PI - delAngle;\n\t}\n\treturn delAngle;\n};\nAngle.toRadians = function (angleDegrees) {\n\treturn angleDegrees * Math.PI / 180.0;\n};\nAngle.getTurn = function (ang1, ang2) {\n\tvar crossproduct = Math.sin(ang2 - ang1);\n\tif (crossproduct > 0) {\n\t\treturn Angle.COUNTERCLOCKWISE;\n\t}\n\tif (crossproduct < 0) {\n\t\treturn Angle.CLOCKWISE;\n\t}\n\treturn Angle.NONE;\n};\nAngle.angleBetweenOriented = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\tvar angDel = a2 - a1;\n\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n\treturn angDel;\n};\nAngle.PI_TIMES_2 = 2.0 * Math.PI;\nAngle.PI_OVER_2 = Math.PI / 2.0;\nAngle.PI_OVER_4 = Math.PI / 4.0;\nAngle.COUNTERCLOCKWISE = CGAlgorithms.COUNTERCLOCKWISE;\nAngle.CLOCKWISE = CGAlgorithms.CLOCKWISE;\nAngle.NONE = CGAlgorithms.COLLINEAR;\n","import Coordinate from './Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Angle from '../algorithm/Angle';\nimport HCoordinate from '../algorithm/HCoordinate';\nexport default function Triangle() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.p2 = null;\n\tlet p0 = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\tthis.p0 = p0;\n\tthis.p1 = p1;\n\tthis.p2 = p2;\n}\nextend(Triangle.prototype, {\n\tarea: function () {\n\t\treturn Triangle.area(this.p0, this.p1, this.p2);\n\t},\n\tsignedArea: function () {\n\t\treturn Triangle.signedArea(this.p0, this.p1, this.p2);\n\t},\n\tinterpolateZ: function (p) {\n\t\tif (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\n\t\treturn Triangle.interpolateZ(p, this.p0, this.p1, this.p2);\n\t},\n\tlongestSideLength: function () {\n\t\treturn Triangle.longestSideLength(this.p0, this.p1, this.p2);\n\t},\n\tisAcute: function () {\n\t\treturn Triangle.isAcute(this.p0, this.p1, this.p2);\n\t},\n\tcircumcentre: function () {\n\t\treturn Triangle.circumcentre(this.p0, this.p1, this.p2);\n\t},\n\tarea3D: function () {\n\t\treturn Triangle.area3D(this.p0, this.p1, this.p2);\n\t},\n\tcentroid: function () {\n\t\treturn Triangle.centroid(this.p0, this.p1, this.p2);\n\t},\n\tinCentre: function () {\n\t\treturn Triangle.inCentre(this.p0, this.p1, this.p2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Triangle;\n\t}\n});\nTriangle.area = function (a, b, c) {\n\treturn Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\n};\nTriangle.signedArea = function (a, b, c) {\n\treturn ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\n};\nTriangle.det = function (m00, m01, m10, m11) {\n\treturn m00 * m11 - m01 * m10;\n};\nTriangle.interpolateZ = function (p, v0, v1, v2) {\n\tvar x0 = v0.x;\n\tvar y0 = v0.y;\n\tvar a = v1.x - x0;\n\tvar b = v2.x - x0;\n\tvar c = v1.y - y0;\n\tvar d = v2.y - y0;\n\tvar det = a * d - b * c;\n\tvar dx = p.x - x0;\n\tvar dy = p.y - y0;\n\tvar t = (d * dx - b * dy) / det;\n\tvar u = (-c * dx + a * dy) / det;\n\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\treturn z;\n};\nTriangle.longestSideLength = function (a, b, c) {\n\tvar lenAB = a.distance(b);\n\tvar lenBC = b.distance(c);\n\tvar lenCA = c.distance(a);\n\tvar maxLen = lenAB;\n\tif (lenBC > maxLen) maxLen = lenBC;\n\tif (lenCA > maxLen) maxLen = lenCA;\n\treturn maxLen;\n};\nTriangle.isAcute = function (a, b, c) {\n\tif (!Angle.isAcute(a, b, c)) return false;\n\tif (!Angle.isAcute(b, c, a)) return false;\n\tif (!Angle.isAcute(c, a, b)) return false;\n\treturn true;\n};\nTriangle.circumcentre = function (a, b, c) {\n\tvar cx = c.x;\n\tvar cy = c.y;\n\tvar ax = a.x - cx;\n\tvar ay = a.y - cy;\n\tvar bx = b.x - cx;\n\tvar by = b.y - cy;\n\tvar denom = 2 * Triangle.det(ax, ay, bx, by);\n\tvar numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n\tvar numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n\tvar ccx = cx - numx / denom;\n\tvar ccy = cy + numy / denom;\n\treturn new Coordinate(ccx, ccy);\n};\nTriangle.perpendicularBisector = function (a, b) {\n\tvar dx = b.x - a.x;\n\tvar dy = b.y - a.y;\n\tvar l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n\tvar l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n\treturn new HCoordinate(l1, l2);\n};\nTriangle.angleBisector = function (a, b, c) {\n\tvar len0 = b.distance(a);\n\tvar len2 = b.distance(c);\n\tvar frac = len0 / (len0 + len2);\n\tvar dx = c.x - a.x;\n\tvar dy = c.y - a.y;\n\tvar splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n\treturn splitPt;\n};\nTriangle.area3D = function (a, b, c) {\n\tvar ux = b.x - a.x;\n\tvar uy = b.y - a.y;\n\tvar uz = b.z - a.z;\n\tvar vx = c.x - a.x;\n\tvar vy = c.y - a.y;\n\tvar vz = c.z - a.z;\n\tvar crossx = uy * vz - uz * vy;\n\tvar crossy = uz * vx - ux * vz;\n\tvar crossz = ux * vy - uy * vx;\n\tvar absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n\tvar area3D = Math.sqrt(absSq) / 2;\n\treturn area3D;\n};\nTriangle.centroid = function (a, b, c) {\n\tvar x = (a.x + b.x + c.x) / 3;\n\tvar y = (a.y + b.y + c.y) / 3;\n\treturn new Coordinate(x, y);\n};\nTriangle.inCentre = function (a, b, c) {\n\tvar len0 = b.distance(c);\n\tvar len1 = a.distance(c);\n\tvar len2 = a.distance(b);\n\tvar circum = len0 + len1 + len2;\n\tvar inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n\tvar inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n\treturn new Coordinate(inCentreX, inCentreY);\n};\n","import Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Angle from './Angle';\nimport Assert from '../util/Assert';\nimport Triangle from '../geom/Triangle';\nexport default function MinimumBoundingCircle() {\n\tthis.input = null;\n\tthis.extremalPts = null;\n\tthis.centre = null;\n\tthis.radius = 0.0;\n\tlet geom = arguments[0];\n\tthis.input = geom;\n}\nextend(MinimumBoundingCircle.prototype, {\n\tgetRadius: function () {\n\t\tthis.compute();\n\t\treturn this.radius;\n\t},\n\tgetDiameter: function () {\n\t\tthis.compute();\n\t\tswitch (this.extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this.input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this.input.getFactory().createPoint(this.centre);\n\t\t}\n\t\tvar p0 = this.extremalPts[0];\n\t\tvar p1 = this.extremalPts[1];\n\t\treturn this.input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetExtremalPoints: function () {\n\t\tthis.compute();\n\t\treturn this.extremalPts;\n\t},\n\tcomputeCirclePoints: function () {\n\t\tif (this.input.isEmpty()) {\n\t\t\tthis.extremalPts = new Array(0).fill(null);\n\t\t\treturn null;\n\t\t}\n\t\tif (this.input.getNumPoints() === 1) {\n\t\t\tvar pts = this.input.getCoordinates();\n\t\t\tthis.extremalPts = [new Coordinate(pts[0])];\n\t\t\treturn null;\n\t\t}\n\t\tvar convexHull = this.input.convexHull();\n\t\tvar hullPts = convexHull.getCoordinates();\n\t\tvar pts = hullPts;\n\t\tif (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n\t\t\tpts = new Array(hullPts.length - 1).fill(null);\n\t\t\tCoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\n\t\t}\n\t\tif (pts.length <= 2) {\n\t\t\tthis.extremalPts = CoordinateArrays.copyDeep(pts);\n\t\t\treturn null;\n\t\t}\n\t\tvar P = MinimumBoundingCircle.lowestPoint(pts);\n\t\tvar Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\n\t\t\tif (Angle.isObtuse(P, R, Q)) {\n\t\t\t\tthis.extremalPts = [new Coordinate(P), new Coordinate(Q)];\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, P, Q)) {\n\t\t\t\tP = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, Q, P)) {\n\t\t\t\tQ = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\n\t},\n\tcompute: function () {\n\t\tif (this.extremalPts !== null) return null;\n\t\tthis.computeCirclePoints();\n\t\tthis.computeCentre();\n\t\tif (this.centre !== null) this.radius = this.centre.distance(this.extremalPts[0]);\n\t},\n\tgetFarthestPoints: function () {\n\t\tthis.compute();\n\t\tswitch (this.extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this.input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this.input.getFactory().createPoint(this.centre);\n\t\t}\n\t\tvar p0 = this.extremalPts[0];\n\t\tvar p1 = this.extremalPts[this.extremalPts.length - 1];\n\t\treturn this.input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetCircle: function () {\n\t\tthis.compute();\n\t\tif (this.centre === null) return this.input.getFactory().createPolygon();\n\t\tvar centrePoint = this.input.getFactory().createPoint(this.centre);\n\t\tif (this.radius === 0.0) return centrePoint;\n\t\treturn centrePoint.buffer(this.radius);\n\t},\n\tgetCentre: function () {\n\t\tthis.compute();\n\t\treturn this.centre;\n\t},\n\tcomputeCentre: function () {\n\t\tswitch (this.extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\tthis.centre = null;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.centre = this.extremalPts[0];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.centre = new Coordinate((this.extremalPts[0].x + this.extremalPts[1].x) / 2.0, (this.extremalPts[0].y + this.extremalPts[1].y) / 2.0);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.centre = Triangle.circumcentre(this.extremalPts[0], this.extremalPts[1], this.extremalPts[2]);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimumBoundingCircle;\n\t}\n});\nMinimumBoundingCircle.pointWitMinAngleWithX = function (pts, P) {\n\tvar minSin = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tvar dx = p.x - P.x;\n\t\tvar dy = p.y - P.y;\n\t\tif (dy < 0) dy = -dy;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar sin = dy / len;\n\t\tif (sin < minSin) {\n\t\t\tminSin = sin;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\nMinimumBoundingCircle.lowestPoint = function (pts) {\n\tvar min = pts[0];\n\tfor (var i = 1; i < pts.length; i++) {\n\t\tif (pts[i].y < min.y) min = pts[i];\n\t}\n\treturn min;\n};\nMinimumBoundingCircle.pointWithMinAngleWithSegment = function (pts, P, Q) {\n\tvar minAng = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tif (p === Q) continue;\n\t\tvar ang = Angle.angleBetween(P, p, Q);\n\t\tif (ang < minAng) {\n\t\t\tminAng = ang;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\n","import Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport ConvexHull from './ConvexHull';\nexport default function MinimumDiameter() {\n\tthis.inputGeom = null;\n\tthis.isConvex = null;\n\tthis.convexHullPts = null;\n\tthis.minBaseSeg = new LineSegment();\n\tthis.minWidthPt = null;\n\tthis.minPtIndex = null;\n\tthis.minWidth = 0.0;\n\tif (arguments.length === 1) {\n\t\tlet inputGeom = arguments[0];\n\t\tMinimumDiameter.call(this, inputGeom, false);\n\t} else if (arguments.length === 2) {\n\t\tlet inputGeom = arguments[0], isConvex = arguments[1];\n\t\tthis.inputGeom = inputGeom;\n\t\tthis.isConvex = isConvex;\n\t}\n}\nextend(MinimumDiameter.prototype, {\n\tgetWidthCoordinate: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this.minWidthPt;\n\t},\n\tgetSupportingSegment: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this.inputGeom.getFactory().createLineString([this.minBaseSeg.p0, this.minBaseSeg.p1]);\n\t},\n\tgetDiameter: function () {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this.minWidthPt === null) return this.inputGeom.getFactory().createLineString(null);\n\t\tvar basePt = this.minBaseSeg.project(this.minWidthPt);\n\t\treturn this.inputGeom.getFactory().createLineString([basePt, this.minWidthPt]);\n\t},\n\tcomputeWidthConvex: function (convexGeom) {\n\t\tif (convexGeom instanceof Polygon) this.convexHullPts = convexGeom.getExteriorRing().getCoordinates(); else this.convexHullPts = convexGeom.getCoordinates();\n\t\tif (this.convexHullPts.length === 0) {\n\t\t\tthis.minWidth = 0.0;\n\t\t\tthis.minWidthPt = null;\n\t\t\tthis.minBaseSeg = null;\n\t\t} else if (this.convexHullPts.length === 1) {\n\t\t\tthis.minWidth = 0.0;\n\t\t\tthis.minWidthPt = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p0 = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p1 = this.convexHullPts[0];\n\t\t} else if (this.convexHullPts.length === 2 || this.convexHullPts.length === 3) {\n\t\t\tthis.minWidth = 0.0;\n\t\t\tthis.minWidthPt = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p0 = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p1 = this.convexHullPts[1];\n\t\t} else this.computeConvexRingMinDiameter(this.convexHullPts);\n\t},\n\tcomputeConvexRingMinDiameter: function (pts) {\n\t\tthis.minWidth = Double.MAX_VALUE;\n\t\tvar currMaxIndex = 1;\n\t\tvar seg = new LineSegment();\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tseg.p0 = pts[i];\n\t\t\tseg.p1 = pts[i + 1];\n\t\t\tcurrMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\n\t\t}\n\t},\n\tcomputeMinimumDiameter: function () {\n\t\tif (this.minWidthPt !== null) return null;\n\t\tif (this.isConvex) this.computeWidthConvex(this.inputGeom); else {\n\t\t\tvar convexGeom = new ConvexHull(this.inputGeom).getConvexHull();\n\t\t\tthis.computeWidthConvex(convexGeom);\n\t\t}\n\t},\n\tgetLength: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this.minWidth;\n\t},\n\tfindMaxPerpDistance: function (pts, seg, startIndex) {\n\t\tvar maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\n\t\tvar nextPerpDistance = maxPerpDistance;\n\t\tvar maxIndex = startIndex;\n\t\tvar nextIndex = maxIndex;\n\t\twhile (nextPerpDistance >= maxPerpDistance) {\n\t\t\tmaxPerpDistance = nextPerpDistance;\n\t\t\tmaxIndex = nextIndex;\n\t\t\tnextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\n\t\t\tnextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\n\t\t}\n\t\tif (maxPerpDistance < this.minWidth) {\n\t\t\tthis.minPtIndex = maxIndex;\n\t\t\tthis.minWidth = maxPerpDistance;\n\t\t\tthis.minWidthPt = pts[this.minPtIndex];\n\t\t\tthis.minBaseSeg = new LineSegment(seg);\n\t\t}\n\t\treturn maxIndex;\n\t},\n\tgetMinimumRectangle: function () {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this.minWidth === 0.0) {\n\t\t\tif (this.minBaseSeg.p0.equals2D(this.minBaseSeg.p1)) {\n\t\t\t\treturn this.inputGeom.getFactory().createPoint(this.minBaseSeg.p0);\n\t\t\t}\n\t\t\treturn this.minBaseSeg.toGeometry(this.inputGeom.getFactory());\n\t\t}\n\t\tvar dx = this.minBaseSeg.p1.x - this.minBaseSeg.p0.x;\n\t\tvar dy = this.minBaseSeg.p1.y - this.minBaseSeg.p0.y;\n\t\tvar minPara = Double.MAX_VALUE;\n\t\tvar maxPara = -Double.MAX_VALUE;\n\t\tvar minPerp = Double.MAX_VALUE;\n\t\tvar maxPerp = -Double.MAX_VALUE;\n\t\tfor (var i = 0; i < this.convexHullPts.length; i++) {\n\t\t\tvar paraC = MinimumDiameter.computeC(dx, dy, this.convexHullPts[i]);\n\t\t\tif (paraC > maxPara) maxPara = paraC;\n\t\t\tif (paraC < minPara) minPara = paraC;\n\t\t\tvar perpC = MinimumDiameter.computeC(-dy, dx, this.convexHullPts[i]);\n\t\t\tif (perpC > maxPerp) maxPerp = perpC;\n\t\t\tif (perpC < minPerp) minPerp = perpC;\n\t\t}\n\t\tvar maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\n\t\tvar minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\n\t\tvar maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\n\t\tvar minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\n\t\tvar p0 = maxParaLine.lineIntersection(maxPerpLine);\n\t\tvar p1 = minParaLine.lineIntersection(maxPerpLine);\n\t\tvar p2 = minParaLine.lineIntersection(minPerpLine);\n\t\tvar p3 = maxParaLine.lineIntersection(minPerpLine);\n\t\tvar shell = this.inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\n\t\treturn this.inputGeom.getFactory().createPolygon(shell, null);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimumDiameter;\n\t}\n});\nMinimumDiameter.nextIndex = function (pts, index) {\n\tindex++;\n\tif (index >= pts.length) index = 0;\n\treturn index;\n};\nMinimumDiameter.computeC = function (a, b, p) {\n\treturn a * p.y - b * p.x;\n};\nMinimumDiameter.getMinimumDiameter = function (geom) {\n\treturn new MinimumDiameter(geom).getDiameter();\n};\nMinimumDiameter.getMinimumRectangle = function (geom) {\n\treturn new MinimumDiameter(geom).getMinimumRectangle();\n};\nMinimumDiameter.computeSegmentForLine = function (a, b, c) {\n\tvar p0 = null;\n\tvar p1 = null;\n\tif (Math.abs(b) > Math.abs(a)) {\n\t\tp0 = new Coordinate(0.0, c / b);\n\t\tp1 = new Coordinate(1.0, c / b - a / b);\n\t} else {\n\t\tp0 = new Coordinate(c / a, 0.0);\n\t\tp1 = new Coordinate(c / a - b / a, 1.0);\n\t}\n\treturn new LineSegment(p0, p1);\n};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport LineSegment from '../geom/LineSegment';\nimport inherits from '../../../../inherits';\nexport default function Densifier() {\n\tthis.inputGeom = null;\n\tthis.distanceTolerance = null;\n\tlet inputGeom = arguments[0];\n\tthis.inputGeom = inputGeom;\n}\nextend(Densifier.prototype, {\n\tgetResultGeometry: function () {\n\t\treturn new DensifyTransformer(this.distanceTolerance).transform(this.inputGeom);\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Densifier;\n\t}\n});\nDensifier.densifyPoints = function (pts, distanceTolerance, precModel) {\n\tvar seg = new LineSegment();\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[i + 1];\n\t\tcoordList.add(seg.p0, false);\n\t\tvar len = seg.getLength();\n\t\tvar densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\n\t\tif (densifiedSegCount > 1) {\n\t\t\tvar densifiedSegLen = len / densifiedSegCount;\n\t\t\tfor (var j = 1; j < densifiedSegCount; j++) {\n\t\t\t\tvar segFract = j * densifiedSegLen / len;\n\t\t\t\tvar p = seg.pointAlong(segFract);\n\t\t\t\tprecModel.makePrecise(p);\n\t\t\t\tcoordList.add(p, false);\n\t\t\t}\n\t\t}\n\t}\n\tcoordList.add(pts[pts.length - 1], false);\n\treturn coordList.toCoordinateArray();\n};\nDensifier.densify = function (geom, distanceTolerance) {\n\tvar densifier = new Densifier(geom);\n\tdensifier.setDistanceTolerance(distanceTolerance);\n\treturn densifier.getResultGeometry();\n};\nfunction DensifyTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.distanceTolerance = null;\n\tlet distanceTolerance = arguments[0];\n\tthis.distanceTolerance = distanceTolerance;\n}\ninherits(DensifyTransformer, GeometryTransformer);\nextend(DensifyTransformer.prototype, {\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformPolygon: function (geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn roughGeom;\n\t\t}\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\n\t\tif (parent instanceof LineString && newPts.length === 1) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t}\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tcreateValidArea: function (roughAreaGeom) {\n\t\treturn roughAreaGeom.buffer(0.0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DensifyTransformer;\n\t}\n});\nDensifier.DensifyTransformer = DensifyTransformer;\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\nimport extend from '../../../../extend';\nimport Quadrant from '../geomgraph/Quadrant';\nimport Assert from '../util/Assert';\nexport default function HalfEdge() {\n\tthis._orig = null;\n\tthis._sym = null;\n\tthis._next = null;\n\tlet orig = arguments[0];\n\tthis._orig = orig;\n}\nextend(HalfEdge.prototype, {\n\tfind: function (dest) {\n\t\tvar oNext = this;\n\t\tdo {\n\t\t\tif (oNext === null) return null;\n\t\t\tif (oNext.dest().equals2D(dest)) return oNext;\n\t\t\toNext = oNext.oNext();\n\t\t} while (oNext !== this);\n\t\treturn null;\n\t},\n\tdest: function () {\n\t\treturn this._sym._orig;\n\t},\n\toNext: function () {\n\t\treturn this._sym._next;\n\t},\n\tinsert: function (e) {\n\t\tif (this.oNext() === this) {\n\t\t\tthis.insertAfter(e);\n\t\t\treturn null;\n\t\t}\n\t\tvar ecmp = this.compareTo(e);\n\t\tvar ePrev = this;\n\t\tdo {\n\t\t\tvar oNext = ePrev.oNext();\n\t\t\tvar cmp = oNext.compareTo(e);\n\t\t\tif (cmp !== ecmp || oNext === this) {\n\t\t\t\tePrev.insertAfter(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tePrev = oNext;\n\t\t} while (ePrev !== this);\n\t\tAssert.shouldNeverReachHere();\n\t},\n\tinsertAfter: function (e) {\n\t\tAssert.equals(this._orig, e.orig());\n\t\tvar save = this.oNext();\n\t\tthis._sym.setNext(e);\n\t\te.sym().setNext(save);\n\t},\n\tdegree: function () {\n\t\tvar degree = 0;\n\t\tvar e = this;\n\t\tdo {\n\t\t\tdegree++;\n\t\t\te = e.oNext();\n\t\t} while (e !== this);\n\t\treturn degree;\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\treturn this._orig.equals2D(p0) && this._sym._orig.equals(p1);\n\t\t}\n\t},\n\tdeltaY: function () {\n\t\treturn this._sym._orig.y - this._orig.y;\n\t},\n\tsym: function () {\n\t\treturn this._sym;\n\t},\n\tprev: function () {\n\t\treturn this._sym.next()._sym;\n\t},\n\tcompareAngularDirection: function (e) {\n\t\tvar dx = this.deltaX();\n\t\tvar dy = this.deltaY();\n\t\tvar dx2 = e.deltaX();\n\t\tvar dy2 = e.deltaY();\n\t\tif (dx === dx2 && dy === dy2) return 0;\n\t\tvar quadrant = Quadrant.quadrant(dx, dy);\n\t\tvar quadrant2 = Quadrant.quadrant(dx2, dy2);\n\t\tif (quadrant > quadrant2) return 1;\n\t\tif (quadrant < quadrant2) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e._orig, e.dest(), this.dest());\n\t},\n\tprevNode: function () {\n\t\tvar e = this;\n\t\twhile (e.degree() === 2) {\n\t\t\te = e.prev();\n\t\t\tif (e === this) return null;\n\t\t}\n\t\treturn e;\n\t},\n\tcompareTo: function (obj) {\n\t\tvar e = obj;\n\t\tvar comp = this.compareAngularDirection(e);\n\t\treturn comp;\n\t},\n\tnext: function () {\n\t\treturn this._next;\n\t},\n\tsetSym: function (e) {\n\t\tthis._sym = e;\n\t},\n\torig: function () {\n\t\treturn this._orig;\n\t},\n\ttoString: function () {\n\t\treturn \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\n\t},\n\tsetNext: function (e) {\n\t\tthis._next = e;\n\t},\n\tinit: function (e) {\n\t\tthis.setSym(e);\n\t\te.setSym(this);\n\t\tthis.setNext(e);\n\t\te.setNext(this);\n\t},\n\tdeltaX: function () {\n\t\treturn this._sym._orig.x - this._orig.x;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HalfEdge;\n\t}\n});\nHalfEdge.init = function (e0, e1) {\n\tif (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\n\te0.init(e1);\n\treturn e0;\n};\nHalfEdge.create = function (p0, p1) {\n\tvar e0 = new HalfEdge(p0);\n\tvar e1 = new HalfEdge(p1);\n\te0.init(e1);\n\treturn e0;\n};\n","import extend from '../../../../extend';\nimport HalfEdge from './HalfEdge';\nimport inherits from '../../../../inherits';\nexport default function MarkHalfEdge() {\n\tthis._isMarked = false;\n\tlet orig = arguments[0];\n\tHalfEdge.call(this, orig);\n}\ninherits(MarkHalfEdge, HalfEdge);\nextend(MarkHalfEdge.prototype, {\n\tmark: function () {\n\t\tthis._isMarked = true;\n\t},\n\tsetMark: function (isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tisMarked: function () {\n\t\treturn this._isMarked;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MarkHalfEdge;\n\t}\n});\nMarkHalfEdge.setMarkBoth = function (e, isMarked) {\n\te.setMark(isMarked);\n\te.sym().setMark(isMarked);\n};\nMarkHalfEdge.isMarked = function (e) {\n\treturn e.isMarked();\n};\nMarkHalfEdge.setMark = function (e, isMarked) {\n\te.setMark(isMarked);\n};\nMarkHalfEdge.markBoth = function (e) {\n\te.mark();\n\te.sym().mark();\n};\nMarkHalfEdge.mark = function (e) {\n\te.mark();\n};\n","import HashMap from '../../../../java/util/HashMap';\nimport extend from '../../../../extend';\nimport HalfEdge from './HalfEdge';\nexport default function EdgeGraph() {\n\tthis.vertexMap = new HashMap();\n}\nextend(EdgeGraph.prototype, {\n\tinsert: function (orig, dest, eAdj) {\n\t\tvar e = this.create(orig, dest);\n\t\tif (eAdj !== null) {\n\t\t\teAdj.insert(e);\n\t\t} else {\n\t\t\tthis.vertexMap.put(orig, e);\n\t\t}\n\t\tvar eAdjDest = this.vertexMap.get(dest);\n\t\tif (eAdjDest !== null) {\n\t\t\teAdjDest.insert(e.sym());\n\t\t} else {\n\t\t\tthis.vertexMap.put(dest, e.sym());\n\t\t}\n\t\treturn e;\n\t},\n\tcreate: function (p0, p1) {\n\t\tvar e0 = this.createEdge(p0);\n\t\tvar e1 = this.createEdge(p1);\n\t\tHalfEdge.init(e0, e1);\n\t\treturn e0;\n\t},\n\tcreateEdge: function (orig) {\n\t\treturn new HalfEdge(orig);\n\t},\n\taddEdge: function (orig, dest) {\n\t\tif (!EdgeGraph.isValidEdge(orig, dest)) return null;\n\t\tvar eAdj = this.vertexMap.get(orig);\n\t\tvar eSame = null;\n\t\tif (eAdj !== null) {\n\t\t\teSame = eAdj.find(dest);\n\t\t}\n\t\tif (eSame !== null) {\n\t\t\treturn eSame;\n\t\t}\n\t\tvar e = this.insert(orig, dest, eAdj);\n\t\treturn e;\n\t},\n\tgetVertexEdges: function () {\n\t\treturn this.vertexMap.values();\n\t},\n\tfindEdge: function (orig, dest) {\n\t\tvar e = this.vertexMap.get(orig);\n\t\tif (e === null) return null;\n\t\treturn e.find(dest);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeGraph;\n\t}\n});\nEdgeGraph.isValidEdge = function (orig, dest) {\n\tvar cmp = dest.compareTo(orig);\n\treturn cmp !== 0;\n};\n","import extend from '../../../../extend';\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nimport inherits from '../../../../inherits';\nexport default function DissolveHalfEdge() {\n\tthis._isStart = false;\n\tlet orig = arguments[0];\n\tMarkHalfEdge.call(this, orig);\n}\ninherits(DissolveHalfEdge, MarkHalfEdge);\nextend(DissolveHalfEdge.prototype, {\n\tsetStart: function () {\n\t\tthis._isStart = true;\n\t},\n\tisStart: function () {\n\t\treturn this._isStart;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DissolveHalfEdge;\n\t}\n});\n","import EdgeGraph from '../edgegraph/EdgeGraph';\nimport extend from '../../../../extend';\nimport DissolveHalfEdge from './DissolveHalfEdge';\nimport inherits from '../../../../inherits';\nexport default function DissolveEdgeGraph() {\n\tEdgeGraph.apply(this);\n}\ninherits(DissolveEdgeGraph, EdgeGraph);\nextend(DissolveEdgeGraph.prototype, {\n\tcreateEdge: function (p0) {\n\t\treturn new DissolveHalfEdge(p0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DissolveEdgeGraph;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Stack from '../../../../java/util/Stack';\nimport extend from '../../../../extend';\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nimport DissolveEdgeGraph from './DissolveEdgeGraph';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function LineDissolver() {\n\tthis.result = null;\n\tthis.factory = null;\n\tthis.graph = null;\n\tthis.lines = new ArrayList();\n\tthis.nodeEdgeStack = new Stack();\n\tthis.ringStartEdge = null;\n\tthis.graph = new DissolveEdgeGraph();\n}\nextend(LineDissolver.prototype, {\n\taddLine: function (line) {\n\t\tthis.lines.add(this.factory.createLineString(line.toCoordinateArray()));\n\t},\n\tupdateRingStartEdge: function (e) {\n\t\tif (!e.isStart()) {\n\t\t\te = e.sym();\n\t\t\tif (!e.isStart()) return null;\n\t\t}\n\t\tif (this.ringStartEdge === null) {\n\t\t\tthis.ringStartEdge = e;\n\t\t\treturn null;\n\t\t}\n\t\tif (e.orig().compareTo(this.ringStartEdge.orig()) < 0) {\n\t\t\tthis.ringStartEdge = e;\n\t\t}\n\t},\n\tgetResult: function () {\n\t\tif (this.result === null) this.computeResult();\n\t\treturn this.result;\n\t},\n\tprocess: function (e) {\n\t\tvar eNode = e.prevNode();\n\t\tif (eNode === null) eNode = e;\n\t\tthis.stackEdges(eNode);\n\t\tthis.buildLines();\n\t},\n\tbuildRing: function (eStartRing) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStartRing;\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStartRing) break;\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.addLine(line);\n\t},\n\tbuildLine: function (eStart) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStart;\n\t\tthis.ringStartEdge = null;\n\t\tMarkHalfEdge.markBoth(e);\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tthis.updateRingStartEdge(e);\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStart) {\n\t\t\t\tthis.buildRing(this.ringStartEdge);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t\tMarkHalfEdge.markBoth(e);\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.stackEdges(e.sym());\n\t\tthis.addLine(line);\n\t},\n\tstackEdges: function (node) {\n\t\tvar e = node;\n\t\tdo {\n\t\t\tif (!MarkHalfEdge.isMarked(e)) this.nodeEdgeStack.add(e);\n\t\t\te = e.oNext();\n\t\t} while (e !== node);\n\t},\n\tcomputeResult: function () {\n\t\tvar edges = this.graph.getVertexEdges();\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.process(e);\n\t\t}\n\t\tthis.result = this.factory.buildGeometry(this.lines);\n\t},\n\tbuildLines: function () {\n\t\twhile (!this.nodeEdgeStack.empty()) {\n\t\t\tvar e = this.nodeEdgeStack.pop();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.buildLine(e);\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function (component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this.factory === null) {\n\t\t\t\tthis.factory = lineString.getFactory();\n\t\t\t}\n\t\t\tvar seq = lineString.getCoordinateSequence();\n\t\t\tvar doneStart = false;\n\t\t\tfor (var i = 1; i < seq.size(); i++) {\n\t\t\t\tvar e = this.graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\n\t\t\t\tif (e === null) continue;\n\t\t\t\tif (!doneStart) {\n\t\t\t\t\te.setStart();\n\t\t\t\t\tdoneStart = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineDissolver;\n\t}\n});\nLineDissolver.dissolve = function (g) {\n\tvar d = new LineDissolver();\n\td.add(g);\n\treturn d.getResult();\n};\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function NodeBase() {\n\tthis.items = new ArrayList();\n\tthis.subnode = new Array(4).fill(null);\n}\nextend(NodeBase.prototype, {\n\thasChildren: function () {\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function () {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function (resultItems) {\n\t\tresultItems.addAll(this.items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].addAllItems(resultItems);\n\t\t\t}\n\t\t}\n\t\treturn resultItems;\n\t},\n\tgetNodeCount: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tsize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this.items.size();\n\t},\n\taddAllItemsFromOverlapping: function (searchEnv, resultItems) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tresultItems.addAll(this.items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\n\t\t\t}\n\t\t}\n\t},\n\tvisitItems: function (searchEnv, visitor) {\n\t\tfor (var i = this.items.iterator(); i.hasNext(); ) {\n\t\t\tvisitor.visitItem(i.next());\n\t\t}\n\t},\n\thasItems: function () {\n\t\treturn !this.items.isEmpty();\n\t},\n\tremove: function (itemEnv, item) {\n\t\tif (!this.isSearchMatch(itemEnv)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tfound = this.subnode[i].remove(itemEnv, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this.subnode[i].isPrunable()) this.subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this.items.remove(item);\n\t\treturn found;\n\t},\n\tvisit: function (searchEnv, visitor) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tthis.visitItems(searchEnv, visitor);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].visit(searchEnv, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tgetItems: function () {\n\t\treturn this.items;\n\t},\n\tdepth: function () {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tvar sqd = this.subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tisEmpty: function () {\n\t\tvar isEmpty = true;\n\t\tif (!this.items.isEmpty()) isEmpty = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tif (!this.subnode[i].isEmpty()) isEmpty = false;\n\t\t\t}\n\t\t}\n\t\treturn isEmpty;\n\t},\n\tadd: function (item) {\n\t\tthis.items.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (env, centrex, centrey) {\n\tvar subnodeIndex = -1;\n\tif (env.getMinX() >= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 3;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 1;\n\t}\n\tif (env.getMaxX() <= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 2;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 0;\n\t}\n\treturn subnodeIndex;\n};\n","import Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport DoubleBits from './DoubleBits';\nimport Envelope from '../../geom/Envelope';\nexport default function Key() {\n\tthis.pt = new Coordinate();\n\tthis.level = 0;\n\tthis.env = null;\n\tlet itemEnv = arguments[0];\n\tthis.computeKey(itemEnv);\n}\nextend(Key.prototype, {\n\tgetLevel: function () {\n\t\treturn this.level;\n\t},\n\tcomputeKey: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet itemEnv = arguments[0];\n\t\t\tthis.level = Key.computeQuadLevel(itemEnv);\n\t\t\tthis.env = new Envelope();\n\t\t\tthis.computeKey(this.level, itemEnv);\n\t\t\twhile (!this.env.contains(itemEnv)) {\n\t\t\t\tthis.level += 1;\n\t\t\t\tthis.computeKey(this.level, itemEnv);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet level = arguments[0], itemEnv = arguments[1];\n\t\t\tvar quadSize = DoubleBits.powerOf2(level);\n\t\t\tthis.pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize;\n\t\t\tthis.pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize;\n\t\t\tthis.env.init(this.pt.x, this.pt.x + quadSize, this.pt.y, this.pt.y + quadSize);\n\t\t}\n\t},\n\tgetEnvelope: function () {\n\t\treturn this.env;\n\t},\n\tgetCentre: function () {\n\t\treturn new Coordinate((this.env.getMinX() + this.env.getMaxX()) / 2, (this.env.getMinY() + this.env.getMaxY()) / 2);\n\t},\n\tgetPoint: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Key;\n\t}\n});\nKey.computeQuadLevel = function (env) {\n\tvar dx = env.getWidth();\n\tvar dy = env.getHeight();\n\tvar dMax = dx > dy ? dx : dy;\n\tvar level = DoubleBits.exponent(dMax) + 1;\n\treturn level;\n};\n","import NodeBase from './NodeBase';\nimport extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport Key from './Key';\nexport default function Node() {\n\tNodeBase.apply(this);\n\tthis.env = null;\n\tthis.centrex = null;\n\tthis.centrey = null;\n\tthis.level = null;\n\tlet env = arguments[0], level = arguments[1];\n\tthis.env = env;\n\tthis.level = level;\n\tthis.centrex = (env.getMinX() + env.getMaxX()) / 2;\n\tthis.centrey = (env.getMinY() + env.getMaxY()) / 2;\n}\ninherits(Node, NodeBase);\nextend(Node.prototype, {\n\tfind: function (searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this.centrex, this.centrey);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this.subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this.subnode[subnodeIndex];\n\t\t\treturn node.find(searchEnv);\n\t\t}\n\t\treturn this;\n\t},\n\tisSearchMatch: function (searchEnv) {\n\t\treturn this.env.intersects(searchEnv);\n\t},\n\tgetSubnode: function (index) {\n\t\tif (this.subnode[index] === null) {\n\t\t\tthis.subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this.subnode[index];\n\t},\n\tgetEnvelope: function () {\n\t\treturn this.env;\n\t},\n\tgetNode: function (searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this.centrex, this.centrey);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchEnv);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function (index) {\n\t\tvar minx = 0.0;\n\t\tvar maxx = 0.0;\n\t\tvar miny = 0.0;\n\t\tvar maxy = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tminx = this.env.getMinX();\n\t\t\t\tmaxx = this.centrex;\n\t\t\t\tminy = this.env.getMinY();\n\t\t\t\tmaxy = this.centrey;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tminx = this.centrex;\n\t\t\t\tmaxx = this.env.getMaxX();\n\t\t\t\tminy = this.env.getMinY();\n\t\t\t\tmaxy = this.centrey;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tminx = this.env.getMinX();\n\t\t\t\tmaxx = this.centrex;\n\t\t\t\tminy = this.centrey;\n\t\t\t\tmaxy = this.env.getMaxY();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tminx = this.centrex;\n\t\t\t\tmaxx = this.env.getMaxX();\n\t\t\t\tminy = this.centrey;\n\t\t\t\tmaxy = this.env.getMaxY();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar sqEnv = new Envelope(minx, maxx, miny, maxy);\n\t\tvar node = new Node(sqEnv, this.level - 1);\n\t\treturn node;\n\t},\n\tinsertNode: function (node) {\n\t\tAssert.isTrue(this.env === null || this.env.contains(node.env));\n\t\tvar index = NodeBase.getSubnodeIndex(node.env, this.centrex, this.centrey);\n\t\tif (node.level === this.level - 1) {\n\t\t\tthis.subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insertNode(node);\n\t\t\tthis.subnode[index] = childNode;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.createNode = function (env) {\n\tvar key = new Key(env);\n\tvar node = new Node(key.getEnvelope(), key.getLevel());\n\treturn node;\n};\nNode.createExpanded = function (node, addEnv) {\n\tvar expandEnv = new Envelope(addEnv);\n\tif (node !== null) expandEnv.expandToInclude(node.env);\n\tvar largerNode = Node.createNode(expandEnv);\n\tif (node !== null) largerNode.insertNode(node);\n\treturn largerNode;\n};\n","import Coordinate from '../../geom/Coordinate';\nimport NodeBase from './NodeBase';\nimport Node from './Node';\nimport extend from '../../../../../extend';\nimport IntervalSize from './IntervalSize';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function Root() {\n\tNodeBase.apply(this);\n}\ninherits(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function (itemEnv, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.subnode[index];\n\t\tif (node === null || !node.getEnvelope().contains(itemEnv)) {\n\t\t\tvar largerNode = Node.createExpanded(node, itemEnv);\n\t\t\tthis.subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this.subnode[index], itemEnv, item);\n\t},\n\tisSearchMatch: function (searchEnv) {\n\t\treturn true;\n\t},\n\tinsertContained: function (tree, itemEnv, item) {\n\t\tAssert.isTrue(tree.getEnvelope().contains(itemEnv));\n\t\tvar isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\n\t\tvar isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\n\t\tvar node = null;\n\t\tif (isZeroX || isZeroY) node = tree.find(itemEnv); else node = tree.getNode(itemEnv);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Root;\n\t}\n});\nRoot.origin = new Coordinate(0.0, 0.0);\n","import Root from './Root';\nimport SpatialIndex from '../SpatialIndex';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport ArrayListVisitor from '../ArrayListVisitor';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nexport default function Quadtree() {\n\tthis.root = null;\n\tthis.minExtent = 1.0;\n\tthis.root = new Root();\n}\nextend(Quadtree.prototype, {\n\tsize: function () {\n\t\tif (this.root !== null) return this.root.size();\n\t\treturn 0;\n\t},\n\tinsert: function (itemEnv, item) {\n\t\tthis.collectStats(itemEnv);\n\t\tvar insertEnv = Quadtree.ensureExtent(itemEnv, this.minExtent);\n\t\tthis.root.insert(insertEnv, item);\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.query(searchEnv, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tthis.root.visit(searchEnv, visitor);\n\t\t}\n\t},\n\tqueryAll: function () {\n\t\tvar foundItems = new ArrayList();\n\t\tthis.root.addAllItems(foundItems);\n\t\treturn foundItems;\n\t},\n\tremove: function (itemEnv, item) {\n\t\tvar posEnv = Quadtree.ensureExtent(itemEnv, this.minExtent);\n\t\treturn this.root.remove(posEnv, item);\n\t},\n\tcollectStats: function (itemEnv) {\n\t\tvar delX = itemEnv.getWidth();\n\t\tif (delX < this.minExtent && delX > 0.0) this.minExtent = delX;\n\t\tvar delY = itemEnv.getHeight();\n\t\tif (delY < this.minExtent && delY > 0.0) this.minExtent = delY;\n\t},\n\tdepth: function () {\n\t\tif (this.root !== null) return this.root.depth();\n\t\treturn 0;\n\t},\n\tisEmpty: function () {\n\t\tif (this.root === null) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Quadtree;\n\t}\n});\nQuadtree.ensureExtent = function (itemEnv, minExtent) {\n\tvar minx = itemEnv.getMinX();\n\tvar maxx = itemEnv.getMaxX();\n\tvar miny = itemEnv.getMinY();\n\tvar maxy = itemEnv.getMaxY();\n\tif (minx !== maxx && miny !== maxy) return itemEnv;\n\tif (minx === maxx) {\n\t\tminx = minx - minExtent / 2.0;\n\t\tmaxx = minx + minExtent / 2.0;\n\t}\n\tif (miny === maxy) {\n\t\tminy = miny - minExtent / 2.0;\n\t\tmaxy = miny + minExtent / 2.0;\n\t}\n\treturn new Envelope(minx, maxx, miny, maxy);\n};\nQuadtree.serialVersionUID = -7461163625812743604;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nexport default function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n}\n\nextend(GeoJSONParser.prototype, {\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read (json) {\n    let obj\n    if (typeof json === 'string') {\n      obj = JSON.parse(json)\n    } else {\n      obj = json\n    }\n\n    const type = obj.type\n\n    if (!parse[type]) {\n      throw new Error('Unknown GeoJSON type: ' + obj.type)\n    }\n\n    if (geometryTypes.indexOf(type) !== -1) {\n      return parse[type].apply(this, [obj.coordinates])\n    } else if (type === 'GeometryCollection') {\n      return parse[type].apply(this, [obj.geometries])\n    }\n\n    // feature or feature collection\n    return parse[type].apply(this, [obj])\n  },\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write (geometry) {\n    const type = geometry.getGeometryType()\n\n    if (!extract[type]) {\n      throw new Error('Geometry is not supported')\n    }\n\n    return extract[type].apply(this, [geometry])\n  }\n})\n\nconst parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    const feature = {}\n\n    // copy features\n    for (let key in obj) {\n      feature[key] = obj[key]\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      const type = obj.geometry.type\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry)\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox])\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    const featureCollection = {}\n\n    if (obj.features) {\n      featureCollection.features = []\n\n      for (let i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this.read(obj.features[i]))\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox])\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    const coordinates = []\n    for (let i = 0; i < array.length; ++i) {\n      const sub = array[i]\n      coordinates.push(new Coordinate(sub[0], sub[1]))\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    const coordinate = new Coordinate(array[0], array[1])\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    const points = []\n    for (let i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this, [array[i]]))\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    const coordinates = parse.coordinates.apply(this, [array])\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    const lineStrings = []\n    for (let i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this, [array[i]]))\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    const shellCoordinates = parse.coordinates.apply(this, [array[0]])\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\n    const holes = []\n    for (let i = 1; i < array.length; ++i) {\n      var hole = array[i]\n      var coordinates = parse.coordinates.apply(this, [hole])\n      var linearRing = this.geometryFactory.createLinearRing(coordinates)\n      holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    const polygons = []\n    for (let i = 0; i < array.length; ++i) {\n      const polygon = array[i]\n      polygons.push(parse.Polygon.apply(this, [polygon]))\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    const geometries = []\n    for (let i = 0; i < array.length; ++i) {\n      const geometry = array[i]\n      geometries.push(this.read(geometry))\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n}\n\nconst extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    const array = extract.coordinate.apply(this, [point.getCoordinate()])\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    const array = []\n    for (let i = 0; i < multipoint.geometries.length; ++i) {\n      const point = multipoint.geometries[i]\n      const geoJson = extract.Point.apply(this, [point])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    const array = []\n    const coordinates = linestring.getCoordinates()\n    for (let i = 0; i < coordinates.length; ++i) {\n      const coordinate = coordinates[i]\n      array.push(extract.coordinate.apply(this, [coordinate]))\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    const array = []\n    for (let i = 0; i < multilinestring.geometries.length; ++i) {\n      const linestring = multilinestring.geometries[i]\n      const geoJson = extract.LineString.apply(this, [linestring])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    const array = []\n    const shellGeoJson = extract.LineString.apply(this, [polygon.shell])\n    array.push(shellGeoJson.coordinates)\n    for (let i = 0; i < polygon.holes.length; ++i) {\n      const hole = polygon.holes[i]\n      const holeGeoJson = extract.LineString.apply(this, [hole])\n      array.push(holeGeoJson.coordinates)\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    const array = []\n    for (let i = 0; i < multipolygon.geometries.length; ++i) {\n      const polygon = multipolygon.geometries[i]\n      const geoJson = extract.Polygon.apply(this, [polygon])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    const array = []\n    for (let i = 0; i < collection.geometries.length; ++i) {\n      const geometry = collection.geometries[i]\n      const type = geometry.getGeometryType()\n      array.push(extract[type].apply(this, [geometry]))\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n}\n","import GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\n  this.parser = new GeoJSONParser(this.geometryFactory)\n}\n\nextend(GeoJSONReader.prototype, {\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof GeoJSONReader\n   */\n  read (geoJson) {\n    var geometry = this.parser.read(geoJson)\n\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry)\n    }\n\n    return geometry\n  },\n\n  // NOTE: this is a hack\n  reducePrecision (geometry) {\n    var i, len\n\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate)\n    } else if (geometry.points) {\n      for (i = 0, len = geometry.points.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry.points[i])\n      }\n    } else if (geometry.geometries) {\n      for (i = 0, len = geometry.geometries.length; i < len; i++) {\n        this.reducePrecision(geometry.geometries[i])\n      }\n    }\n  }\n})\n","/**\n * @module GeoJSONWriter\n */\n\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory)\n}\n\nextend(GeoJSONWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof GeoJSONWriter\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n","import GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\n/**\n * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\n  this.parser = new WKTParser(this.geometryFactory)\n}\n\nextend(WKTReader.prototype, {\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof WKTReader\n   */\n  read (wkt) {\n    var geometry = this.parser.read(wkt)\n\n    // TODO: port and use GeometryPrecisionReducer, this is a hack\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry)\n    }\n\n    return geometry\n  },\n\n  reducePrecision (geometry) {\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate)\n    } else if (geometry.points) {\n      for (let i = 0, len = geometry.points.coordinates.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry.points.coordinates[i])\n      }\n    } else if (geometry.geometries) {\n      for (let i = 0, len = geometry.geometries.length; i < len; i++) {\n        this.reducePrecision(geometry.geometries[i])\n      }\n    }\n  }\n})\n","/*eslint-disable no-undef */\n\nimport Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nfunction p2c (p) { return [p.x, p.y] }\n\n/**\n * OpenLayers 3 Geometry parser and writer\n * @param {GeometryFactory} geometryFactory\n * @param {ol} olReference\n * @constructor\n */\nexport default function OL3Parser (geometryFactory, olReference) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.ol = olReference || (typeof ol !== 'undefined' && ol)\n}\n\nextend(OL3Parser.prototype, {\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof OL3Parser\n   */\n  read (geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry)\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry)\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry)\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry)\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry)\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry)\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry)\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry)\n    }\n  },\n\n  convertFromPoint (point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  },\n\n  convertFromLineString (lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromLinearRing (linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromPolygon (polygon) {\n    const linearRings = polygon.getLinearRings()\n    var shell = null\n    var holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0) {\n        shell = linearRing\n      } else {\n        holes.push(linearRing)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  convertFromMultiPoint (multiPoint) {\n    const points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  convertFromMultiLineString (multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  convertFromMultiPolygon (multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  convertFromCollection (collection) {\n    const geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  },\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof! OL3Parser\n   */\n  write (geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate())\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry)\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry)\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry)\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry)\n    }\n  },\n\n  convertToPoint (coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  },\n\n  convertToLineString (lineString) {\n    var points = lineString.points.coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  },\n\n  convertToLinearRing (linearRing) {\n    var points = linearRing.points.coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  },\n\n  convertToPolygon (polygon) {\n    var rings = [polygon.shell.points.coordinates.map(p2c)]\n    for (let i = 0; i < polygon.holes.length; i++) {\n      rings.push(polygon.holes[i].points.coordinates.map(p2c))\n    }\n    return new this.ol.geom.Polygon(rings)\n  },\n\n  convertToMultiPoint (multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  },\n\n  convertToMultiLineString (multiLineString) {\n    var lineStrings = []\n    for (let i = 0; i < multiLineString.geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString.geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiLineString(lineStrings)\n  },\n\n  convertToMultiPolygon (multiPolygon) {\n    var polygons = []\n    for (let i = 0; i < multiPolygon.geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon.geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiPolygon(polygons)\n  },\n\n  convertToCollection (geometryCollection) {\n    var geometries = []\n    for (let i = 0; i < geometryCollection.geometries.length; i++) {\n      var geometry = geometryCollection.geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n})\n","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Noder from './Noder';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function ScaledNoder() {\n\tthis.noder = null;\n\tthis.scaleFactor = null;\n\tthis.offsetX = null;\n\tthis.offsetY = null;\n\tthis.isScaled = false;\n\tif (arguments.length === 2) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1];\n\t\tScaledNoder.call(this, noder, scaleFactor, 0, 0);\n\t} else if (arguments.length === 4) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3];\n\t\tthis.noder = noder;\n\t\tthis.scaleFactor = scaleFactor;\n\t\tthis.isScaled = !this.isIntegerPrecision();\n\t}\n}\nextend(ScaledNoder.prototype, {\n\trescale: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.rescale(ss.getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar p0 = null;\n\t\t\tvar p1 = null;\n\t\t\tif (pts.length === 2) {\n\t\t\t\tp0 = new Coordinate(pts[0]);\n\t\t\t\tp1 = new Coordinate(pts[1]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tpts[i].x = pts[i].x / this.scaleFactor + this.offsetX;\n\t\t\t\tpts[i].y = pts[i].y / this.scaleFactor + this.offsetY;\n\t\t\t}\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) {\n\t\t\t\tSystem.out.println(pts);\n\t\t\t}\n\t\t}\n\t},\n\tscale: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tvar nodedSegmentStrings = new ArrayList();\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tnodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\n\t\t\t}\n\t\t\treturn nodedSegmentStrings;\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar roundPts = new Array(pts.length).fill(null);\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\troundPts[i] = new Coordinate(Math.round((pts[i].x - this.offsetX) * this.scaleFactor), Math.round((pts[i].y - this.offsetY) * this.scaleFactor), pts[i].z);\n\t\t\t}\n\t\t\tvar roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n\t\t\treturn roundPtsNoDup;\n\t\t}\n\t},\n\tisIntegerPrecision: function () {\n\t\treturn this.scaleFactor === 1.0;\n\t},\n\tgetNodedSubstrings: function () {\n\t\tvar splitSS = this.noder.getNodedSubstrings();\n\t\tif (this.isScaled) this.rescale(splitSS);\n\t\treturn splitSS;\n\t},\n\tcomputeNodes: function (inputSegStrings) {\n\t\tvar intSegStrings = inputSegStrings;\n\t\tif (this.isScaled) intSegStrings = this.scale(inputSegStrings);\n\t\tthis.noder.computeNodes(intSegStrings);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn ScaledNoder;\n\t}\n});\n","import TreeSet from '../../../../java/util/TreeSet';\nimport LineString from '../geom/LineString';\nimport hasInterface from '../../../../hasInterface';\nimport MultiPoint from '../geom/MultiPoint';\nimport extend from '../../../../extend';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport Polygonal from '../geom/Polygonal';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function IsSimpleOp() {\n\tthis.inputGeom = null;\n\tthis.isClosedEndpointsInInterior = true;\n\tthis.nonSimpleLocation = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tthis.inputGeom = geom;\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\n\t\tthis.inputGeom = geom;\n\t\tthis.isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\n\t}\n}\nextend(IsSimpleOp.prototype, {\n\tisSimpleMultiPoint: function (mp) {\n\t\tif (mp.isEmpty()) return true;\n\t\tvar points = new TreeSet();\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar pt = mp.getGeometryN(i);\n\t\t\tvar p = pt.getCoordinate();\n\t\t\tif (points.contains(p)) {\n\t\t\t\tthis.nonSimpleLocation = p;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tpoints.add(p);\n\t\t}\n\t\treturn true;\n\t},\n\tisSimplePolygonal: function (geom) {\n\t\tvar rings = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = rings.iterator(); i.hasNext(); ) {\n\t\t\tvar ring = i.next();\n\t\t\tif (!this.isSimpleLinearGeometry(ring)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasClosedEndpointIntersection: function (graph) {\n\t\tvar endPoints = new TreeMap();\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tvar isClosed = e.isClosed();\n\t\t\tvar p0 = e.getCoordinate(0);\n\t\t\tthis.addEndpoint(endPoints, p0, isClosed);\n\t\t\tvar p1 = e.getCoordinate(e.getNumPoints() - 1);\n\t\t\tthis.addEndpoint(endPoints, p1, isClosed);\n\t\t}\n\t\tfor (var i = endPoints.values().iterator(); i.hasNext(); ) {\n\t\t\tvar eiInfo = i.next();\n\t\t\tif (eiInfo.isClosed && eiInfo.degree !== 2) {\n\t\t\t\tthis.nonSimpleLocation = eiInfo.getCoordinate();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetNonSimpleLocation: function () {\n\t\treturn this.nonSimpleLocation;\n\t},\n\tisSimpleLinearGeometry: function (geom) {\n\t\tif (geom.isEmpty()) return true;\n\t\tvar graph = new GeometryGraph(0, geom);\n\t\tvar li = new RobustLineIntersector();\n\t\tvar si = graph.computeSelfNodes(li, true);\n\t\tif (!si.hasIntersection()) return true;\n\t\tif (si.hasProperIntersection()) {\n\t\t\tthis.nonSimpleLocation = si.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tif (this.hasNonEndpointIntersection(graph)) return false;\n\t\tif (this.isClosedEndpointsInInterior) {\n\t\t\tif (this.hasClosedEndpointIntersection(graph)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasNonEndpointIntersection: function (graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tif (!ei.isEndPoint(maxSegmentIndex)) {\n\t\t\t\t\tthis.nonSimpleLocation = ei.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\taddEndpoint: function (endPoints, p, isClosed) {\n\t\tvar eiInfo = endPoints.get(p);\n\t\tif (eiInfo === null) {\n\t\t\teiInfo = new EndpointInfo(p);\n\t\t\tendPoints.put(p, eiInfo);\n\t\t}\n\t\teiInfo.addEndpoint(isClosed);\n\t},\n\tcomputeSimple: function (geom) {\n\t\tthis.nonSimpleLocation = null;\n\t\tif (geom.isEmpty()) return true;\n\t\tif (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\n\t\tif (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\n\t\tif (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\n\t\treturn true;\n\t},\n\tisSimple: function () {\n\t\tthis.nonSimpleLocation = null;\n\t\treturn this.computeSimple(this.inputGeom);\n\t},\n\tisSimpleGeometryCollection: function (geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.computeSimple(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IsSimpleOp;\n\t}\n});\nfunction EndpointInfo() {\n\tthis.pt = null;\n\tthis.isClosed = null;\n\tthis.degree = null;\n\tlet pt = arguments[0];\n\tthis.pt = pt;\n\tthis.isClosed = false;\n\tthis.degree = 0;\n}\nextend(EndpointInfo.prototype, {\n\taddEndpoint: function (isClosed) {\n\t\tthis.degree++;\n\t\tthis.isClosed |= isClosed;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EndpointInfo;\n\t}\n});\nIsSimpleOp.EndpointInfo = EndpointInfo;\n","import extend from '../../../../../extend';\nexport default function BufferParameters() {\n\tthis.quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\tthis.endCapStyle = BufferParameters.CAP_ROUND;\n\tthis.joinStyle = BufferParameters.JOIN_ROUND;\n\tthis.mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n\tthis._isSingleSided = false;\n\tthis.simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet quadrantSegments = arguments[0];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t} else if (arguments.length === 2) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t} else if (arguments.length === 4) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t\tthis.setJoinStyle(joinStyle);\n\t\tthis.setMitreLimit(mitreLimit);\n\t}\n}\nextend(BufferParameters.prototype, {\n\tgetEndCapStyle: function () {\n\t\treturn this.endCapStyle;\n\t},\n\tisSingleSided: function () {\n\t\treturn this._isSingleSided;\n\t},\n\tsetQuadrantSegments: function (quadSegs) {\n\t\tthis.quadrantSegments = quadSegs;\n\t\tif (this.quadrantSegments === 0) this.joinStyle = BufferParameters.JOIN_BEVEL;\n\t\tif (this.quadrantSegments < 0) {\n\t\t\tthis.joinStyle = BufferParameters.JOIN_MITRE;\n\t\t\tthis.mitreLimit = Math.abs(this.quadrantSegments);\n\t\t}\n\t\tif (quadSegs <= 0) {\n\t\t\tthis.quadrantSegments = 1;\n\t\t}\n\t\tif (this.joinStyle !== BufferParameters.JOIN_ROUND) {\n\t\t\tthis.quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\t\t}\n\t},\n\tgetJoinStyle: function () {\n\t\treturn this.joinStyle;\n\t},\n\tsetJoinStyle: function (joinStyle) {\n\t\tthis.joinStyle = joinStyle;\n\t},\n\tsetSimplifyFactor: function (simplifyFactor) {\n\t\tthis.simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n\t},\n\tgetSimplifyFactor: function () {\n\t\treturn this.simplifyFactor;\n\t},\n\tgetQuadrantSegments: function () {\n\t\treturn this.quadrantSegments;\n\t},\n\tsetEndCapStyle: function (endCapStyle) {\n\t\tthis.endCapStyle = endCapStyle;\n\t},\n\tgetMitreLimit: function () {\n\t\treturn this.mitreLimit;\n\t},\n\tsetMitreLimit: function (mitreLimit) {\n\t\tthis.mitreLimit = mitreLimit;\n\t},\n\tsetSingleSided: function (isSingleSided) {\n\t\tthis._isSingleSided = isSingleSided;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferParameters;\n\t}\n});\nBufferParameters.bufferDistanceError = function (quadSegs) {\n\tvar alpha = Math.PI / 2.0 / quadSegs;\n\treturn 1 - Math.cos(alpha / 2.0);\n};\nBufferParameters.CAP_ROUND = 1;\nBufferParameters.CAP_FLAT = 2;\nBufferParameters.CAP_SQUARE = 3;\nBufferParameters.JOIN_ROUND = 1;\nBufferParameters.JOIN_MITRE = 2;\nBufferParameters.JOIN_BEVEL = 3;\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport Position from '../../geomgraph/Position';\nimport extend from '../../../../../extend';\nimport Assert from '../../util/Assert';\nexport default function RightmostEdgeFinder() {\n\tthis.minIndex = -1;\n\tthis.minCoord = null;\n\tthis.minDe = null;\n\tthis.orientedDe = null;\n}\nextend(RightmostEdgeFinder.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this.minCoord;\n\t},\n\tgetRightmostSide: function (de, index) {\n\t\tvar side = this.getRightmostSideOfSegment(de, index);\n\t\tif (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\n\t\tif (side < 0) {\n\t\t\tthis.minCoord = null;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\treturn side;\n\t},\n\tfindRightmostEdgeAtVertex: function () {\n\t\tvar pts = this.minDe.getEdge().getCoordinates();\n\t\tAssert.isTrue(this.minIndex > 0 && this.minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\n\t\tvar pPrev = pts[this.minIndex - 1];\n\t\tvar pNext = pts[this.minIndex + 1];\n\t\tvar orientation = CGAlgorithms.computeOrientation(this.minCoord, pNext, pPrev);\n\t\tvar usePrev = false;\n\t\tif (pPrev.y < this.minCoord.y && pNext.y < this.minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t} else if (pPrev.y > this.minCoord.y && pNext.y > this.minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t}\n\t\tif (usePrev) {\n\t\t\tthis.minIndex = this.minIndex - 1;\n\t\t}\n\t},\n\tgetRightmostSideOfSegment: function (de, i) {\n\t\tvar e = de.getEdge();\n\t\tvar coord = e.getCoordinates();\n\t\tif (i < 0 || i + 1 >= coord.length) return -1;\n\t\tif (coord[i].y === coord[i + 1].y) return -1;\n\t\tvar pos = Position.LEFT;\n\t\tif (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\n\t\treturn pos;\n\t},\n\tgetEdge: function () {\n\t\treturn this.orientedDe;\n\t},\n\tcheckForRightmostCoordinate: function (de) {\n\t\tvar coord = de.getEdge().getCoordinates();\n\t\tfor (var i = 0; i < coord.length - 1; i++) {\n\t\t\tif (this.minCoord === null || coord[i].x > this.minCoord.x) {\n\t\t\t\tthis.minDe = de;\n\t\t\t\tthis.minIndex = i;\n\t\t\t\tthis.minCoord = coord[i];\n\t\t\t}\n\t\t}\n\t},\n\tfindRightmostEdgeAtNode: function () {\n\t\tvar node = this.minDe.getNode();\n\t\tvar star = node.getEdges();\n\t\tthis.minDe = star.getRightmostEdge();\n\t\tif (!this.minDe.isForward()) {\n\t\t\tthis.minDe = this.minDe.getSym();\n\t\t\tthis.minIndex = this.minDe.getEdge().getCoordinates().length - 1;\n\t\t}\n\t},\n\tfindEdge: function (dirEdgeList) {\n\t\tfor (var i = dirEdgeList.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (!de.isForward()) continue;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\tAssert.isTrue(this.minIndex !== 0 || this.minCoord.equals(this.minDe.getCoordinate()), \"inconsistency in rightmost processing\");\n\t\tif (this.minIndex === 0) {\n\t\t\tthis.findRightmostEdgeAtNode();\n\t\t} else {\n\t\t\tthis.findRightmostEdgeAtVertex();\n\t\t}\n\t\tthis.orientedDe = this.minDe;\n\t\tvar rightmostSide = this.getRightmostSide(this.minDe, this.minIndex);\n\t\tif (rightmostSide === Position.LEFT) {\n\t\t\tthis.orientedDe = this.minDe.getSym();\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RightmostEdgeFinder;\n\t}\n});\n","export default function LinkedList () {\n  this.array_ = []\n}\nLinkedList.prototype.addLast = function (e) {\n  this.array_.push(e)\n}\nLinkedList.prototype.removeFirst = function () {\n  return this.array_.shift()\n}\nLinkedList.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n","import HashSet from '../../../../../java/util/HashSet';\nimport Position from '../../geomgraph/Position';\nimport Stack from '../../../../../java/util/Stack';\nimport RightmostEdgeFinder from './RightmostEdgeFinder';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport LinkedList from '../../../../../java/util/LinkedList';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default function BufferSubgraph() {\n\tthis.finder = null;\n\tthis.dirEdgeList = new ArrayList();\n\tthis.nodes = new ArrayList();\n\tthis.rightMostCoord = null;\n\tthis.env = null;\n\tthis.finder = new RightmostEdgeFinder();\n}\nextend(BufferSubgraph.prototype, {\n\tclearVisitedEdges: function () {\n\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tde.setVisited(false);\n\t\t}\n\t},\n\tgetRightmostCoordinate: function () {\n\t\treturn this.rightMostCoord;\n\t},\n\tcomputeNodeDepth: function (n) {\n\t\tvar startEdge = null;\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isVisited() || de.getSym().isVisited()) {\n\t\t\t\tstartEdge = de;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\n\t\tn.getEdges().computeDepths(startEdge);\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tde.setVisited(true);\n\t\t\tthis.copySymDepths(de);\n\t\t}\n\t},\n\tcomputeDepth: function (outsideDepth) {\n\t\tthis.clearVisitedEdges();\n\t\tvar de = this.finder.getEdge();\n\t\tvar n = de.getNode();\n\t\tvar label = de.getLabel();\n\t\tde.setEdgeDepths(Position.RIGHT, outsideDepth);\n\t\tthis.copySymDepths(de);\n\t\tthis.computeDepths(de);\n\t},\n\tcreate: function (node) {\n\t\tthis.addReachable(node);\n\t\tthis.finder.findEdge(this.dirEdgeList);\n\t\tthis.rightMostCoord = this.finder.getCoordinate();\n\t},\n\tfindResultEdges: function () {\n\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeDepths: function (startEdge) {\n\t\tvar nodesVisited = new HashSet();\n\t\tvar nodeQueue = new LinkedList();\n\t\tvar startNode = startEdge.getNode();\n\t\tnodeQueue.addLast(startNode);\n\t\tnodesVisited.add(startNode);\n\t\tstartEdge.setVisited(true);\n\t\twhile (!nodeQueue.isEmpty()) {\n\t\t\tvar n = nodeQueue.removeFirst();\n\t\t\tnodesVisited.add(n);\n\t\t\tthis.computeNodeDepth(n);\n\t\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym.isVisited()) continue;\n\t\t\t\tvar adjNode = sym.getNode();\n\t\t\t\tif (!nodesVisited.contains(adjNode)) {\n\t\t\t\t\tnodeQueue.addLast(adjNode);\n\t\t\t\t\tnodesVisited.add(adjNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcompareTo: function (o) {\n\t\tvar graph = o;\n\t\tif (this.rightMostCoord.x < graph.rightMostCoord.x) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.rightMostCoord.x > graph.rightMostCoord.x) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t},\n\tgetEnvelope: function () {\n\t\tif (this.env === null) {\n\t\t\tvar edgeEnv = new Envelope();\n\t\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\t\tvar dirEdge = it.next();\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tedgeEnv.expandToInclude(pts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.env = edgeEnv;\n\t\t}\n\t\treturn this.env;\n\t},\n\taddReachable: function (startNode) {\n\t\tvar nodeStack = new Stack();\n\t\tnodeStack.add(startNode);\n\t\twhile (!nodeStack.empty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tthis.add(node, nodeStack);\n\t\t}\n\t},\n\tcopySymDepths: function (de) {\n\t\tvar sym = de.getSym();\n\t\tsym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n\t\tsym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n\t},\n\tadd: function (node, nodeStack) {\n\t\tnode.setVisited(true);\n\t\tthis.nodes.add(node);\n\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tthis.dirEdgeList.add(de);\n\t\t\tvar sym = de.getSym();\n\t\t\tvar symNode = sym.getNode();\n\t\t\tif (!symNode.isVisited()) nodeStack.push(symNode);\n\t\t}\n\t},\n\tgetNodes: function () {\n\t\treturn this.nodes;\n\t},\n\tgetDirectedEdges: function () {\n\t\treturn this.dirEdgeList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn BufferSubgraph;\n\t}\n});\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport CoordinateList from '../../geom/CoordinateList';\nimport extend from '../../../../../extend';\nexport default function BufferInputLineSimplifier() {\n\tthis.inputLine = null;\n\tthis.distanceTol = null;\n\tthis.isDeleted = null;\n\tthis.angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n\tlet inputLine = arguments[0];\n\tthis.inputLine = inputLine;\n}\nextend(BufferInputLineSimplifier.prototype, {\n\tisDeletable: function (i0, i1, i2, distanceTol) {\n\t\tvar p0 = this.inputLine[i0];\n\t\tvar p1 = this.inputLine[i1];\n\t\tvar p2 = this.inputLine[i2];\n\t\tif (!this.isConcave(p0, p1, p2)) return false;\n\t\tif (!this.isShallow(p0, p1, p2, distanceTol)) return false;\n\t\treturn this.isShallowSampled(p0, p1, i0, i2, distanceTol);\n\t},\n\tdeleteShallowConcavities: function () {\n\t\tvar index = 1;\n\t\tvar maxIndex = this.inputLine.length - 1;\n\t\tvar midIndex = this.findNextNonDeletedIndex(index);\n\t\tvar lastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\tvar isChanged = false;\n\t\twhile (lastIndex < this.inputLine.length) {\n\t\t\tvar isMiddleVertexDeleted = false;\n\t\t\tif (this.isDeletable(index, midIndex, lastIndex, this.distanceTol)) {\n\t\t\t\tthis.isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n\t\t\t\tisMiddleVertexDeleted = true;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\tif (isMiddleVertexDeleted) index = lastIndex; else index = midIndex;\n\t\t\tmidIndex = this.findNextNonDeletedIndex(index);\n\t\t\tlastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\t}\n\t\treturn isChanged;\n\t},\n\tisShallowConcavity: function (p0, p1, p2, distanceTol) {\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n\t\tvar isAngleToSimplify = orientation === this.angleOrientation;\n\t\tif (!isAngleToSimplify) return false;\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tisShallowSampled: function (p0, p2, i0, i2, distanceTol) {\n\t\tvar inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n\t\tif (inc <= 0) inc = 1;\n\t\tfor (var i = i0; i < i2; i += inc) {\n\t\t\tif (!this.isShallow(p0, p2, this.inputLine[i], distanceTol)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisConcave: function (p0, p1, p2) {\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n\t\tvar isConcave = orientation === this.angleOrientation;\n\t\treturn isConcave;\n\t},\n\tsimplify: function (distanceTol) {\n\t\tthis.distanceTol = Math.abs(distanceTol);\n\t\tif (distanceTol < 0) this.angleOrientation = CGAlgorithms.CLOCKWISE;\n\t\tthis.isDeleted = new Array(this.inputLine.length).fill(null);\n\t\tvar isChanged = false;\n\t\tdo {\n\t\t\tisChanged = this.deleteShallowConcavities();\n\t\t} while (isChanged);\n\t\treturn this.collapseLine();\n\t},\n\tfindNextNonDeletedIndex: function (index) {\n\t\tvar next = index + 1;\n\t\twhile (next < this.inputLine.length && this.isDeleted[next] === BufferInputLineSimplifier.DELETE) next++;\n\t\treturn next;\n\t},\n\tisShallow: function (p0, p1, p2, distanceTol) {\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tcollapseLine: function () {\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this.inputLine.length; i++) {\n\t\t\tif (this.isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this.inputLine[i]);\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferInputLineSimplifier;\n\t}\n});\nBufferInputLineSimplifier.simplify = function (inputLine, distanceTol) {\n\tvar simp = new BufferInputLineSimplifier(inputLine);\n\treturn simp.simplify(distanceTol);\n};\nBufferInputLineSimplifier.INIT = 0;\nBufferInputLineSimplifier.DELETE = 1;\nBufferInputLineSimplifier.KEEP = 1;\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\n","import GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function OffsetSegmentString() {\n\tthis.ptList = null;\n\tthis.precisionModel = null;\n\tthis.minimimVertexDistance = 0.0;\n\tthis.ptList = new ArrayList();\n}\nextend(OffsetSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\tvar coord = this.ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n\t\treturn coord;\n\t},\n\tsetPrecisionModel: function (precisionModel) {\n\t\tthis.precisionModel = precisionModel;\n\t},\n\taddPt: function (pt) {\n\t\tvar bufPt = new Coordinate(pt);\n\t\tthis.precisionModel.makePrecise(bufPt);\n\t\tif (this.isRedundant(bufPt)) return null;\n\t\tthis.ptList.add(bufPt);\n\t},\n\treverse: function () {},\n\taddPts: function (pt, isForward) {\n\t\tif (isForward) {\n\t\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = pt.length - 1; i >= 0; i--) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisRedundant: function (pt) {\n\t\tif (this.ptList.size() < 1) return false;\n\t\tvar lastPt = this.ptList.get(this.ptList.size() - 1);\n\t\tvar ptDist = pt.distance(lastPt);\n\t\tif (ptDist < this.minimimVertexDistance) return true;\n\t\treturn false;\n\t},\n\ttoString: function () {\n\t\tvar fact = new GeometryFactory();\n\t\tvar line = fact.createLineString(this.getCoordinates());\n\t\treturn line.toString();\n\t},\n\tcloseRing: function () {\n\t\tif (this.ptList.size() < 1) return null;\n\t\tvar startPt = new Coordinate(this.ptList.get(0));\n\t\tvar lastPt = this.ptList.get(this.ptList.size() - 1);\n\t\tvar last2Pt = null;\n\t\tif (this.ptList.size() >= 2) last2Pt = this.ptList.get(this.ptList.size() - 2);\n\t\tif (startPt.equals(lastPt)) return null;\n\t\tthis.ptList.add(startPt);\n\t},\n\tsetMinimumVertexDistance: function (minimimVertexDistance) {\n\t\tthis.minimimVertexDistance = minimimVertexDistance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetSegmentString;\n\t}\n});\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n","import BufferParameters from './BufferParameters';\nimport NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport OffsetSegmentString from './OffsetSegmentString';\nimport LineSegment from '../../geom/LineSegment';\nimport Angle from '../../algorithm/Angle';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default function OffsetSegmentGenerator() {\n\tthis.maxCurveSegmentError = 0.0;\n\tthis.filletAngleQuantum = null;\n\tthis.closingSegLengthFactor = 1;\n\tthis.segList = null;\n\tthis.distance = 0.0;\n\tthis.precisionModel = null;\n\tthis.bufParams = null;\n\tthis.li = null;\n\tthis.s0 = null;\n\tthis.s1 = null;\n\tthis.s2 = null;\n\tthis.seg0 = new LineSegment();\n\tthis.seg1 = new LineSegment();\n\tthis.offset0 = new LineSegment();\n\tthis.offset1 = new LineSegment();\n\tthis.side = 0;\n\tthis._hasNarrowConcaveAngle = false;\n\tlet precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2];\n\tthis.precisionModel = precisionModel;\n\tthis.bufParams = bufParams;\n\tthis.li = new RobustLineIntersector();\n\tthis.filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n\tif (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this.closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\n\tthis.init(distance);\n}\nextend(OffsetSegmentGenerator.prototype, {\n\taddNextSegment: function (p, addStartPoint) {\n\t\tthis.s0 = this.s1;\n\t\tthis.s1 = this.s2;\n\t\tthis.s2 = p;\n\t\tthis.seg0.setCoordinates(this.s0, this.s1);\n\t\tthis.computeOffsetSegment(this.seg0, this.side, this.distance, this.offset0);\n\t\tthis.seg1.setCoordinates(this.s1, this.s2);\n\t\tthis.computeOffsetSegment(this.seg1, this.side, this.distance, this.offset1);\n\t\tif (this.s1.equals(this.s2)) return null;\n\t\tvar orientation = CGAlgorithms.computeOrientation(this.s0, this.s1, this.s2);\n\t\tvar outsideTurn = orientation === CGAlgorithms.CLOCKWISE && this.side === Position.LEFT || orientation === CGAlgorithms.COUNTERCLOCKWISE && this.side === Position.RIGHT;\n\t\tif (orientation === 0) {\n\t\t\tthis.addCollinear(addStartPoint);\n\t\t} else if (outsideTurn) {\n\t\t\tthis.addOutsideTurn(orientation, addStartPoint);\n\t\t} else {\n\t\t\tthis.addInsideTurn(orientation, addStartPoint);\n\t\t}\n\t},\n\taddLineEndCap: function (p0, p1) {\n\t\tvar seg = new LineSegment(p0, p1);\n\t\tvar offsetL = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.LEFT, this.distance, offsetL);\n\t\tvar offsetR = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.RIGHT, this.distance, offsetR);\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tvar angle = Math.atan2(dy, dx);\n\t\tswitch (this.bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tthis.segList.addPt(offsetL.p1);\n\t\t\t\tthis.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this.distance);\n\t\t\t\tthis.segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_FLAT:\n\t\t\t\tthis.segList.addPt(offsetL.p1);\n\t\t\t\tthis.segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tvar squareCapSideOffset = new Coordinate();\n\t\t\t\tsquareCapSideOffset.x = Math.abs(this.distance) * Math.cos(angle);\n\t\t\t\tsquareCapSideOffset.y = Math.abs(this.distance) * Math.sin(angle);\n\t\t\t\tvar squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n\t\t\t\tvar squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n\t\t\t\tthis.segList.addPt(squareCapLOffset);\n\t\t\t\tthis.segList.addPt(squareCapROffset);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar pts = this.segList.getCoordinates();\n\t\treturn pts;\n\t},\n\taddMitreJoin: function (p, offset0, offset1, distance) {\n\t\tvar isMitreWithinLimit = true;\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n\t\t\tvar mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n\t\t\tif (mitreRatio > this.bufParams.getMitreLimit()) isMitreWithinLimit = false;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {\n\t\t\t\tintPt = new Coordinate(0, 0);\n\t\t\t\tisMitreWithinLimit = false;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (isMitreWithinLimit) {\n\t\t\tthis.segList.addPt(intPt);\n\t\t} else {\n\t\t\tthis.addLimitedMitreJoin(offset0, offset1, distance, this.bufParams.getMitreLimit());\n\t\t}\n\t},\n\taddFilletCorner: function (p, p0, p1, direction, radius) {\n\t\tvar dx0 = p0.x - p.x;\n\t\tvar dy0 = p0.y - p.y;\n\t\tvar startAngle = Math.atan2(dy0, dx0);\n\t\tvar dx1 = p1.x - p.x;\n\t\tvar dy1 = p1.y - p.y;\n\t\tvar endAngle = Math.atan2(dy1, dx1);\n\t\tif (direction === CGAlgorithms.CLOCKWISE) {\n\t\t\tif (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\n\t\t} else {\n\t\t\tif (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\n\t\t}\n\t\tthis.segList.addPt(p0);\n\t\tthis.addFilletArc(p, startAngle, endAngle, direction, radius);\n\t\tthis.segList.addPt(p1);\n\t},\n\taddOutsideTurn: function (orientation, addStartPoint) {\n\t\tif (this.offset0.p1.distance(this.offset1.p0) < this.distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n\t\t\tthis.segList.addPt(this.offset0.p1);\n\t\t\treturn null;\n\t\t}\n\t\tif (this.bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\tthis.addMitreJoin(this.s1, this.offset0, this.offset1, this.distance);\n\t\t} else if (this.bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n\t\t\tthis.addBevelJoin(this.offset0, this.offset1);\n\t\t} else {\n\t\t\tif (addStartPoint) this.segList.addPt(this.offset0.p1);\n\t\t\tthis.addFilletCorner(this.s1, this.offset0.p1, this.offset1.p0, orientation, this.distance);\n\t\t\tthis.segList.addPt(this.offset1.p0);\n\t\t}\n\t},\n\tcreateSquare: function (p) {\n\t\tthis.segList.addPt(new Coordinate(p.x + this.distance, p.y + this.distance));\n\t\tthis.segList.addPt(new Coordinate(p.x + this.distance, p.y - this.distance));\n\t\tthis.segList.addPt(new Coordinate(p.x - this.distance, p.y - this.distance));\n\t\tthis.segList.addPt(new Coordinate(p.x - this.distance, p.y + this.distance));\n\t\tthis.segList.closeRing();\n\t},\n\taddSegments: function (pt, isForward) {\n\t\tthis.segList.addPts(pt, isForward);\n\t},\n\taddFirstSegment: function () {\n\t\tthis.segList.addPt(this.offset1.p0);\n\t},\n\taddLastSegment: function () {\n\t\tthis.segList.addPt(this.offset1.p1);\n\t},\n\tinitSideSegments: function (s1, s2, side) {\n\t\tthis.s1 = s1;\n\t\tthis.s2 = s2;\n\t\tthis.side = side;\n\t\tthis.seg1.setCoordinates(s1, s2);\n\t\tthis.computeOffsetSegment(this.seg1, side, this.distance, this.offset1);\n\t},\n\taddLimitedMitreJoin: function (offset0, offset1, distance, mitreLimit) {\n\t\tvar basePt = this.seg0.p1;\n\t\tvar ang0 = Angle.angle(basePt, this.seg0.p0);\n\t\tvar ang1 = Angle.angle(basePt, this.seg1.p1);\n\t\tvar angDiff = Angle.angleBetweenOriented(this.seg0.p0, basePt, this.seg1.p1);\n\t\tvar angDiffHalf = angDiff / 2;\n\t\tvar midAng = Angle.normalize(ang0 + angDiffHalf);\n\t\tvar mitreMidAng = Angle.normalize(midAng + Math.PI);\n\t\tvar mitreDist = mitreLimit * distance;\n\t\tvar bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n\t\tvar bevelHalfLen = distance - bevelDelta;\n\t\tvar bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n\t\tvar bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n\t\tvar bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n\t\tvar mitreMidLine = new LineSegment(basePt, bevelMidPt);\n\t\tvar bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n\t\tvar bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n\t\tif (this.side === Position.LEFT) {\n\t\t\tthis.segList.addPt(bevelEndLeft);\n\t\t\tthis.segList.addPt(bevelEndRight);\n\t\t} else {\n\t\t\tthis.segList.addPt(bevelEndRight);\n\t\t\tthis.segList.addPt(bevelEndLeft);\n\t\t}\n\t},\n\tcomputeOffsetSegment: function (seg, side, distance, offset) {\n\t\tvar sideSign = side === Position.LEFT ? 1 : -1;\n\t\tvar dx = seg.p1.x - seg.p0.x;\n\t\tvar dy = seg.p1.y - seg.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = sideSign * distance * dx / len;\n\t\tvar uy = sideSign * distance * dy / len;\n\t\toffset.p0.x = seg.p0.x - uy;\n\t\toffset.p0.y = seg.p0.y + ux;\n\t\toffset.p1.x = seg.p1.x - uy;\n\t\toffset.p1.y = seg.p1.y + ux;\n\t},\n\taddFilletArc: function (p, startAngle, endAngle, direction, radius) {\n\t\tvar directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n\t\tvar totalAngle = Math.abs(startAngle - endAngle);\n\t\tvar nSegs = Math.trunc(totalAngle / this.filletAngleQuantum + 0.5);\n\t\tif (nSegs < 1) return null;\n\t\tvar initAngle = null, currAngleInc = null;\n\t\tinitAngle = 0.0;\n\t\tcurrAngleInc = totalAngle / nSegs;\n\t\tvar currAngle = initAngle;\n\t\tvar pt = new Coordinate();\n\t\twhile (currAngle < totalAngle) {\n\t\t\tvar angle = startAngle + directionFactor * currAngle;\n\t\t\tpt.x = p.x + radius * Math.cos(angle);\n\t\t\tpt.y = p.y + radius * Math.sin(angle);\n\t\t\tthis.segList.addPt(pt);\n\t\t\tcurrAngle += currAngleInc;\n\t\t}\n\t},\n\taddInsideTurn: function (orientation, addStartPoint) {\n\t\tthis.li.computeIntersection(this.offset0.p0, this.offset0.p1, this.offset1.p0, this.offset1.p1);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tthis.segList.addPt(this.li.getIntersection(0));\n\t\t} else {\n\t\t\tthis._hasNarrowConcaveAngle = true;\n\t\t\tif (this.offset0.p1.distance(this.offset1.p0) < this.distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n\t\t\t\tthis.segList.addPt(this.offset0.p1);\n\t\t\t} else {\n\t\t\t\tthis.segList.addPt(this.offset0.p1);\n\t\t\t\tif (this.closingSegLengthFactor > 0) {\n\t\t\t\t\tvar mid0 = new Coordinate((this.closingSegLengthFactor * this.offset0.p1.x + this.s1.x) / (this.closingSegLengthFactor + 1), (this.closingSegLengthFactor * this.offset0.p1.y + this.s1.y) / (this.closingSegLengthFactor + 1));\n\t\t\t\t\tthis.segList.addPt(mid0);\n\t\t\t\t\tvar mid1 = new Coordinate((this.closingSegLengthFactor * this.offset1.p0.x + this.s1.x) / (this.closingSegLengthFactor + 1), (this.closingSegLengthFactor * this.offset1.p0.y + this.s1.y) / (this.closingSegLengthFactor + 1));\n\t\t\t\t\tthis.segList.addPt(mid1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.segList.addPt(this.s1);\n\t\t\t\t}\n\t\t\t\tthis.segList.addPt(this.offset1.p0);\n\t\t\t}\n\t\t}\n\t},\n\tcreateCircle: function (p) {\n\t\tvar pt = new Coordinate(p.x + this.distance, p.y);\n\t\tthis.segList.addPt(pt);\n\t\tthis.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this.distance);\n\t\tthis.segList.closeRing();\n\t},\n\taddBevelJoin: function (offset0, offset1) {\n\t\tthis.segList.addPt(offset0.p1);\n\t\tthis.segList.addPt(offset1.p0);\n\t},\n\tinit: function (distance) {\n\t\tthis.distance = distance;\n\t\tthis.maxCurveSegmentError = distance * (1 - Math.cos(this.filletAngleQuantum / 2.0));\n\t\tthis.segList = new OffsetSegmentString();\n\t\tthis.segList.setPrecisionModel(this.precisionModel);\n\t\tthis.segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n\t},\n\taddCollinear: function (addStartPoint) {\n\t\tthis.li.computeIntersection(this.s0, this.s1, this.s1, this.s2);\n\t\tvar numInt = this.li.getIntersectionNum();\n\t\tif (numInt >= 2) {\n\t\t\tif (this.bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this.bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\t\tif (addStartPoint) this.segList.addPt(this.offset0.p1);\n\t\t\t\tthis.segList.addPt(this.offset1.p0);\n\t\t\t} else {\n\t\t\t\tthis.addFilletCorner(this.s1, this.offset0.p1, this.offset1.p0, CGAlgorithms.CLOCKWISE, this.distance);\n\t\t\t}\n\t\t}\n\t},\n\tcloseRing: function () {\n\t\tthis.segList.closeRing();\n\t},\n\thasNarrowConcaveAngle: function () {\n\t\treturn this._hasNarrowConcaveAngle;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetSegmentGenerator;\n\t}\n});\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n","import BufferParameters from './BufferParameters';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator';\nexport default function OffsetCurveBuilder() {\n\tthis.distance = 0.0;\n\tthis.precisionModel = null;\n\tthis.bufParams = null;\n\tlet precisionModel = arguments[0], bufParams = arguments[1];\n\tthis.precisionModel = precisionModel;\n\tthis.bufParams = bufParams;\n}\nextend(OffsetCurveBuilder.prototype, {\n\tgetOffsetCurve: function (inputPts, distance) {\n\t\tthis.distance = distance;\n\t\tif (distance === 0.0) return null;\n\t\tvar isRightSide = distance < 0.0;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tthis.computeOffsetCurve(inputPts, isRightSide, segGen);\n\t\t}\n\t\tvar curvePts = segGen.getCoordinates();\n\t\tif (isRightSide) CoordinateArrays.reverse(curvePts);\n\t\treturn curvePts;\n\t},\n\tcomputeSingleSidedBufferCurve: function (inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tif (isRightSide) {\n\t\t\tsegGen.addSegments(inputPts, true);\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tsegGen.addSegments(inputPts, false);\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.closeRing();\n\t},\n\tcomputeRingBufferCurve: function (inputPts, side, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tif (side === Position.RIGHT) distTol = -distTol;\n\t\tvar simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n = simp.length - 1;\n\t\tsegGen.initSideSegments(simp[n - 1], simp[0], side);\n\t\tfor (var i = 1; i <= n; i++) {\n\t\t\tvar addStartPoint = i !== 1;\n\t\t\tsegGen.addNextSegment(simp[i], addStartPoint);\n\t\t}\n\t\tsegGen.closeRing();\n\t},\n\tcomputeLineBufferCurve: function (inputPts, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n1 = simp1.length - 1;\n\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\tvar n2 = simp2.length - 1;\n\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp2[1], simp2[0]);\n\t\tsegGen.closeRing();\n\t},\n\tcomputePointCurve: function (pt, segGen) {\n\t\tswitch (this.bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tsegGen.createCircle(pt);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tsegGen.createSquare(pt);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetLineCurve: function (inputPts, distance) {\n\t\tthis.distance = distance;\n\t\tif (distance < 0.0 && !this.bufParams.isSingleSided()) return null;\n\t\tif (distance === 0.0) return null;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tif (this.bufParams.isSingleSided()) {\n\t\t\t\tvar isRightSide = distance < 0.0;\n\t\t\t\tthis.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n\t\t\t} else this.computeLineBufferCurve(inputPts, segGen);\n\t\t}\n\t\tvar lineCoord = segGen.getCoordinates();\n\t\treturn lineCoord;\n\t},\n\tgetBufferParameters: function () {\n\t\treturn this.bufParams;\n\t},\n\tsimplifyTolerance: function (bufDistance) {\n\t\treturn bufDistance * this.bufParams.getSimplifyFactor();\n\t},\n\tgetRingCurve: function (inputPts, side, distance) {\n\t\tthis.distance = distance;\n\t\tif (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\n\t\tif (distance === 0.0) {\n\t\t\treturn OffsetCurveBuilder.copyCoordinates(inputPts);\n\t\t}\n\t\tvar segGen = this.getSegGen(distance);\n\t\tthis.computeRingBufferCurve(inputPts, side, segGen);\n\t\treturn segGen.getCoordinates();\n\t},\n\tcomputeOffsetCurve: function (inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tif (isRightSide) {\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t},\n\tgetSegGen: function (distance) {\n\t\treturn new OffsetSegmentGenerator(this.precisionModel, this.bufParams, distance);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetCurveBuilder;\n\t}\n});\nOffsetCurveBuilder.copyCoordinates = function (pts) {\n\tvar copy = new Array(pts.length).fill(null);\n\tfor (var i = 0; i < copy.length; i++) {\n\t\tcopy[i] = new Coordinate(pts[i]);\n\t}\n\treturn copy;\n};\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport hasInterface from '../../../../../hasInterface';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport DirectedEdge from '../../geomgraph/DirectedEdge';\nimport LineSegment from '../../geom/LineSegment';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default function SubgraphDepthLocater() {\n\tthis.subgraphs = null;\n\tthis.seg = new LineSegment();\n\tthis.cga = new CGAlgorithms();\n\tlet subgraphs = arguments[0];\n\tthis.subgraphs = subgraphs;\n}\nextend(SubgraphDepthLocater.prototype, {\n\tfindStabbedSegments: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet stabbingRayLeftPt = arguments[0];\n\t\t\tvar stabbedSegments = new ArrayList();\n\t\t\tfor (var i = this.subgraphs.iterator(); i.hasNext(); ) {\n\t\t\t\tvar bsg = i.next();\n\t\t\t\tvar env = bsg.getEnvelope();\n\t\t\t\tif (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\n\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n\t\t\t}\n\t\t\treturn stabbedSegments;\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tthis.seg.p0 = pts[i];\n\t\t\t\t\tthis.seg.p1 = pts[i + 1];\n\t\t\t\t\tif (this.seg.p0.y > this.seg.p1.y) this.seg.reverse();\n\t\t\t\t\tvar maxx = Math.max(this.seg.p0.x, this.seg.p1.x);\n\t\t\t\t\tif (maxx < stabbingRayLeftPt.x) continue;\n\t\t\t\t\tif (this.seg.isHorizontal()) continue;\n\t\t\t\t\tif (stabbingRayLeftPt.y < this.seg.p0.y || stabbingRayLeftPt.y > this.seg.p1.y) continue;\n\t\t\t\t\tif (CGAlgorithms.computeOrientation(this.seg.p0, this.seg.p1, stabbingRayLeftPt) === CGAlgorithms.RIGHT) continue;\n\t\t\t\t\tvar depth = dirEdge.getDepth(Position.LEFT);\n\t\t\t\t\tif (!this.seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\n\t\t\t\t\tvar ds = new DepthSegment(this.seg, depth);\n\t\t\t\t\tstabbedSegments.add(ds);\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\t\t\t\tvar de = i.next();\n\t\t\t\t\tif (!de.isForward()) continue;\n\t\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDepth: function (p) {\n\t\tvar stabbedSegments = this.findStabbedSegments(p);\n\t\tif (stabbedSegments.size() === 0) return 0;\n\t\tvar ds = Collections.min(stabbedSegments);\n\t\treturn ds.leftDepth;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SubgraphDepthLocater;\n\t}\n});\nfunction DepthSegment() {\n\tthis.upwardSeg = null;\n\tthis.leftDepth = null;\n\tlet seg = arguments[0], depth = arguments[1];\n\tthis.upwardSeg = new LineSegment(seg);\n\tthis.leftDepth = depth;\n}\nextend(DepthSegment.prototype, {\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\tif (this.upwardSeg.minX() >= other.upwardSeg.maxX()) return 1;\n\t\tif (this.upwardSeg.maxX() <= other.upwardSeg.minX()) return -1;\n\t\tvar orientIndex = this.upwardSeg.orientationIndex(other.upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\torientIndex = -1 * other.upwardSeg.orientationIndex(this.upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\treturn this.upwardSeg.compareTo(other.upwardSeg);\n\t},\n\tcompareX: function (seg0, seg1) {\n\t\tvar compare0 = seg0.p0.compareTo(seg1.p0);\n\t\tif (compare0 !== 0) return compare0;\n\t\treturn seg0.p1.compareTo(seg1.p1);\n\t},\n\ttoString: function () {\n\t\treturn this.upwardSeg.toString();\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn DepthSegment;\n\t}\n});\nSubgraphDepthLocater.DepthSegment = DepthSegment;\n","import Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport Position from '../../geomgraph/Position';\nimport Point from '../../geom/Point';\nimport NodedSegmentString from '../../noding/NodedSegmentString';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport Label from '../../geomgraph/Label';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport MultiLineString from '../../geom/MultiLineString';\nimport Triangle from '../../geom/Triangle';\nexport default function OffsetCurveSetBuilder() {\n\tthis.inputGeom = null;\n\tthis.distance = null;\n\tthis.curveBuilder = null;\n\tthis.curveList = new ArrayList();\n\tlet inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2];\n\tthis.inputGeom = inputGeom;\n\tthis.distance = distance;\n\tthis.curveBuilder = curveBuilder;\n}\nextend(OffsetCurveSetBuilder.prototype, {\n\taddPoint: function (p) {\n\t\tif (this.distance <= 0.0) return null;\n\t\tvar coord = p.getCoordinates();\n\t\tvar curve = this.curveBuilder.getLineCurve(coord, this.distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddPolygon: function (p) {\n\t\tvar offsetDistance = this.distance;\n\t\tvar offsetSide = Position.LEFT;\n\t\tif (this.distance < 0.0) {\n\t\t\toffsetDistance = -this.distance;\n\t\t\toffsetSide = Position.RIGHT;\n\t\t}\n\t\tvar shell = p.getExteriorRing();\n\t\tvar shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n\t\tif (this.distance < 0.0 && this.isErodedCompletely(shell, this.distance)) return null;\n\t\tif (this.distance <= 0.0 && shellCoord.length < 3) return null;\n\t\tthis.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n\t\t\tif (this.distance > 0.0 && this.isErodedCompletely(hole, -this.distance)) continue;\n\t\t\tthis.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\tisTriangleErodedCompletely: function (triangleCoord, bufferDistance) {\n\t\tvar tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n\t\tvar inCentre = tri.inCentre();\n\t\tvar distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n\t\treturn distToCentre < Math.abs(bufferDistance);\n\t},\n\taddLineString: function (line) {\n\t\tif (this.distance <= 0.0 && !this.curveBuilder.getBufferParameters().isSingleSided()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tvar curve = this.curveBuilder.getLineCurve(coord, this.distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddCurve: function (coord, leftLoc, rightLoc) {\n\t\tif (coord === null || coord.length < 2) return null;\n\t\tvar e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n\t\tthis.curveList.add(e);\n\t},\n\tgetCurves: function () {\n\t\tthis.add(this.inputGeom);\n\t\treturn this.curveList;\n\t},\n\taddPolygonRing: function (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n\t\tif (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\n\t\tvar leftLoc = cwLeftLoc;\n\t\tvar rightLoc = cwRightLoc;\n\t\tif (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n\t\t\tleftLoc = cwRightLoc;\n\t\t\trightLoc = cwLeftLoc;\n\t\t\tside = Position.opposite(side);\n\t\t}\n\t\tvar curve = this.curveBuilder.getRingCurve(coord, side, offsetDistance);\n\t\tthis.addCurve(curve, leftLoc, rightLoc);\n\t},\n\tadd: function (g) {\n\t\tif (g.isEmpty()) return null;\n\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t},\n\tisErodedCompletely: function (ring, bufferDistance) {\n\t\tvar ringCoord = ring.getCoordinates();\n\t\tvar minDiam = 0.0;\n\t\tif (ringCoord.length < 4) return bufferDistance < 0;\n\t\tif (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\n\t\tvar env = ring.getEnvelopeInternal();\n\t\tvar envMinDimension = Math.min(env.getHeight(), env.getWidth());\n\t\tif (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\n\t\treturn false;\n\t},\n\taddCollection: function (gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetCurveSetBuilder;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nexport default function IntersectionAdder() {\n\tthis._hasIntersection = false;\n\tthis.hasProper = false;\n\tthis.hasProperInterior = false;\n\tthis.hasInterior = false;\n\tthis.properIntersectionPoint = null;\n\tthis.li = null;\n\tthis.isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numInteriorIntersections = 0;\n\tthis.numProperIntersections = 0;\n\tthis.numTests = 0;\n\tlet li = arguments[0];\n\tthis.li = li;\n}\nextend(IntersectionAdder.prototype, {\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this.li.getIntersectionNum() === 1) {\n\t\t\t\tif (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.size() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function () {\n\t\treturn this.properIntersectionPoint;\n\t},\n\thasProperInteriorIntersection: function () {\n\t\treturn this.hasProperInterior;\n\t},\n\tgetLineIntersector: function () {\n\t\treturn this.li;\n\t},\n\thasProperIntersection: function () {\n\t\treturn this.hasProper;\n\t},\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tthis.numIntersections++;\n\t\t\tif (this.li.isInteriorIntersection()) {\n\t\t\t\tthis.numInteriorIntersections++;\n\t\t\t\tthis.hasInterior = true;\n\t\t\t}\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\n\t\t\t\tif (this.li.isProper()) {\n\t\t\t\t\tthis.numProperIntersections++;\n\t\t\t\t\tthis.hasProper = true;\n\t\t\t\t\tthis.hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\thasIntersection: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\thasInteriorIntersection: function () {\n\t\treturn this.hasInterior;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn IntersectionAdder;\n\t}\n});\nIntersectionAdder.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n","import Location from '../../geom/Location';\nimport BufferSubgraph from './BufferSubgraph';\nimport PolygonBuilder from '../overlay/PolygonBuilder';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport MCIndexNoder from '../../noding/MCIndexNoder';\nimport OffsetCurveBuilder from './OffsetCurveBuilder';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport SubgraphDepthLocater from './SubgraphDepthLocater';\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport IntersectionAdder from '../../noding/IntersectionAdder';\nimport Edge from '../../geomgraph/Edge';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function BufferBuilder() {\n\tthis.bufParams = null;\n\tthis.workingPrecisionModel = null;\n\tthis.workingNoder = null;\n\tthis.geomFact = null;\n\tthis.graph = null;\n\tthis.edgeList = new EdgeList();\n\tlet bufParams = arguments[0];\n\tthis.bufParams = bufParams;\n}\nextend(BufferBuilder.prototype, {\n\tsetWorkingPrecisionModel: function (pm) {\n\t\tthis.workingPrecisionModel = pm;\n\t},\n\tinsertUniqueEdge: function (e) {\n\t\tvar existingEdge = this.edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t\tvar mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n\t\t\tvar existingDelta = existingEdge.getDepthDelta();\n\t\t\tvar newDelta = existingDelta + mergeDelta;\n\t\t\texistingEdge.setDepthDelta(newDelta);\n\t\t} else {\n\t\t\tthis.edgeList.add(e);\n\t\t\te.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n\t\t}\n\t},\n\tbuildSubgraphs: function (subgraphList, polyBuilder) {\n\t\tvar processedGraphs = new ArrayList();\n\t\tfor (var i = subgraphList.iterator(); i.hasNext(); ) {\n\t\t\tvar subgraph = i.next();\n\t\t\tvar p = subgraph.getRightmostCoordinate();\n\t\t\tvar locater = new SubgraphDepthLocater(processedGraphs);\n\t\t\tvar outsideDepth = locater.getDepth(p);\n\t\t\tsubgraph.computeDepth(outsideDepth);\n\t\t\tsubgraph.findResultEdges();\n\t\t\tprocessedGraphs.add(subgraph);\n\t\t\tpolyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n\t\t}\n\t},\n\tcreateSubgraphs: function (graph) {\n\t\tvar subgraphList = new ArrayList();\n\t\tfor (var i = graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isVisited()) {\n\t\t\t\tvar subgraph = new BufferSubgraph();\n\t\t\t\tsubgraph.create(node);\n\t\t\t\tsubgraphList.add(subgraph);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(subgraphList, Collections.reverseOrder());\n\t\treturn subgraphList;\n\t},\n\tcreateEmptyResultGeometry: function () {\n\t\tvar emptyGeom = this.geomFact.createPolygon();\n\t\treturn emptyGeom;\n\t},\n\tgetNoder: function (precisionModel) {\n\t\tif (this.workingNoder !== null) return this.workingNoder;\n\t\tvar noder = new MCIndexNoder();\n\t\tvar li = new RobustLineIntersector();\n\t\tli.setPrecisionModel(precisionModel);\n\t\tnoder.setSegmentIntersector(new IntersectionAdder(li));\n\t\treturn noder;\n\t},\n\tbuffer: function (g, distance) {\n\t\tvar precisionModel = this.workingPrecisionModel;\n\t\tif (precisionModel === null) precisionModel = g.getPrecisionModel();\n\t\tthis.geomFact = g.getFactory();\n\t\tvar curveBuilder = new OffsetCurveBuilder(precisionModel, this.bufParams);\n\t\tvar curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n\t\tvar bufferSegStrList = curveSetBuilder.getCurves();\n\t\tif (bufferSegStrList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tthis.computeNodedEdges(bufferSegStrList, precisionModel);\n\t\tthis.graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tthis.graph.addEdges(this.edgeList.getEdges());\n\t\tvar subgraphList = this.createSubgraphs(this.graph);\n\t\tvar polyBuilder = new PolygonBuilder(this.geomFact);\n\t\tthis.buildSubgraphs(subgraphList, polyBuilder);\n\t\tvar resultPolyList = polyBuilder.getPolygons();\n\t\tif (resultPolyList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tvar resultGeom = this.geomFact.buildGeometry(resultPolyList);\n\t\treturn resultGeom;\n\t},\n\tcomputeNodedEdges: function (bufferSegStrList, precisionModel) {\n\t\tvar noder = this.getNoder(precisionModel);\n\t\tnoder.computeNodes(bufferSegStrList);\n\t\tvar nodedSegStrings = noder.getNodedSubstrings();\n\t\tfor (var i = nodedSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar segStr = i.next();\n\t\t\tvar pts = segStr.getCoordinates();\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\n\t\t\tvar oldLabel = segStr.getData();\n\t\t\tvar edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n\t\t\tthis.insertUniqueEdge(edge);\n\t\t}\n\t},\n\tsetNoder: function (noder) {\n\t\tthis.workingNoder = noder;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferBuilder;\n\t}\n});\nBufferBuilder.depthDelta = function (label) {\n\tvar lLoc = label.getLocation(0, Position.LEFT);\n\tvar rLoc = label.getLocation(0, Position.RIGHT);\n\tif (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\n\treturn 0;\n};\nBufferBuilder.convertSegStrings = function (it) {\n\tvar fact = new GeometryFactory();\n\tvar lines = new ArrayList();\n\twhile (it.hasNext()) {\n\t\tvar ss = it.next();\n\t\tvar line = fact.createLineString(ss.getCoordinates());\n\t\tlines.add(line);\n\t}\n\treturn fact.buildGeometry(lines);\n};\n","import GeometryFactory from '../geom/GeometryFactory';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nexport default function NodingValidator() {\n\tthis.li = new RobustLineIntersector();\n\tthis.segStrings = null;\n\tlet segStrings = arguments[0];\n\tthis.segStrings = segStrings;\n}\nextend(NodingValidator.prototype, {\n\tcheckEndPtVertexIntersections: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[0], this.segStrings);\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[pts.length - 1], this.segStrings);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet testPt = arguments[0], segStrings = arguments[1];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tfor (var j = 1; j < pts.length - 1; j++) {\n\t\t\t\t\tif (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckInteriorIntersections: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss0 = i.next();\n\t\t\t\tfor (var j = this.segStrings.iterator(); j.hasNext(); ) {\n\t\t\t\t\tvar ss1 = j.next();\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, ss1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ss0 = arguments[0], ss1 = arguments[1];\n\t\t\tvar pts0 = ss0.getCoordinates();\n\t\t\tvar pts1 = ss1.getCoordinates();\n\t\t\tfor (var i0 = 0; i0 < pts0.length - 1; i0++) {\n\t\t\t\tfor (var i1 = 0; i1 < pts1.length - 1; i1++) {\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, i0, ss1, i1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3];\n\t\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\t\tif (this.li.hasIntersection()) {\n\t\t\t\tif (this.li.isProper() || this.hasInteriorIntersection(this.li, p00, p01) || this.hasInteriorIntersection(this.li, p10, p11)) {\n\t\t\t\t\tthrow new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckValid: function () {\n\t\tthis.checkEndPtVertexIntersections();\n\t\tthis.checkInteriorIntersections();\n\t\tthis.checkCollapses();\n\t},\n\tcheckCollapses: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.checkCollapses(ss);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet ss = arguments[0];\n\t\t\tvar pts = ss.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length - 2; i++) {\n\t\t\t\tthis.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\n\t\t\t}\n\t\t}\n\t},\n\thasInteriorIntersection: function (li, p0, p1) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tvar intPt = li.getIntersection(i);\n\t\t\tif (!(intPt.equals(p0) || intPt.equals(p1))) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tcheckCollapse: function (p0, p1, p2) {\n\t\tif (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodingValidator;\n\t}\n});\nNodingValidator.fact = new GeometryFactory();\n","import Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nexport default function HotPixel() {\n\tthis.li = null;\n\tthis.pt = null;\n\tthis.originalPt = null;\n\tthis.ptScaled = null;\n\tthis.p0Scaled = null;\n\tthis.p1Scaled = null;\n\tthis.scaleFactor = null;\n\tthis.minx = null;\n\tthis.maxx = null;\n\tthis.miny = null;\n\tthis.maxy = null;\n\tthis.corner = new Array(4).fill(null);\n\tthis.safeEnv = null;\n\tlet pt = arguments[0], scaleFactor = arguments[1], li = arguments[2];\n\tthis.originalPt = pt;\n\tthis.pt = pt;\n\tthis.scaleFactor = scaleFactor;\n\tthis.li = li;\n\tif (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\n\tif (scaleFactor !== 1.0) {\n\t\tthis.pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n\t\tthis.p0Scaled = new Coordinate();\n\t\tthis.p1Scaled = new Coordinate();\n\t}\n\tthis.initCorners(this.pt);\n}\nextend(HotPixel.prototype, {\n\tintersectsScaled: function (p0, p1) {\n\t\tvar segMinx = Math.min(p0.x, p1.x);\n\t\tvar segMaxx = Math.max(p0.x, p1.x);\n\t\tvar segMiny = Math.min(p0.y, p1.y);\n\t\tvar segMaxy = Math.max(p0.y, p1.y);\n\t\tvar isOutsidePixelEnv = this.maxx < segMinx || this.minx > segMaxx || this.maxy < segMiny || this.miny > segMaxy;\n\t\tif (isOutsidePixelEnv) return false;\n\t\tvar intersects = this.intersectsToleranceSquare(p0, p1);\n\t\tAssert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\n\t\treturn intersects;\n\t},\n\tinitCorners: function (pt) {\n\t\tvar tolerance = 0.5;\n\t\tthis.minx = pt.x - tolerance;\n\t\tthis.maxx = pt.x + tolerance;\n\t\tthis.miny = pt.y - tolerance;\n\t\tthis.maxy = pt.y + tolerance;\n\t\tthis.corner[0] = new Coordinate(this.maxx, this.maxy);\n\t\tthis.corner[1] = new Coordinate(this.minx, this.maxy);\n\t\tthis.corner[2] = new Coordinate(this.minx, this.miny);\n\t\tthis.corner[3] = new Coordinate(this.maxx, this.miny);\n\t},\n\tintersects: function (p0, p1) {\n\t\tif (this.scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\n\t\tthis.copyScaled(p0, this.p0Scaled);\n\t\tthis.copyScaled(p1, this.p1Scaled);\n\t\treturn this.intersectsScaled(this.p0Scaled, this.p1Scaled);\n\t},\n\tscale: function (val) {\n\t\treturn Math.round(val * this.scaleFactor);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.originalPt;\n\t},\n\tcopyScaled: function (p, pScaled) {\n\t\tpScaled.x = this.scale(p.x);\n\t\tpScaled.y = this.scale(p.y);\n\t},\n\tgetSafeEnvelope: function () {\n\t\tif (this.safeEnv === null) {\n\t\t\tvar safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this.scaleFactor;\n\t\t\tthis.safeEnv = new Envelope(this.originalPt.x - safeTolerance, this.originalPt.x + safeTolerance, this.originalPt.y - safeTolerance, this.originalPt.y + safeTolerance);\n\t\t}\n\t\treturn this.safeEnv;\n\t},\n\tintersectsPixelClosure: function (p0, p1) {\n\t\tthis.li.computeIntersection(p0, p1, this.corner[0], this.corner[1]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[1], this.corner[2]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[2], this.corner[3]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[3], this.corner[0]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tintersectsToleranceSquare: function (p0, p1) {\n\t\tvar intersectsLeft = false;\n\t\tvar intersectsBottom = false;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[0], this.corner[1]);\n\t\tif (this.li.isProper()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[1], this.corner[2]);\n\t\tif (this.li.isProper()) return true;\n\t\tif (this.li.hasIntersection()) intersectsLeft = true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[2], this.corner[3]);\n\t\tif (this.li.isProper()) return true;\n\t\tif (this.li.hasIntersection()) intersectsBottom = true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[3], this.corner[0]);\n\t\tif (this.li.isProper()) return true;\n\t\tif (intersectsLeft && intersectsBottom) return true;\n\t\tif (p0.equals(this.pt)) return true;\n\t\tif (p1.equals(this.pt)) return true;\n\t\treturn false;\n\t},\n\taddSnappedNode: function (segStr, segIndex) {\n\t\tvar p0 = segStr.getCoordinate(segIndex);\n\t\tvar p1 = segStr.getCoordinate(segIndex + 1);\n\t\tif (this.intersects(p0, p1)) {\n\t\t\tsegStr.addIntersection(this.getCoordinate(), segIndex);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HotPixel;\n\t}\n});\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction';\nimport ItemVisitor from '../../index/ItemVisitor';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function MCIndexPointSnapper() {\n\tthis.index = null;\n\tlet index = arguments[0];\n\tthis.index = index;\n}\nextend(MCIndexPointSnapper.prototype, {\n\tsnap: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet hotPixel = arguments[0];\n\t\t\treturn this.snap(hotPixel, null, -1);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\t\t\tvar pixelEnv = hotPixel.getSafeEnvelope();\n\t\t\tvar hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex);\n\t\t\tthis.index.query(pixelEnv, {\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [ItemVisitor];\n\t\t\t\t},\n\t\t\t\tvisitItem: function (item) {\n\t\t\t\t\tvar testChain = item;\n\t\t\t\t\ttestChain.select(pixelEnv, hotPixelSnapAction);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn hotPixelSnapAction.isNodeAdded();\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexPointSnapper;\n\t}\n});\nfunction HotPixelSnapAction() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis.hotPixel = null;\n\tthis.parentEdge = null;\n\tthis.hotPixelVertexIndex = null;\n\tthis._isNodeAdded = false;\n\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\tthis.hotPixel = hotPixel;\n\tthis.parentEdge = parentEdge;\n\tthis.hotPixelVertexIndex = hotPixelVertexIndex;\n}\ninherits(HotPixelSnapAction, MonotoneChainSelectAction);\nextend(HotPixelSnapAction.prototype, {\n\tisNodeAdded: function () {\n\t\treturn this._isNodeAdded;\n\t},\n\tselect: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tvar ss = mc.getContext();\n\t\t\tif (this.parentEdge !== null) {\n\t\t\t\tif (ss === this.parentEdge && startIndex === this.hotPixelVertexIndex) return null;\n\t\t\t}\n\t\t\tthis._isNodeAdded = this.hotPixel.addSnappedNode(ss, startIndex);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HotPixelSnapAction;\n\t}\n});\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function InteriorIntersectionFinderAdder() {\n\tthis.li = null;\n\tthis.interiorIntersections = null;\n\tlet li = arguments[0];\n\tthis.li = li;\n\tthis.interiorIntersections = new ArrayList();\n}\nextend(InteriorIntersectionFinderAdder.prototype, {\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tif (this.li.isInteriorIntersection()) {\n\t\t\t\tfor (var intIndex = 0; intIndex < this.li.getIntersectionNum(); intIndex++) {\n\t\t\t\t\tthis.interiorIntersections.add(this.li.getIntersection(intIndex));\n\t\t\t\t}\n\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\n\t\t\t}\n\t\t}\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\tgetInteriorIntersections: function () {\n\t\treturn this.interiorIntersections;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorIntersectionFinderAdder;\n\t}\n});\n","import NodingValidator from '../NodingValidator';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport Noder from '../Noder';\nimport MCIndexNoder from '../MCIndexNoder';\nimport NodedSegmentString from '../NodedSegmentString';\nimport HotPixel from './HotPixel';\nimport extend from '../../../../../extend';\nimport Exception from '../../../../../java/lang/Exception';\nimport MCIndexPointSnapper from './MCIndexPointSnapper';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder';\nexport default function MCIndexSnapRounder() {\n\tthis.pm = null;\n\tthis.li = null;\n\tthis.scaleFactor = null;\n\tthis.noder = null;\n\tthis.pointSnapper = null;\n\tthis.nodedSegStrings = null;\n\tlet pm = arguments[0];\n\tthis.pm = pm;\n\tthis.li = new RobustLineIntersector();\n\tthis.li.setPrecisionModel(pm);\n\tthis.scaleFactor = pm.getScale();\n}\nextend(MCIndexSnapRounder.prototype, {\n\tcheckCorrectness: function (inputSegmentStrings) {\n\t\tvar resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n\t\tvar nv = new NodingValidator(resultSegStrings);\n\t\ttry {\n\t\t\tnv.checkValid();\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tex.printStackTrace();\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetNodedSubstrings: function () {\n\t\treturn NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);\n\t},\n\tsnapRound: function (segStrings, li) {\n\t\tvar intersections = this.findInteriorIntersections(segStrings, li);\n\t\tthis.computeIntersectionSnaps(intersections);\n\t\tthis.computeVertexSnaps(segStrings);\n\t},\n\tfindInteriorIntersections: function (segStrings, li) {\n\t\tvar intFinderAdder = new InteriorIntersectionFinderAdder(li);\n\t\tthis.noder.setSegmentIntersector(intFinderAdder);\n\t\tthis.noder.computeNodes(segStrings);\n\t\treturn intFinderAdder.getInteriorIntersections();\n\t},\n\tcomputeVertexSnaps: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i0 = edges.iterator(); i0.hasNext(); ) {\n\t\t\t\tvar edge0 = i0.next();\n\t\t\t\tthis.computeVertexSnaps(edge0);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof NodedSegmentString) {\n\t\t\tlet e = arguments[0];\n\t\t\tvar pts0 = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts0.length; i++) {\n\t\t\t\tvar hotPixel = new HotPixel(pts0[i], this.scaleFactor, this.li);\n\t\t\t\tvar isNodeAdded = this.pointSnapper.snap(hotPixel, e, i);\n\t\t\t\tif (isNodeAdded) {\n\t\t\t\t\te.addIntersection(pts0[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeNodes: function (inputSegmentStrings) {\n\t\tthis.nodedSegStrings = inputSegmentStrings;\n\t\tthis.noder = new MCIndexNoder();\n\t\tthis.pointSnapper = new MCIndexPointSnapper(this.noder.getIndex());\n\t\tthis.snapRound(inputSegmentStrings, this.li);\n\t},\n\tcomputeIntersectionSnaps: function (snapPts) {\n\t\tfor (var it = snapPts.iterator(); it.hasNext(); ) {\n\t\t\tvar snapPt = it.next();\n\t\t\tvar hotPixel = new HotPixel(snapPt, this.scaleFactor, this.li);\n\t\t\tthis.pointSnapper.snap(hotPixel);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexSnapRounder;\n\t}\n});\n","import BufferParameters from './BufferParameters';\nimport Geometry from '../../geom/Geometry';\nimport BufferBuilder from './BufferBuilder';\nimport ScaledNoder from '../../noding/ScaledNoder';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport MathUtil from '../../math/MathUtil';\nimport PrecisionModel from '../../geom/PrecisionModel';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder';\nexport default function BufferOp() {\n\tthis.argGeom = null;\n\tthis.distance = null;\n\tthis.bufParams = new BufferParameters();\n\tthis.resultGeometry = null;\n\tthis.saveException = null;\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tthis.argGeom = g;\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bufParams = arguments[1];\n\t\tthis.argGeom = g;\n\t\tthis.bufParams = bufParams;\n\t}\n}\nextend(BufferOp.prototype, {\n\tbufferFixedPrecision: function (fixedPM) {\n\t\tvar noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n\t\tvar bufBuilder = new BufferBuilder(this.bufParams);\n\t\tbufBuilder.setWorkingPrecisionModel(fixedPM);\n\t\tbufBuilder.setNoder(noder);\n\t\tthis.resultGeometry = bufBuilder.buffer(this.argGeom, this.distance);\n\t},\n\tbufferReducedPrecision: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.bufferReducedPrecision(precDigits);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tif (ex instanceof TopologyException) {\n\t\t\t\t\t\tthis.saveException = ex;\n\t\t\t\t\t} else throw ex;\n\t\t\t\t} finally {}\n\t\t\t\tif (this.resultGeometry !== null) return null;\n\t\t\t}\n\t\t\tthrow this.saveException;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet precisionDigits = arguments[0];\n\t\t\tvar sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this.argGeom, this.distance, precisionDigits);\n\t\t\tvar fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n\t\t\tthis.bufferFixedPrecision(fixedPM);\n\t\t}\n\t},\n\tcomputeGeometry: function () {\n\t\tthis.bufferOriginalPrecision();\n\t\tif (this.resultGeometry !== null) return null;\n\t\tvar argPM = this.argGeom.getFactory().getPrecisionModel();\n\t\tif (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision();\n\t},\n\tsetQuadrantSegments: function (quadrantSegments) {\n\t\tthis.bufParams.setQuadrantSegments(quadrantSegments);\n\t},\n\tbufferOriginalPrecision: function () {\n\t\ttry {\n\t\t\tvar bufBuilder = new BufferBuilder(this.bufParams);\n\t\t\tthis.resultGeometry = bufBuilder.buffer(this.argGeom, this.distance);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tthis.saveException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetResultGeometry: function (distance) {\n\t\tthis.distance = distance;\n\t\tthis.computeGeometry();\n\t\treturn this.resultGeometry;\n\t},\n\tsetEndCapStyle: function (endCapStyle) {\n\t\tthis.bufParams.setEndCapStyle(endCapStyle);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferOp;\n\t}\n});\nBufferOp.bufferOp = function () {\n\tif (arguments.length === 2) {\n\t\tlet g = arguments[0], distance = arguments[1];\n\t\tvar gBuf = new BufferOp(g);\n\t\tvar geomBuf = gBuf.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t} else if (arguments.length === 3) {\n\t\tif (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g);\n\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t} else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\tlet g = arguments[0], distance = arguments[1], params = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g, params);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t}\n\t} else if (arguments.length === 4) {\n\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3];\n\t\tvar bufOp = new BufferOp(g);\n\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\tbufOp.setEndCapStyle(endCapStyle);\n\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t}\n};\nBufferOp.precisionScaleFactor = function (g, distance, maxPrecisionDigits) {\n\tvar env = g.getEnvelopeInternal();\n\tvar envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n\tvar expandByDistance = distance > 0.0 ? distance : 0.0;\n\tvar bufEnvMax = envMax + 2 * expandByDistance;\n\tvar bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n\tvar minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n\tvar scaleFactor = Math.pow(10.0, minUnitLog10);\n\treturn scaleFactor;\n};\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\nBufferOp.MAX_PRECISION_DIGITS = 12;\n","import Polygon from '../Polygon';\nimport extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default function PolygonExtracter() {\n\tthis.comps = null;\n\tlet comps = arguments[0];\n\tthis.comps = comps;\n}\nextend(PolygonExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Polygon) this.comps.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonExtracter;\n\t}\n});\nPolygonExtracter.getPolygons = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn PolygonExtracter.getPolygons(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], list = arguments[1];\n\t\tif (geom instanceof Polygon) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PolygonExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n","import extend from '../../../../../extend';\nexport default function GeometryLocation() {\n\tthis.component = null;\n\tthis.segIndex = null;\n\tthis.pt = null;\n\tif (arguments.length === 2) {\n\t\tlet component = arguments[0], pt = arguments[1];\n\t\tGeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n\t} else if (arguments.length === 3) {\n\t\tlet component = arguments[0], segIndex = arguments[1], pt = arguments[2];\n\t\tthis.component = component;\n\t\tthis.segIndex = segIndex;\n\t\tthis.pt = pt;\n\t}\n}\nextend(GeometryLocation.prototype, {\n\tisInsideArea: function () {\n\t\treturn this.segIndex === GeometryLocation.INSIDE_AREA;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tgetGeometryComponent: function () {\n\t\treturn this.component;\n\t},\n\tgetSegmentIndex: function () {\n\t\treturn this.segIndex;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryLocation;\n\t}\n});\nGeometryLocation.INSIDE_AREA = -1;\n","import Point from '../Point';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default function PointExtracter() {\n\tthis.pts = null;\n\tlet pts = arguments[0];\n\tthis.pts = pts;\n}\nextend(PointExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Point) this.pts.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn PointExtracter;\n\t}\n});\nPointExtracter.getPoints = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tif (geom instanceof Point) {\n\t\t\treturn Collections.singletonList(geom);\n\t\t}\n\t\treturn PointExtracter.getPoints(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], list = arguments[1];\n\t\tif (geom instanceof Point) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PointExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n","import LineString from '../../geom/LineString';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../../geom/GeometryFilter';\nexport default function ConnectedElementLocationFilter() {\n\tthis.locations = null;\n\tlet locations = arguments[0];\n\tthis.locations = locations;\n}\nextend(ConnectedElementLocationFilter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this.locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn ConnectedElementLocationFilter;\n\t}\n});\nConnectedElementLocationFilter.getLocations = function (geom) {\n\tvar locations = new ArrayList();\n\tgeom.apply(new ConnectedElementLocationFilter(locations));\n\treturn locations;\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport Double from '../../../../../java/lang/Double';\nimport PointExtracter from '../../geom/util/PointExtracter';\nimport extend from '../../../../../extend';\nimport ConnectedElementLocationFilter from './ConnectedElementLocationFilter';\nimport LineSegment from '../../geom/LineSegment';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport List from '../../../../../java/util/List';\nexport default function DistanceOp() {\n\tthis.geom = null;\n\tthis.terminateDistance = 0.0;\n\tthis.ptLocator = new PointLocator();\n\tthis.minDistanceLocation = null;\n\tthis.minDistance = Double.MAX_VALUE;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tDistanceOp.call(this, g0, g1, 0.0);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], terminateDistance = arguments[2];\n\t\tthis.geom = new Array(2).fill(null);\n\t\tthis.geom[0] = g0;\n\t\tthis.geom[1] = g1;\n\t\tthis.terminateDistance = terminateDistance;\n\t}\n}\nextend(DistanceOp.prototype, {\n\tcomputeContainmentDistance: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tvar locPtPoly = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance(0, locPtPoly);\n\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\tthis.computeContainmentDistance(1, locPtPoly);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet polyGeomIndex = arguments[0], locPtPoly = arguments[1];\n\t\t\tvar locationsIndex = 1 - polyGeomIndex;\n\t\t\tvar polys = PolygonExtracter.getPolygons(this.geom[polyGeomIndex]);\n\t\t\tif (polys.size() > 0) {\n\t\t\t\tvar insideLocs = ConnectedElementLocationFilter.getLocations(this.geom[locationsIndex]);\n\t\t\t\tthis.computeContainmentDistance(insideLocs, polys, locPtPoly);\n\t\t\t\tif (this.minDistance <= this.terminateDistance) {\n\t\t\t\t\tthis.minDistanceLocation[locationsIndex] = locPtPoly[0];\n\t\t\t\t\tthis.minDistanceLocation[polyGeomIndex] = locPtPoly[1];\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet locs = arguments[0], polys = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tfor (var i = 0; i < locs.size(); i++) {\n\t\t\t\t\tvar loc = locs.get(i);\n\t\t\t\t\tfor (var j = 0; j < polys.size(); j++) {\n\t\t\t\t\t\tthis.computeContainmentDistance(loc, polys.get(j), locPtPoly);\n\t\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n\t\t\t\tlet ptLoc = arguments[0], poly = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tvar pt = ptLoc.getCoordinate();\n\t\t\t\tif (Location.EXTERIOR !== this.ptLocator.locate(pt, poly)) {\n\t\t\t\t\tthis.minDistance = 0.0;\n\t\t\t\t\tlocPtPoly[0] = ptLoc;\n\t\t\t\t\tlocPtPoly[1] = new GeometryLocation(poly, pt);\n\t\t\t\t\t;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistanceLinesPoints: function (lines, points, locGeom) {\n\t\tfor (var i = 0; i < lines.size(); i++) {\n\t\t\tvar line = lines.get(i);\n\t\t\tfor (var j = 0; j < points.size(); j++) {\n\t\t\t\tvar pt = points.get(j);\n\t\t\t\tthis.computeMinDistance(line, pt, locGeom);\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeFacetDistance: function () {\n\t\tvar locGeom = new Array(2).fill(null);\n\t\tvar lines0 = LinearComponentExtracter.getLines(this.geom[0]);\n\t\tvar lines1 = LinearComponentExtracter.getLines(this.geom[1]);\n\t\tvar pts0 = PointExtracter.getPoints(this.geom[0]);\n\t\tvar pts1 = PointExtracter.getPoints(this.geom[1]);\n\t\tthis.computeMinDistanceLines(lines0, lines1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n\t\tthis.updateMinDistance(locGeom, true);\n\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistancePoints(pts0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t},\n\tnearestLocations: function () {\n\t\tthis.computeMinDistance();\n\t\treturn this.minDistanceLocation;\n\t},\n\tupdateMinDistance: function (locGeom, flip) {\n\t\tif (locGeom[0] === null) return null;\n\t\tif (flip) {\n\t\t\tthis.minDistanceLocation[0] = locGeom[1];\n\t\t\tthis.minDistanceLocation[1] = locGeom[0];\n\t\t} else {\n\t\t\tthis.minDistanceLocation[0] = locGeom[0];\n\t\t\tthis.minDistanceLocation[1] = locGeom[1];\n\t\t}\n\t},\n\tnearestPoints: function () {\n\t\tthis.computeMinDistance();\n\t\tvar nearestPts = [this.minDistanceLocation[0].getCoordinate(), this.minDistanceLocation[1].getCoordinate()];\n\t\treturn nearestPts;\n\t},\n\tcomputeMinDistance: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.minDistanceLocation !== null) return null;\n\t\t\tthis.minDistanceLocation = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance();\n\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\tthis.computeFacetDistance();\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n\t\t\t\tlet line = arguments[0], pt = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this.minDistance) return null;\n\t\t\t\tvar coord0 = line.getCoordinates();\n\t\t\t\tvar coord = pt.getCoordinate();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tvar dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n\t\t\t\t\tif (dist < this.minDistance) {\n\t\t\t\t\t\tthis.minDistance = dist;\n\t\t\t\t\t\tvar seg = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\tvar segClosestPoint = seg.closestPoint(coord);\n\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt, 0, coord);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n\t\t\t\tlet line0 = arguments[0], line1 = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this.minDistance) return null;\n\t\t\t\tvar coord0 = line0.getCoordinates();\n\t\t\t\tvar coord1 = line1.getCoordinates();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tfor (var j = 0; j < coord1.length - 1; j++) {\n\t\t\t\t\t\tvar dist = CGAlgorithms.distanceLineLine(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\n\t\t\t\t\t\tif (dist < this.minDistance) {\n\t\t\t\t\t\t\tthis.minDistance = dist;\n\t\t\t\t\t\t\tvar seg0 = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\t\tvar seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n\t\t\t\t\t\t\tvar closestPt = seg0.closestPoints(seg1);\n\t\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\n\t\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistancePoints: function (points0, points1, locGeom) {\n\t\tfor (var i = 0; i < points0.size(); i++) {\n\t\t\tvar pt0 = points0.get(i);\n\t\t\tfor (var j = 0; j < points1.size(); j++) {\n\t\t\t\tvar pt1 = points1.get(j);\n\t\t\t\tvar dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n\t\t\t\tif (dist < this.minDistance) {\n\t\t\t\t\tthis.minDistance = dist;\n\t\t\t\t\tlocGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n\t\t\t\t}\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tdistance: function () {\n\t\tif (this.geom[0] === null || this.geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\n\t\tif (this.geom[0].isEmpty() || this.geom[1].isEmpty()) return 0.0;\n\t\tthis.computeMinDistance();\n\t\treturn this.minDistance;\n\t},\n\tcomputeMinDistanceLines: function (lines0, lines1, locGeom) {\n\t\tfor (var i = 0; i < lines0.size(); i++) {\n\t\t\tvar line0 = lines0.get(i);\n\t\t\tfor (var j = 0; j < lines1.size(); j++) {\n\t\t\t\tvar line1 = lines1.get(j);\n\t\t\t\tthis.computeMinDistance(line0, line1, locGeom);\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DistanceOp;\n\t}\n});\nDistanceOp.distance = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.distance();\n};\nDistanceOp.isWithinDistance = function (g0, g1, distance) {\n\tvar distOp = new DistanceOp(g0, g1, distance);\n\treturn distOp.distance() <= distance;\n};\nDistanceOp.nearestPoints = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.nearestPoints();\n};\n","import CoordinateList from '../../geom/CoordinateList';\nimport extend from '../../../../../extend';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function EdgeString() {\n\tthis.factory = null;\n\tthis.directedEdges = new ArrayList();\n\tthis.coordinates = null;\n\tlet factory = arguments[0];\n\tthis.factory = factory;\n}\nextend(EdgeString.prototype, {\n\tgetCoordinates: function () {\n\t\tif (this.coordinates === null) {\n\t\t\tvar forwardDirectedEdges = 0;\n\t\t\tvar reverseDirectedEdges = 0;\n\t\t\tvar coordinateList = new CoordinateList();\n\t\t\tfor (var i = this.directedEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar directedEdge = i.next();\n\t\t\t\tif (directedEdge.getEdgeDirection()) {\n\t\t\t\t\tforwardDirectedEdges++;\n\t\t\t\t} else {\n\t\t\t\t\treverseDirectedEdges++;\n\t\t\t\t}\n\t\t\t\tcoordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\n\t\t\t}\n\t\t\tthis.coordinates = coordinateList.toCoordinateArray();\n\t\t\tif (reverseDirectedEdges > forwardDirectedEdges) {\n\t\t\t\tCoordinateArrays.reverse(this.coordinates);\n\t\t\t}\n\t\t}\n\t\treturn this.coordinates;\n\t},\n\ttoLineString: function () {\n\t\treturn this.factory.createLineString(this.getCoordinates());\n\t},\n\tadd: function (directedEdge) {\n\t\tthis.directedEdges.add(directedEdge);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeString;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function GraphComponent() {\n\tthis._isMarked = false;\n\tthis._isVisited = false;\n\tthis.data = null;\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tisMarked: function () {\n\t\treturn this._isMarked;\n\t},\n\tsetData: function (data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function () {\n\t\treturn this.data;\n\t},\n\tsetMarked: function (isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tgetContext: function () {\n\t\treturn this.data;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tsetContext: function (data) {\n\t\tthis.data = data;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GraphComponent;\n\t}\n});\nGraphComponent.getComponentWithVisitedState = function (i, visitedState) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tif (comp.isVisited() === visitedState) return comp;\n\t}\n\treturn null;\n};\nGraphComponent.setVisited = function (i, visited) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setVisited(visited);\n\t}\n};\nGraphComponent.setMarked = function (i, marked) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setMarked(marked);\n\t}\n};\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from '../geomgraph/Quadrant';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function DirectedEdge() {\n\tGraphComponent.apply(this);\n\tthis.parentEdge = null;\n\tthis.from = null;\n\tthis.to = null;\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.sym = null;\n\tthis.edgeDirection = null;\n\tthis.quadrant = null;\n\tthis.angle = null;\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tthis.from = from;\n\tthis.to = to;\n\tthis.edgeDirection = edgeDirection;\n\tthis.p0 = from.getCoordinate();\n\tthis.p1 = directionPt;\n\tvar dx = this.p1.x - this.p0.x;\n\tvar dy = this.p1.y - this.p0.y;\n\tthis.quadrant = Quadrant.quadrant(dx, dy);\n\tthis.angle = Math.atan2(dy, dx);\n}\ninherits(DirectedEdge, GraphComponent);\nextend(DirectedEdge.prototype, {\n\tisRemoved: function () {\n\t\treturn this.parentEdge === null;\n\t},\n\tcompareDirection: function (e) {\n\t\tif (this.quadrant > e.quadrant) return 1;\n\t\tif (this.quadrant < e.quadrant) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e.p0, e.p1, this.p1);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.from.getCoordinate();\n\t},\n\tprint: function (out) {\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + this.angle);\n\t},\n\tgetDirectionPt: function () {\n\t\treturn this.p1;\n\t},\n\tgetAngle: function () {\n\t\treturn this.angle;\n\t},\n\tcompareTo: function (obj) {\n\t\tvar de = obj;\n\t\treturn this.compareDirection(de);\n\t},\n\tgetFromNode: function () {\n\t\treturn this.from;\n\t},\n\tgetSym: function () {\n\t\treturn this.sym;\n\t},\n\tsetEdge: function (parentEdge) {\n\t\tthis.parentEdge = parentEdge;\n\t},\n\tremove: function () {\n\t\tthis.sym = null;\n\t\tthis.parentEdge = null;\n\t},\n\tgetEdge: function () {\n\t\treturn this.parentEdge;\n\t},\n\tgetQuadrant: function () {\n\t\treturn this.quadrant;\n\t},\n\tsetSym: function (sym) {\n\t\tthis.sym = sym;\n\t},\n\tgetToNode: function () {\n\t\treturn this.to;\n\t},\n\tgetEdgeDirection: function () {\n\t\treturn this.edgeDirection;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.toEdges = function (dirEdges) {\n\tvar edges = new ArrayList();\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tedges.add(i.next().parentEdge);\n\t}\n\treturn edges;\n};\n","import extend from '../../../../../extend';\nimport DirectedEdge from '../../planargraph/DirectedEdge';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function LineMergeDirectedEdge() {\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(LineMergeDirectedEdge, DirectedEdge);\nextend(LineMergeDirectedEdge.prototype, {\n\tgetNext: function () {\n\t\tif (this.getToNode().getDegree() !== 2) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n\t\t\treturn this.getToNode().getOutEdges().getEdges().get(1);\n\t\t}\n\t\tAssert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\n\t\treturn this.getToNode().getOutEdges().getEdges().get(0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeDirectedEdge;\n\t}\n});\n","import Node from './Node';\nimport extend from '../../../../extend';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Edge() {\n\tGraphComponent.apply(this);\n\tthis.dirEdge = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tlet de0 = arguments[0], de1 = arguments[1];\n\t\tthis.setDirectedEdges(de0, de1);\n\t}\n}\ninherits(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tisRemoved: function () {\n\t\treturn this.dirEdge === null;\n\t},\n\tsetDirectedEdges: function (de0, de1) {\n\t\tthis.dirEdge = [de0, de1];\n\t\tde0.setEdge(this);\n\t\tde1.setEdge(this);\n\t\tde0.setSym(de1);\n\t\tde1.setSym(de0);\n\t\tde0.getFromNode().addOutEdge(de0);\n\t\tde1.getFromNode().addOutEdge(de1);\n\t},\n\tgetDirEdge: function () {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this.dirEdge[i];\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet fromNode = arguments[0];\n\t\t\tif (this.dirEdge[0].getFromNode() === fromNode) return this.dirEdge[0];\n\t\t\tif (this.dirEdge[1].getFromNode() === fromNode) return this.dirEdge[1];\n\t\t\treturn null;\n\t\t}\n\t},\n\tremove: function () {\n\t\tthis.dirEdge = null;\n\t},\n\tgetOppositeNode: function (node) {\n\t\tif (this.dirEdge[0].getFromNode() === node) return this.dirEdge[0].getToNode();\n\t\tif (this.dirEdge[1].getFromNode() === node) return this.dirEdge[1].getToNode();\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Edge;\n\t}\n});\n","import extend from '../../../../extend';\nimport Collections from '../../../../java/util/Collections';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default function DirectedEdgeStar() {\n\tthis.outEdges = new ArrayList();\n\tthis.sorted = false;\n}\nextend(DirectedEdgeStar.prototype, {\n\tgetNextEdge: function (dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this.outEdges.get(this.getIndex(i + 1));\n\t},\n\tgetCoordinate: function () {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\titerator: function () {\n\t\tthis.sortEdges();\n\t\treturn this.outEdges.iterator();\n\t},\n\tsortEdges: function () {\n\t\tif (!this.sorted) {\n\t\t\tCollections.sort(this.outEdges);\n\t\t\tthis.sorted = true;\n\t\t}\n\t},\n\tremove: function (de) {\n\t\tthis.outEdges.remove(de);\n\t},\n\tgetEdges: function () {\n\t\tthis.sortEdges();\n\t\treturn this.outEdges;\n\t},\n\tgetNextCWEdge: function (dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this.outEdges.get(this.getIndex(i - 1));\n\t},\n\tgetIndex: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this.outEdges.size(); i++) {\n\t\t\t\tvar de = this.outEdges.get(i);\n\t\t\t\tif (de.getEdge() === edge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this.outEdges.size(); i++) {\n\t\t\t\tvar de = this.outEdges.get(i);\n\t\t\t\tif (de === dirEdge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\tvar modi = i % this.outEdges.size();\n\t\t\tif (modi < 0) modi += this.outEdges.size();\n\t\t\treturn modi;\n\t\t}\n\t},\n\tadd: function (de) {\n\t\tthis.outEdges.add(de);\n\t\tthis.sorted = false;\n\t},\n\tgetDegree: function () {\n\t\treturn this.outEdges.size();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n","import DirectedEdgeStar from './DirectedEdgeStar';\nimport HashSet from '../../../../java/util/HashSet';\nimport extend from '../../../../extend';\nimport DirectedEdge from './DirectedEdge';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Node() {\n\tGraphComponent.apply(this);\n\tthis.pt = null;\n\tthis.deStar = null;\n\tif (arguments.length === 1) {\n\t\tlet pt = arguments[0];\n\t\tNode.call(this, pt, new DirectedEdgeStar());\n\t} else if (arguments.length === 2) {\n\t\tlet pt = arguments[0], deStar = arguments[1];\n\t\tthis.pt = pt;\n\t\tthis.deStar = deStar;\n\t}\n}\ninherits(Node, GraphComponent);\nextend(Node.prototype, {\n\tisRemoved: function () {\n\t\treturn this.pt === null;\n\t},\n\taddOutEdge: function (de) {\n\t\tthis.deStar.add(de);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tgetOutEdges: function () {\n\t\treturn this.deStar;\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.pt = null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tthis.deStar.remove(de);\n\t\t}\n\t},\n\tgetIndex: function (edge) {\n\t\treturn this.deStar.getIndex(edge);\n\t},\n\tgetDegree: function () {\n\t\treturn this.deStar.getDegree();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.getEdgesBetween = function (node0, node1) {\n\tvar edges0 = DirectedEdge.toEdges(node0.getOutEdges().getEdges());\n\tvar commonEdges = new HashSet(edges0);\n\tvar edges1 = DirectedEdge.toEdges(node1.getOutEdges().getEdges());\n\tcommonEdges.retainAll(edges1);\n\treturn commonEdges;\n};\n","import extend from '../../../../../extend';\nimport Edge from '../../planargraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function LineMergeEdge() {\n\tEdge.apply(this);\n\tthis.line = null;\n\tlet line = arguments[0];\n\tthis.line = line;\n}\ninherits(LineMergeEdge, Edge);\nextend(LineMergeEdge.prototype, {\n\tgetLine: function () {\n\t\treturn this.line;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeEdge;\n\t}\n});\n","import extend from '../../../../extend';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function NodeMap() {\n\tthis.nodeMap = new TreeMap();\n}\nextend(NodeMap.prototype, {\n\tfind: function (coord) {\n\t\treturn this.nodeMap.get(coord);\n\t},\n\titerator: function () {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\tremove: function (pt) {\n\t\treturn this.nodeMap.remove(pt);\n\t},\n\tvalues: function () {\n\t\treturn this.nodeMap.values();\n\t},\n\tadd: function (n) {\n\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\treturn n;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeMap;\n\t}\n});\n","import HashSet from '../../../../java/util/HashSet';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport NodeMap from './NodeMap';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default function PlanarGraph() {\n\tthis.edges = new HashSet();\n\tthis.dirEdges = new HashSet();\n\tthis.nodeMap = new NodeMap();\n}\nextend(PlanarGraph.prototype, {\n\tfindNodesOfDegree: function (degree) {\n\t\tvar nodesFound = new ArrayList();\n\t\tfor (var i = this.nodeIterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() === degree) nodesFound.add(node);\n\t\t}\n\t\treturn nodesFound;\n\t},\n\tdirEdgeIterator: function () {\n\t\treturn this.dirEdges.iterator();\n\t},\n\tedgeIterator: function () {\n\t\treturn this.edges.iterator();\n\t},\n\tremove: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.remove(edge.getDirEdge(0));\n\t\t\tthis.remove(edge.getDirEdge(1));\n\t\t\tthis.edges.remove(edge);\n\t\t\tedge.remove();\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar sym = de.getSym();\n\t\t\tif (sym !== null) sym.setSym(null);\n\t\t\tde.getFromNode().remove(de);\n\t\t\tde.remove();\n\t\t\tthis.dirEdges.remove(de);\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar outEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = outEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) this.remove(sym);\n\t\t\t\tthis.dirEdges.remove(de);\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tif (edge !== null) {\n\t\t\t\t\tthis.edges.remove(edge);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.nodeMap.remove(node.getCoordinate());\n\t\t\tnode.remove();\n\t\t}\n\t},\n\tfindNode: function (pt) {\n\t\treturn this.nodeMap.find(pt);\n\t},\n\tgetEdges: function () {\n\t\treturn this.edges;\n\t},\n\tnodeIterator: function () {\n\t\treturn this.nodeMap.iterator();\n\t},\n\tcontains: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet e = arguments[0];\n\t\t\treturn this.edges.contains(e);\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\treturn this.dirEdges.contains(de);\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tthis.nodeMap.add(node);\n\t\t} else if (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.edges.add(edge);\n\t\t\tthis.add(edge.getDirEdge(0));\n\t\t\tthis.add(edge.getDirEdge(1));\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis.dirEdges.add(dirEdge);\n\t\t}\n\t},\n\tgetNodes: function () {\n\t\treturn this.nodeMap.values();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PlanarGraph;\n\t}\n});\n","import LineMergeDirectedEdge from './LineMergeDirectedEdge';\nimport Node from '../../planargraph/Node';\nimport extend from '../../../../../extend';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport LineMergeEdge from './LineMergeEdge';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default function LineMergeGraph() {\n\tPlanarGraph.apply(this);\n}\ninherits(LineMergeGraph, PlanarGraph);\nextend(LineMergeGraph.prototype, {\n\taddEdge: function (lineString) {\n\t\tif (lineString.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\n\t\tif (coordinates.length <= 1) return null;\n\t\tvar startCoordinate = coordinates[0];\n\t\tvar endCoordinate = coordinates[coordinates.length - 1];\n\t\tvar startNode = this.getNode(startCoordinate);\n\t\tvar endNode = this.getNode(endCoordinate);\n\t\tvar directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\n\t\tvar directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\n\t\tvar edge = new LineMergeEdge(lineString);\n\t\tedge.setDirectedEdges(directedEdge0, directedEdge1);\n\t\tthis.add(edge);\n\t},\n\tgetNode: function (coordinate) {\n\t\tvar node = this.findNode(coordinate);\n\t\tif (node === null) {\n\t\t\tnode = new Node(coordinate);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeGraph;\n\t}\n});\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport EdgeString from './EdgeString';\nimport extend from '../../../../../extend';\nimport LineMergeGraph from './LineMergeGraph';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport GraphComponent from '../../planargraph/GraphComponent';\nexport default function LineMerger() {\n\tthis.graph = new LineMergeGraph();\n\tthis.mergedLineStrings = null;\n\tthis.factory = null;\n\tthis.edgeStrings = null;\n}\nextend(LineMerger.prototype, {\n\tbuildEdgeStringsForUnprocessedNodes: function () {\n\t\tfor (var i = this.graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isMarked()) {\n\t\t\t\tAssert.isTrue(node.getDegree() === 2);\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForNonDegree2Nodes: function () {\n\t\tfor (var i = this.graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() !== 2) {\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForObviousStartNodes: function () {\n\t\tthis.buildEdgeStringsForNonDegree2Nodes();\n\t},\n\tgetMergedLineStrings: function () {\n\t\tthis.merge();\n\t\treturn this.mergedLineStrings;\n\t},\n\tbuildEdgeStringsStartingAt: function (node) {\n\t\tfor (var i = node.getOutEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar directedEdge = i.next();\n\t\t\tif (directedEdge.getEdge().isMarked()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\n\t\t}\n\t},\n\tmerge: function () {\n\t\tif (this.mergedLineStrings !== null) {\n\t\t\treturn null;\n\t\t}\n\t\tGraphComponent.setMarked(this.graph.nodeIterator(), false);\n\t\tGraphComponent.setMarked(this.graph.edgeIterator(), false);\n\t\tthis.edgeStrings = new ArrayList();\n\t\tthis.buildEdgeStringsForObviousStartNodes();\n\t\tthis.buildEdgeStringsForIsolatedLoops();\n\t\tthis.mergedLineStrings = new ArrayList();\n\t\tfor (var i = this.edgeStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar edgeString = i.next();\n\t\t\tthis.mergedLineStrings.add(edgeString.toLineString());\n\t\t}\n\t},\n\tbuildEdgeStringStartingWith: function (start) {\n\t\tvar edgeString = new EdgeString(this.factory);\n\t\tvar current = start;\n\t\tdo {\n\t\t\tedgeString.add(current);\n\t\t\tcurrent.getEdge().setMarked(true);\n\t\t\tcurrent = current.getNext();\n\t\t} while (current !== null && current !== start);\n\t\treturn edgeString;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function (component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tthis.mergedLineStrings = null;\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this.factory === null) {\n\t\t\t\tthis.factory = lineString.getFactory();\n\t\t\t}\n\t\t\tthis.graph.addEdge(lineString);\n\t\t}\n\t},\n\tbuildEdgeStringsForIsolatedLoops: function () {\n\t\tthis.buildEdgeStringsForUnprocessedNodes();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMerger;\n\t}\n});\n","import extend from '../../../../../extend';\nimport DirectedEdge from '../../planargraph/DirectedEdge';\nimport inherits from '../../../../../inherits';\nexport default function PolygonizeDirectedEdge() {\n\tthis.edgeRing = null;\n\tthis.next = null;\n\tthis.label = -1;\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(PolygonizeDirectedEdge, DirectedEdge);\nextend(PolygonizeDirectedEdge.prototype, {\n\tgetNext: function () {\n\t\treturn this.next;\n\t},\n\tisInRing: function () {\n\t\treturn this.edgeRing !== null;\n\t},\n\tsetRing: function (edgeRing) {\n\t\tthis.edgeRing = edgeRing;\n\t},\n\tsetLabel: function (label) {\n\t\tthis.label = label;\n\t},\n\tgetLabel: function () {\n\t\treturn this.label;\n\t},\n\tsetNext: function (next) {\n\t\tthis.next = next;\n\t},\n\tgetRing: function () {\n\t\treturn this.edgeRing;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeDirectedEdge;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Edge from '../../planargraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function PolygonizeEdge() {\n\tEdge.apply(this);\n\tthis.line = null;\n\tlet line = arguments[0];\n\tthis.line = line;\n}\ninherits(PolygonizeEdge, Edge);\nextend(PolygonizeEdge.prototype, {\n\tgetLine: function () {\n\t\treturn this.line;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeEdge;\n\t}\n});\n","import Location from '../../geom/Location';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport Polygon from '../../geom/Polygon';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport MaximalEdgeRing from '../overlay/MaximalEdgeRing';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function ConnectedInteriorTester() {\n\tthis.geometryFactory = new GeometryFactory();\n\tthis.geomGraph = null;\n\tthis.disconnectedRingcoord = null;\n\tlet geomGraph = arguments[0];\n\tthis.geomGraph = geomGraph;\n}\nextend(ConnectedInteriorTester.prototype, {\n\tvisitInteriorRing: function (ring, graph) {\n\t\tvar pts = ring.getCoordinates();\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\n\t\tvar e = graph.findEdgeInSameDirection(pt0, pt1);\n\t\tvar de = graph.findEdgeEnd(e);\n\t\tvar intDe = null;\n\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de;\n\t\t} else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de.getSym();\n\t\t}\n\t\tAssert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\n\t\tthis.visitLinkedDirectedEdges(intDe);\n\t},\n\tvisitShellInteriors: function (g, graph) {\n\t\tif (g instanceof Polygon) {\n\t\t\tvar p = g;\n\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t}\n\t\tif (g instanceof MultiPolygon) {\n\t\t\tvar mp = g;\n\t\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\t\tvar p = mp.getGeometryN(i);\n\t\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.disconnectedRingcoord;\n\t},\n\tsetInteriorEdgesInResult: function (graph) {\n\t\tfor (var it = graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tvisitLinkedDirectedEdges: function (start) {\n\t\tvar startDe = start;\n\t\tvar de = start;\n\t\tdo {\n\t\t\tAssert.isTrue(de !== null, \"found null Directed Edge\");\n\t\t\tde.setVisited(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== startDe);\n\t},\n\tbuildEdgeRings: function (dirEdges) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getEdgeRing() === null) {\n\t\t\t\tvar er = new MaximalEdgeRing(de, this.geometryFactory);\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tedgeRings.addAll(minEdgeRings);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\thasUnvisitedShellEdge: function (edgeRings) {\n\t\tfor (var i = 0; i < edgeRings.size(); i++) {\n\t\t\tvar er = edgeRings.get(i);\n\t\t\tif (er.isHole()) continue;\n\t\t\tvar edges = er.getEdges();\n\t\t\tvar de = edges.get(0);\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\n\t\t\tfor (var j = 0; j < edges.size(); j++) {\n\t\t\t\tde = edges.get(j);\n\t\t\t\tif (!de.isVisited()) {\n\t\t\t\t\tthis.disconnectedRingcoord = de.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisInteriorsConnected: function () {\n\t\tvar splitEdges = new ArrayList();\n\t\tthis.geomGraph.computeSplitEdges(splitEdges);\n\t\tvar graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tgraph.addEdges(splitEdges);\n\t\tthis.setInteriorEdgesInResult(graph);\n\t\tgraph.linkResultDirectedEdges();\n\t\tvar edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\n\t\tthis.visitShellInteriors(this.geomGraph.getGeometry(), graph);\n\t\treturn !this.hasUnvisitedShellEdge(edgeRings);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConnectedInteriorTester;\n\t}\n});\nConnectedInteriorTester.findDifferentPoint = function (coord, pt) {\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (!coord[i].equals(pt)) return coord[i];\n\t}\n\treturn null;\n};\n","import EdgeEnd from '../../geomgraph/EdgeEnd';\nimport extend from '../../../../../extend';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function EdgeEndBuilder() {}\nextend(EdgeEndBuilder.prototype, {\n\tcreateEdgeEndForNext: function (edge, l, eiCurr, eiNext) {\n\t\tvar iNext = eiCurr.segmentIndex + 1;\n\t\tif (iNext >= edge.getNumPoints() && eiNext === null) return null;\n\t\tvar pNext = edge.getCoordinate(iNext);\n\t\tif (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\n\t\tl.add(e);\n\t},\n\tcreateEdgeEndForPrev: function (edge, l, eiCurr, eiPrev) {\n\t\tvar iPrev = eiCurr.segmentIndex;\n\t\tif (eiCurr.dist === 0.0) {\n\t\t\tif (iPrev === 0) return null;\n\t\t\tiPrev--;\n\t\t}\n\t\tvar pPrev = edge.getCoordinate(iPrev);\n\t\tif (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\n\t\tvar label = new Label(edge.getLabel());\n\t\tlabel.flip();\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\n\t\tl.add(e);\n\t},\n\tcomputeEdgeEnds: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tvar l = new ArrayList();\n\t\t\tfor (var i = edges; i.hasNext(); ) {\n\t\t\t\tvar e = i.next();\n\t\t\t\tthis.computeEdgeEnds(e, l);\n\t\t\t}\n\t\t\treturn l;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edge = arguments[0], l = arguments[1];\n\t\t\tvar eiList = edge.getEdgeIntersectionList();\n\t\t\teiList.addEndpoints();\n\t\t\tvar it = eiList.iterator();\n\t\t\tvar eiPrev = null;\n\t\t\tvar eiCurr = null;\n\t\t\tif (!it.hasNext()) return null;\n\t\t\tvar eiNext = it.next();\n\t\t\tdo {\n\t\t\t\teiPrev = eiCurr;\n\t\t\t\teiCurr = eiNext;\n\t\t\t\teiNext = null;\n\t\t\t\tif (it.hasNext()) eiNext = it.next();\n\t\t\t\tif (eiCurr !== null) {\n\t\t\t\t\tthis.createEdgeEndForPrev(edge, l, eiCurr, eiPrev);\n\t\t\t\t\tthis.createEdgeEndForNext(edge, l, eiCurr, eiNext);\n\t\t\t\t}\n\t\t\t} while (eiCurr !== null);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBuilder;\n\t}\n});\n","import Location from '../../geom/Location';\nimport EdgeEnd from '../../geomgraph/EdgeEnd';\nimport Position from '../../geomgraph/Position';\nimport extend from '../../../../../extend';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Edge from '../../geomgraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function EdgeEndBundle() {\n\tthis.edgeEnds = new ArrayList();\n\tif (arguments.length === 1) {\n\t\tlet e = arguments[0];\n\t\tEdgeEndBundle.call(this, null, e);\n\t} else if (arguments.length === 2) {\n\t\tlet boundaryNodeRule = arguments[0], e = arguments[1];\n\t\tEdgeEnd.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()));\n\t\tthis.insert(e);\n\t}\n}\ninherits(EdgeEndBundle, EdgeEnd);\nextend(EdgeEndBundle.prototype, {\n\tinsert: function (e) {\n\t\tthis.edgeEnds.add(e);\n\t},\n\tprint: function (out) {\n\t\tout.println(\"EdgeEndBundle--> Label: \" + this.label);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this.edgeEnds.iterator();\n\t},\n\tgetEdgeEnds: function () {\n\t\treturn this.edgeEnds;\n\t},\n\tcomputeLabelOn: function (geomIndex, boundaryNodeRule) {\n\t\tvar boundaryCount = 0;\n\t\tvar foundInterior = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar loc = e.getLabel().getLocation(geomIndex);\n\t\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\t\tif (loc === Location.INTERIOR) foundInterior = true;\n\t\t}\n\t\tvar loc = Location.NONE;\n\t\tif (foundInterior) loc = Location.INTERIOR;\n\t\tif (boundaryCount > 0) {\n\t\t\tloc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\n\t\t}\n\t\tthis.label.setLocation(geomIndex, loc);\n\t},\n\tcomputeLabelSide: function (geomIndex, side) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) {\n\t\t\t\tvar loc = e.getLabel().getLocation(geomIndex, side);\n\t\t\t\tif (loc === Location.INTERIOR) {\n\t\t\t\t\tthis.label.setLocation(geomIndex, side, Location.INTERIOR);\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (loc === Location.EXTERIOR) this.label.setLocation(geomIndex, side, Location.EXTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tgetLabel: function () {\n\t\treturn this.label;\n\t},\n\tcomputeLabelSides: function (geomIndex) {\n\t\tthis.computeLabelSide(geomIndex, Position.LEFT);\n\t\tthis.computeLabelSide(geomIndex, Position.RIGHT);\n\t},\n\tupdateIM: function (im) {\n\t\tEdge.updateIM(this.label, im);\n\t},\n\tcomputeLabel: function (boundaryNodeRule) {\n\t\tvar isArea = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) isArea = true;\n\t\t}\n\t\tif (isArea) this.label = new Label(Location.NONE, Location.NONE, Location.NONE); else this.label = new Label(Location.NONE);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tthis.computeLabelOn(i, boundaryNodeRule);\n\t\t\tif (isArea) this.computeLabelSides(i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBundle;\n\t}\n});\n","import extend from '../../../../../extend';\nimport EdgeEndStar from '../../geomgraph/EdgeEndStar';\nimport inherits from '../../../../../inherits';\nimport EdgeEndBundle from './EdgeEndBundle';\nexport default function EdgeEndBundleStar() {\n\tEdgeEndStar.apply(this);\n}\ninherits(EdgeEndBundleStar, EdgeEndStar);\nextend(EdgeEndBundleStar.prototype, {\n\tupdateIM: function (im) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar esb = it.next();\n\t\t\tesb.updateIM(im);\n\t\t}\n\t},\n\tinsert: function (e) {\n\t\tvar eb = this.edgeMap.get(e);\n\t\tif (eb === null) {\n\t\t\teb = new EdgeEndBundle(e);\n\t\t\tthis.insertEdgeEnd(e, eb);\n\t\t} else {\n\t\t\teb.insert(e);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBundleStar;\n\t}\n});\n","import Node from '../../geomgraph/Node';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function RelateNode() {\n\tlet coord = arguments[0], edges = arguments[1];\n\tNode.call(this, coord, edges);\n}\ninherits(RelateNode, Node);\nextend(RelateNode.prototype, {\n\tupdateIMFromEdges: function (im) {\n\t\tthis.edges.updateIM(im);\n\t},\n\tcomputeIM: function (im) {\n\t\tim.setAtLeastIfValid(this.label.getLocation(0), this.label.getLocation(1), 0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNode;\n\t}\n});\n","import EdgeEndBundleStar from './EdgeEndBundleStar';\nimport extend from '../../../../../extend';\nimport RelateNode from './RelateNode';\nimport inherits from '../../../../../inherits';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default function RelateNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(RelateNodeFactory, NodeFactory);\nextend(RelateNodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new RelateNode(coord, new EdgeEndBundleStar());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNodeFactory;\n\t}\n});\n","import Location from '../../geom/Location';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport extend from '../../../../../extend';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nexport default function RelateNodeGraph() {\n\tthis.nodes = new NodeMap(new RelateNodeFactory());\n}\nextend(RelateNodeGraph.prototype, {\n\tinsertEdgeEnds: function (ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.nodes.add(e);\n\t\t}\n\t},\n\tgetNodeIterator: function () {\n\t\treturn this.nodes.iterator();\n\t},\n\tcopyNodesAndLabels: function (geomGraph, argIndex) {\n\t\tfor (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar graphNode = nodeIt.next();\n\t\t\tvar newNode = this.nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tbuild: function (geomGraph) {\n\t\tthis.computeIntersectionNodes(geomGraph, 0);\n\t\tthis.copyNodesAndLabels(geomGraph, 0);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\n\t\tthis.insertEdgeEnds(eeList);\n\t},\n\tcomputeIntersectionNodes: function (geomGraph, argIndex) {\n\t\tfor (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext(); ) {\n\t\t\tvar e = edgeIt.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this.nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNodeGraph;\n\t}\n});\n","import RelateNodeGraph from '../relate/RelateNodeGraph';\nimport extend from '../../../../../extend';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nexport default function ConsistentAreaTester() {\n\tthis.li = new RobustLineIntersector();\n\tthis.geomGraph = null;\n\tthis.nodeGraph = new RelateNodeGraph();\n\tthis.invalidPoint = null;\n\tlet geomGraph = arguments[0];\n\tthis.geomGraph = geomGraph;\n}\nextend(ConsistentAreaTester.prototype, {\n\tisNodeEdgeAreaLabelsConsistent: function () {\n\t\tfor (var nodeIt = this.nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tif (!node.getEdges().isAreaLabelsConsistent(this.geomGraph)) {\n\t\t\t\tthis.invalidPoint = node.getCoordinate().copy();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetInvalidPoint: function () {\n\t\treturn this.invalidPoint;\n\t},\n\thasDuplicateRings: function () {\n\t\tfor (var nodeIt = this.nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar eeb = i.next();\n\t\t\t\tif (eeb.getEdgeEnds().size() > 1) {\n\t\t\t\t\tthis.invalidPoint = eeb.getEdge().getCoordinate(0);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisNodeConsistentArea: function () {\n\t\tvar intersector = this.geomGraph.computeSelfNodes(this.li, true, true);\n\t\tif (intersector.hasProperIntersection()) {\n\t\t\tthis.invalidPoint = intersector.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tthis.nodeGraph.build(this.geomGraph);\n\t\treturn this.isNodeEdgeAreaLabelsConsistent();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConsistentAreaTester;\n\t}\n});\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport STRtree from '../../index/strtree/STRtree';\nimport IsValidOp from './IsValidOp';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default function IndexedNestedRingTester() {\n\tthis.graph = null;\n\tthis.rings = new ArrayList();\n\tthis.totalEnv = new Envelope();\n\tthis.index = null;\n\tthis.nestedPt = null;\n\tlet graph = arguments[0];\n\tthis.graph = graph;\n}\nextend(IndexedNestedRingTester.prototype, {\n\tbuildIndex: function () {\n\t\tthis.index = new STRtree();\n\t\tfor (var i = 0; i < this.rings.size(); i++) {\n\t\t\tvar ring = this.rings.get(i);\n\t\t\tvar env = ring.getEnvelopeInternal();\n\t\t\tthis.index.insert(env, ring);\n\t\t}\n\t},\n\tgetNestedPoint: function () {\n\t\treturn this.nestedPt;\n\t},\n\tisNonNested: function () {\n\t\tthis.buildIndex();\n\t\tfor (var i = 0; i < this.rings.size(); i++) {\n\t\t\tvar innerRing = this.rings.get(i);\n\t\t\tvar innerRingPts = innerRing.getCoordinates();\n\t\t\tvar results = this.index.query(innerRing.getEnvelopeInternal());\n\t\t\tfor (var j = 0; j < results.size(); j++) {\n\t\t\t\tvar searchRing = results.get(j);\n\t\t\t\tvar searchRingPts = searchRing.getCoordinates();\n\t\t\t\tif (innerRing === searchRing) continue;\n\t\t\t\tif (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\n\t\t\t\tvar innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this.graph);\n\t\t\t\tif (innerRingPt === null) continue;\n\t\t\t\tvar isInside = CGAlgorithms.isPointInRing(innerRingPt, searchRingPts);\n\t\t\t\tif (isInside) {\n\t\t\t\t\tthis.nestedPt = innerRingPt;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function (ring) {\n\t\tthis.rings.add(ring);\n\t\tthis.totalEnv.expandToInclude(ring.getEnvelopeInternal());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IndexedNestedRingTester;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function TopologyValidationError() {\n\tthis.errorType = null;\n\tthis.pt = null;\n\tif (arguments.length === 1) {\n\t\tlet errorType = arguments[0];\n\t\tTopologyValidationError.call(this, errorType, null);\n\t} else if (arguments.length === 2) {\n\t\tlet errorType = arguments[0], pt = arguments[1];\n\t\tthis.errorType = errorType;\n\t\tif (pt !== null) this.pt = pt.copy();\n\t}\n}\nextend(TopologyValidationError.prototype, {\n\tgetErrorType: function () {\n\t\treturn this.errorType;\n\t},\n\tgetMessage: function () {\n\t\treturn TopologyValidationError.errMsg[this.errorType];\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\ttoString: function () {\n\t\tvar locStr = \"\";\n\t\tif (this.pt !== null) locStr = \" at or near point \" + this.pt;\n\t\treturn this.getMessage() + locStr;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyValidationError;\n\t}\n});\nTopologyValidationError.ERROR = 0;\nTopologyValidationError.REPEATED_POINT = 1;\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\nTopologyValidationError.NESTED_HOLES = 3;\nTopologyValidationError.DISCONNECTED_INTERIOR = 4;\nTopologyValidationError.SELF_INTERSECTION = 5;\nTopologyValidationError.RING_SELF_INTERSECTION = 6;\nTopologyValidationError.NESTED_SHELLS = 7;\nTopologyValidationError.DUPLICATE_RINGS = 8;\nTopologyValidationError.TOO_FEW_POINTS = 9;\nTopologyValidationError.INVALID_COORDINATE = 10;\nTopologyValidationError.RING_NOT_CLOSED = 11;\nTopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\n","import TreeSet from '../../../../../java/util/TreeSet';\nimport LineString from '../../geom/LineString';\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport Geometry from '../../geom/Geometry';\nimport ConnectedInteriorTester from './ConnectedInteriorTester';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport LinearRing from '../../geom/LinearRing';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport MCPointInRing from '../../algorithm/MCPointInRing';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport ConsistentAreaTester from './ConsistentAreaTester';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport IndexedNestedRingTester from './IndexedNestedRingTester';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport TopologyValidationError from './TopologyValidationError';\nimport Assert from '../../util/Assert';\nexport default function IsValidOp() {\n\tthis.parentGeometry = null;\n\tthis.isSelfTouchingRingFormingHoleValid = false;\n\tthis.validErr = null;\n\tlet parentGeometry = arguments[0];\n\tthis.parentGeometry = parentGeometry;\n}\nextend(IsValidOp.prototype, {\n\tcheckInvalidCoordinates: function () {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coords = arguments[0];\n\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\tif (!IsValidOp.isValid(coords[i])) {\n\t\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesNotNested: function (p, graph) {\n\t\tvar nestedTester = new IndexedNestedRingTester(graph);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar innerHole = p.getInteriorRingN(i);\n\t\t\tnestedTester.add(innerHole);\n\t\t}\n\t\tvar isNonNested = nestedTester.isNonNested();\n\t\tif (!isNonNested) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\n\t\t}\n\t},\n\tcheckConsistentArea: function (graph) {\n\t\tvar cat = new ConsistentAreaTester(graph);\n\t\tvar isValidArea = cat.isNodeConsistentArea();\n\t\tif (!isValidArea) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t\tif (cat.hasDuplicateRings()) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\n\t\t}\n\t},\n\tisValid: function () {\n\t\tthis.checkValid(this.parentGeometry);\n\t\treturn this.validErr === null;\n\t},\n\tcheckShellInsideHole: function (shell, hole, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar holePts = hole.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\n\t\tif (shellPt !== null) {\n\t\t\tvar insideHole = CGAlgorithms.isPointInRing(shellPt, holePts);\n\t\t\tif (!insideHole) {\n\t\t\t\treturn shellPt;\n\t\t\t}\n\t\t}\n\t\tvar holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\n\t\tif (holePt !== null) {\n\t\t\tvar insideShell = CGAlgorithms.isPointInRing(holePt, shellPts);\n\t\t\tif (insideShell) {\n\t\t\t\treturn holePt;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\n\t\treturn null;\n\t},\n\tcheckNoSelfIntersectingRings: function (graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\n\t\t\tif (this.validErr !== null) return null;\n\t\t}\n\t},\n\tcheckConnectedInteriors: function (graph) {\n\t\tvar cit = new ConnectedInteriorTester(graph);\n\t\tif (!cit.isInteriorsConnected()) this.validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\n\t},\n\tcheckNoSelfIntersectingRing: function (eiList) {\n\t\tvar nodeSet = new TreeSet();\n\t\tvar isFirst = true;\n\t\tfor (var i = eiList.iterator(); i.hasNext(); ) {\n\t\t\tvar ei = i.next();\n\t\t\tif (isFirst) {\n\t\t\t\tisFirst = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (nodeSet.contains(ei.coord)) {\n\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tnodeSet.add(ei.coord);\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesInShell: function (p, graph) {\n\t\tvar shell = p.getExteriorRing();\n\t\tvar pir = new MCPointInRing(shell);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\n\t\t\tif (holePt === null) return null;\n\t\t\tvar outside = !pir.isInside(holePt);\n\t\t\tif (outside) {\n\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckTooFewPoints: function (graph) {\n\t\tif (graph.hasTooFewPoints()) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetValidationError: function () {\n\t\tthis.checkValid(this.parentGeometry);\n\t\treturn this.validErr;\n\t},\n\tcheckValid: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof MultiPoint) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkClosedRing(g);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar li = new RobustLineIntersector();\n\t\t\tgraph.computeSelfNodes(li, true, true);\n\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkClosedRings(g);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tif (!this.isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkHolesInShell(g, graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkHolesNotNested(g, graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof MultiPolygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkInvalidCoordinates(p);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t\tthis.checkClosedRings(p);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tif (!this.isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesInShell(p, graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesNotNested(p, graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkShellsNotNested(g, graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\tthis.checkValid(g);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.validErr = null;\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof Point) this.checkValid(g); else if (g instanceof MultiPoint) this.checkValid(g); else if (g instanceof LinearRing) this.checkValid(g); else if (g instanceof LineString) this.checkValid(g); else if (g instanceof Polygon) this.checkValid(g); else if (g instanceof MultiPolygon) this.checkValid(g); else if (g instanceof GeometryCollection) this.checkValid(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t}\n\t},\n\tsetSelfTouchingRingFormingHoleValid: function (isValid) {\n\t\tthis.isSelfTouchingRingFormingHoleValid = isValid;\n\t},\n\tcheckShellNotNested: function (shell, p, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar polyShell = p.getExteriorRing();\n\t\tvar polyPts = polyShell.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\n\t\tif (shellPt === null) return null;\n\t\tvar insidePolyShell = CGAlgorithms.isPointInRing(shellPt, polyPts);\n\t\tif (!insidePolyShell) return null;\n\t\tif (p.getNumInteriorRing() <= 0) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\n\t\t\treturn null;\n\t\t}\n\t\tvar badNestedPt = null;\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tbadNestedPt = this.checkShellInsideHole(shell, hole, graph);\n\t\t\tif (badNestedPt === null) return null;\n\t\t}\n\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\n\t},\n\tcheckClosedRings: function (poly) {\n\t\tthis.checkClosedRing(poly.getExteriorRing());\n\t\tif (this.validErr !== null) return null;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tthis.checkClosedRing(poly.getInteriorRingN(i));\n\t\t\tif (this.validErr !== null) return null;\n\t\t}\n\t},\n\tcheckClosedRing: function (ring) {\n\t\tif (!ring.isClosed()) {\n\t\t\tvar pt = null;\n\t\t\tif (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\n\t\t}\n\t},\n\tcheckShellsNotNested: function (mp, graph) {\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar p = mp.getGeometryN(i);\n\t\t\tvar shell = p.getExteriorRing();\n\t\t\tfor (var j = 0; j < mp.getNumGeometries(); j++) {\n\t\t\t\tif (i === j) continue;\n\t\t\t\tvar p2 = mp.getGeometryN(j);\n\t\t\t\tthis.checkShellNotNested(shell, p2, graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IsValidOp;\n\t}\n});\nIsValidOp.findPtNotNode = function (testCoords, searchRing, graph) {\n\tvar searchEdge = graph.findEdge(searchRing);\n\tvar eiList = searchEdge.getEdgeIntersectionList();\n\tfor (var i = 0; i < testCoords.length; i++) {\n\t\tvar pt = testCoords[i];\n\t\tif (!eiList.isIntersection(pt)) return pt;\n\t}\n\treturn null;\n};\nIsValidOp.isValid = function () {\n\tif (arguments[0] instanceof Geometry) {\n\t\tlet geom = arguments[0];\n\t\tvar isValidOp = new IsValidOp(geom);\n\t\treturn isValidOp.isValid();\n\t} else if (arguments[0] instanceof Coordinate) {\n\t\tlet coord = arguments[0];\n\t\tif (Double.isNaN(coord.x)) return false;\n\t\tif (Double.isInfinite(coord.x)) return false;\n\t\tif (Double.isNaN(coord.y)) return false;\n\t\tif (Double.isInfinite(coord.y)) return false;\n\t\treturn true;\n\t}\n};\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\nimport CoordinateList from '../../geom/CoordinateList';\nimport WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport IsValidOp from '../valid/IsValidOp';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport Exception from '../../../../../java/lang/Exception';\nimport System from '../../../../../java/lang/System';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Assert from '../../util/Assert';\nexport default function EdgeRing() {\n\tthis.factory = null;\n\tthis.deList = new ArrayList();\n\tthis.lowestEdge = null;\n\tthis.ring = null;\n\tthis.ringPts = null;\n\tthis.holes = null;\n\tthis.shell = null;\n\tthis._isHole = null;\n\tthis._isProcessed = false;\n\tthis._isIncludedSet = false;\n\tthis._isIncluded = false;\n\tlet factory = arguments[0];\n\tthis.factory = factory;\n}\nextend(EdgeRing.prototype, {\n\tisIncluded: function () {\n\t\treturn this._isIncluded;\n\t},\n\tgetCoordinates: function () {\n\t\tif (this.ringPts === null) {\n\t\t\tvar coordList = new CoordinateList();\n\t\t\tfor (var i = this.deList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tEdgeRing.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\n\t\t\t}\n\t\t\tthis.ringPts = coordList.toCoordinateArray();\n\t\t}\n\t\treturn this.ringPts;\n\t},\n\tisIncludedSet: function () {\n\t\treturn this._isIncludedSet;\n\t},\n\tisValid: function () {\n\t\tthis.getCoordinates();\n\t\tif (this.ringPts.length <= 3) return false;\n\t\tthis.getRing();\n\t\treturn IsValidOp.isValid(this.ring);\n\t},\n\tbuild: function (startDE) {\n\t\tvar de = startDE;\n\t\tdo {\n\t\t\tthis.add(de);\n\t\t\tde.setRing(this);\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t},\n\tisOuterHole: function () {\n\t\tif (!this._isHole) return false;\n\t\treturn !this.hasShell();\n\t},\n\tgetPolygon: function () {\n\t\tvar holeLR = null;\n\t\tif (this.holes !== null) {\n\t\t\tholeLR = new Array(this.holes.size()).fill(null);\n\t\t\tfor (var i = 0; i < this.holes.size(); i++) {\n\t\t\t\tholeLR[i] = this.holes.get(i);\n\t\t\t}\n\t\t}\n\t\tvar poly = this.factory.createPolygon(this.ring, holeLR);\n\t\treturn poly;\n\t},\n\tisHole: function () {\n\t\treturn this._isHole;\n\t},\n\tisProcessed: function () {\n\t\treturn this._isProcessed;\n\t},\n\taddHole: function () {\n\t\tif (arguments[0] instanceof LinearRing) {\n\t\t\tlet hole = arguments[0];\n\t\t\tif (this.holes === null) this.holes = new ArrayList();\n\t\t\tthis.holes.add(hole);\n\t\t} else if (arguments[0] instanceof EdgeRing) {\n\t\t\tlet holeER = arguments[0];\n\t\t\tholeER.setShell(this);\n\t\t\tvar hole = holeER.getRing();\n\t\t\tif (this.holes === null) this.holes = new ArrayList();\n\t\t\tthis.holes.add(hole);\n\t\t}\n\t},\n\tsetIncluded: function (isIncluded) {\n\t\tthis._isIncluded = isIncluded;\n\t\tthis._isIncludedSet = true;\n\t},\n\tgetOuterHole: function () {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this.deList.size(); i++) {\n\t\t\tvar de = this.deList.get(i);\n\t\t\tvar adjRing = de.getSym().getRing();\n\t\t\tif (adjRing.isOuterHole()) return adjRing;\n\t\t}\n\t\treturn null;\n\t},\n\tcomputeHole: function () {\n\t\tvar ring = this.getRing();\n\t\tthis._isHole = CGAlgorithms.isCCW(ring.getCoordinates());\n\t},\n\thasShell: function () {\n\t\treturn this.shell !== null;\n\t},\n\tisOuterShell: function () {\n\t\treturn this.getOuterHole() !== null;\n\t},\n\tgetLineString: function () {\n\t\tthis.getCoordinates();\n\t\treturn this.factory.createLineString(this.ringPts);\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\n\t},\n\tgetShell: function () {\n\t\tif (this.isHole()) return this.shell;\n\t\treturn this;\n\t},\n\tadd: function (de) {\n\t\tthis.deList.add(de);\n\t},\n\tgetRing: function () {\n\t\tif (this.ring !== null) return this.ring;\n\t\tthis.getCoordinates();\n\t\tif (this.ringPts.length < 3) System.out.println(this.ringPts);\n\t\ttry {\n\t\t\tthis.ring = this.factory.createLinearRing(this.ringPts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tSystem.out.println(this.ringPts);\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\treturn this.ring;\n\t},\n\tupdateIncluded: function () {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this.deList.size(); i++) {\n\t\t\tvar de = this.deList.get(i);\n\t\t\tvar adjShell = de.getSym().getRing().getShell();\n\t\t\tif (adjShell !== null && adjShell.isIncludedSet()) {\n\t\t\t\tthis.setIncluded(!adjShell.isIncluded());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function (shell) {\n\t\tthis.shell = shell;\n\t},\n\tsetProcessed: function (isProcessed) {\n\t\tthis._isProcessed = isProcessed;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeRing;\n\t}\n});\nEdgeRing.findDirEdgesInRing = function (startDE) {\n\tvar de = startDE;\n\tvar edges = new ArrayList();\n\tdo {\n\t\tedges.add(de);\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn edges;\n};\nEdgeRing.addEdge = function (coords, isForward, coordList) {\n\tif (isForward) {\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t} else {\n\t\tfor (var i = coords.length - 1; i >= 0; i--) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t}\n};\nEdgeRing.findEdgeRingContaining = function (testEr, shellList) {\n\tvar testRing = testEr.getRing();\n\tvar testEnv = testRing.getEnvelopeInternal();\n\tvar testPt = testRing.getCoordinateN(0);\n\tvar minShell = null;\n\tvar minShellEnv = null;\n\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\tvar tryShell = it.next();\n\t\tvar tryShellRing = tryShell.getRing();\n\t\tvar tryShellEnv = tryShellRing.getEnvelopeInternal();\n\t\tif (tryShellEnv.equals(testEnv)) continue;\n\t\tif (!tryShellEnv.contains(testEnv)) continue;\n\t\ttestPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\n\t\tvar isContained = false;\n\t\tif (CGAlgorithms.isPointInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\n\t\tif (isContained) {\n\t\t\tif (minShell === null || minShellEnv.contains(tryShellEnv)) {\n\t\t\t\tminShell = tryShell;\n\t\t\t\tminShellEnv = minShell.getRing().getEnvelopeInternal();\n\t\t\t}\n\t\t}\n\t}\n\treturn minShell;\n};\nfunction EnvelopeComparator() {}\nextend(EnvelopeComparator.prototype, {\n\tcompare: function (obj0, obj1) {\n\t\tvar r0 = obj0;\n\t\tvar r1 = obj1;\n\t\treturn r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn EnvelopeComparator;\n\t}\n});\nEdgeRing.EnvelopeComparator = EnvelopeComparator;\n","import PolygonizeDirectedEdge from './PolygonizeDirectedEdge';\nimport HashSet from '../../../../../java/util/HashSet';\nimport Stack from '../../../../../java/util/Stack';\nimport Node from '../../planargraph/Node';\nimport PolygonizeEdge from './PolygonizeEdge';\nimport extend from '../../../../../extend';\nimport EdgeRing from './EdgeRing';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default function PolygonizeGraph() {\n\tPlanarGraph.apply(this);\n\tthis.factory = null;\n\tlet factory = arguments[0];\n\tthis.factory = factory;\n}\ninherits(PolygonizeGraph, PlanarGraph);\nextend(PolygonizeGraph.prototype, {\n\tfindEdgeRing: function (startDE) {\n\t\tvar er = new EdgeRing(this.factory);\n\t\ter.build(startDE);\n\t\treturn er;\n\t},\n\tcomputeDepthParity: function () {\n\t\tif (arguments.length === 0) {\n\t\t\twhile (true) {\n\t\t\t\tvar de = null;\n\t\t\t\tif (de === null) return null;\n\t\t\t\tthis.computeDepthParity(de);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t}\n\t},\n\tcomputeNextCWEdges: function () {\n\t\tfor (var iNode = this.nodeIterator(); iNode.hasNext(); ) {\n\t\t\tvar node = iNode.next();\n\t\t\tPolygonizeGraph.computeNextCWEdges(node);\n\t\t}\n\t},\n\taddEdge: function (line) {\n\t\tif (line.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (linePts.length < 2) {\n\t\t\treturn null;\n\t\t}\n\t\tvar startPt = linePts[0];\n\t\tvar endPt = linePts[linePts.length - 1];\n\t\tvar nStart = this.getNode(startPt);\n\t\tvar nEnd = this.getNode(endPt);\n\t\tvar de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\n\t\tvar de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\n\t\tvar edge = new PolygonizeEdge(line);\n\t\tedge.setDirectedEdges(de0, de1);\n\t\tthis.add(edge);\n\t},\n\tdeleteCutEdges: function () {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.findLabeledEdgeRings(this.dirEdges);\n\t\tvar cutLines = new ArrayList();\n\t\tfor (var i = this.dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.getLabel() === sym.getLabel()) {\n\t\t\t\tde.setMarked(true);\n\t\t\t\tsym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tcutLines.add(e.getLine());\n\t\t\t}\n\t\t}\n\t\treturn cutLines;\n\t},\n\tgetEdgeRings: function () {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.label(this.dirEdges, -1);\n\t\tvar maximalRings = PolygonizeGraph.findLabeledEdgeRings(this.dirEdges);\n\t\tthis.convertMaximalToMinimalEdgeRings(maximalRings);\n\t\tvar edgeRingList = new ArrayList();\n\t\tfor (var i = this.dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tif (de.isInRing()) continue;\n\t\t\tvar er = this.findEdgeRing(de);\n\t\t\tedgeRingList.add(er);\n\t\t}\n\t\treturn edgeRingList;\n\t},\n\tgetNode: function (pt) {\n\t\tvar node = this.findNode(pt);\n\t\tif (node === null) {\n\t\t\tnode = new Node(pt);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tconvertMaximalToMinimalEdgeRings: function (ringEdges) {\n\t\tfor (var i = ringEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tvar intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\n\t\t\tif (intNodes === null) continue;\n\t\t\tfor (var iNode = intNodes.iterator(); iNode.hasNext(); ) {\n\t\t\t\tvar node = iNode.next();\n\t\t\t\tPolygonizeGraph.computeNextCCWEdges(node, label);\n\t\t\t}\n\t\t}\n\t},\n\tdeleteDangles: function () {\n\t\tvar nodesToRemove = this.findNodesOfDegree(1);\n\t\tvar dangleLines = new HashSet();\n\t\tvar nodeStack = new Stack();\n\t\tfor (var i = nodesToRemove.iterator(); i.hasNext(); ) {\n\t\t\tnodeStack.push(i.next());\n\t\t}\n\t\twhile (!nodeStack.isEmpty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tPolygonizeGraph.deleteAllEdges(node);\n\t\t\tvar nodeOutEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = nodeOutEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tde.setMarked(true);\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) sym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tdangleLines.add(e.getLine());\n\t\t\t\tvar toNode = de.getToNode();\n\t\t\t\tif (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\n\t\t\t}\n\t\t}\n\t\treturn dangleLines;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeGraph;\n\t}\n});\nPolygonizeGraph.findLabeledEdgeRings = function (dirEdges) {\n\tvar edgeRingStarts = new ArrayList();\n\tvar currLabel = 1;\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (de.isMarked()) continue;\n\t\tif (de.getLabel() >= 0) continue;\n\t\tedgeRingStarts.add(de);\n\t\tvar edges = EdgeRing.findDirEdgesInRing(de);\n\t\tPolygonizeGraph.label(edges, currLabel);\n\t\tcurrLabel++;\n\t}\n\treturn edgeRingStarts;\n};\nPolygonizeGraph.getDegreeNonDeleted = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (!de.isMarked()) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.deleteAllEdges = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tde.setMarked(true);\n\t\tvar sym = de.getSym();\n\t\tif (sym !== null) sym.setMarked(true);\n\t}\n};\nPolygonizeGraph.label = function (dirEdges, label) {\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tde.setLabel(label);\n\t}\n};\nPolygonizeGraph.computeNextCWEdges = function (node) {\n\tvar deStar = node.getOutEdges();\n\tvar startDE = null;\n\tvar prevDE = null;\n\tfor (var i = deStar.getEdges().iterator(); i.hasNext(); ) {\n\t\tvar outDE = i.next();\n\t\tif (outDE.isMarked()) continue;\n\t\tif (startDE === null) startDE = outDE;\n\t\tif (prevDE !== null) {\n\t\t\tvar sym = prevDE.getSym();\n\t\t\tsym.setNext(outDE);\n\t\t}\n\t\tprevDE = outDE;\n\t}\n\tif (prevDE !== null) {\n\t\tvar sym = prevDE.getSym();\n\t\tsym.setNext(startDE);\n\t}\n};\nPolygonizeGraph.computeNextCCWEdges = function (node, label) {\n\tvar deStar = node.getOutEdges();\n\tvar firstOutDE = null;\n\tvar prevInDE = null;\n\tvar edges = deStar.getEdges();\n\tfor (var i = edges.size() - 1; i >= 0; i--) {\n\t\tvar de = edges.get(i);\n\t\tvar sym = de.getSym();\n\t\tvar outDE = null;\n\t\tif (de.getLabel() === label) outDE = de;\n\t\tvar inDE = null;\n\t\tif (sym.getLabel() === label) inDE = sym;\n\t\tif (outDE === null && inDE === null) continue;\n\t\tif (inDE !== null) {\n\t\t\tprevInDE = inDE;\n\t\t}\n\t\tif (outDE !== null) {\n\t\t\tif (prevInDE !== null) {\n\t\t\t\tprevInDE.setNext(outDE);\n\t\t\t\tprevInDE = null;\n\t\t\t}\n\t\t\tif (firstOutDE === null) firstOutDE = outDE;\n\t\t}\n\t}\n\tif (prevInDE !== null) {\n\t\tAssert.isTrue(firstOutDE !== null);\n\t\tprevInDE.setNext(firstOutDE);\n\t}\n};\nPolygonizeGraph.getDegree = function (node, label) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (de.getLabel() === label) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.findIntersectionNodes = function (startDE, label) {\n\tvar de = startDE;\n\tvar intNodes = null;\n\tdo {\n\t\tvar node = de.getFromNode();\n\t\tif (PolygonizeGraph.getDegree(node, label) > 1) {\n\t\t\tif (intNodes === null) intNodes = new ArrayList();\n\t\t\tintNodes.add(node);\n\t\t}\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn intNodes;\n};\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport PolygonizeGraph from './PolygonizeGraph';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Collection from '../../../../../java/util/Collection';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport EdgeRing from './EdgeRing';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function Polygonizer() {\n\tthis.lineStringAdder = new LineStringAdder(this);\n\tthis.graph = null;\n\tthis.dangles = new ArrayList();\n\tthis.cutEdges = new ArrayList();\n\tthis.invalidRingLines = new ArrayList();\n\tthis.holeList = null;\n\tthis.shellList = null;\n\tthis.polyList = null;\n\tthis.isCheckingRingsValid = true;\n\tthis.extractOnlyPolygonal = null;\n\tthis.geomFactory = null;\n\tif (arguments.length === 0) {\n\t\tPolygonizer.call(this, false);\n\t} else if (arguments.length === 1) {\n\t\tlet extractOnlyPolygonal = arguments[0];\n\t\tthis.extractOnlyPolygonal = extractOnlyPolygonal;\n\t}\n}\nextend(Polygonizer.prototype, {\n\tgetGeometry: function () {\n\t\tif (this.geomFactory === null) this.geomFactory = new GeometryFactory();\n\t\tthis.polygonize();\n\t\tif (this.extractOnlyPolygonal) {\n\t\t\treturn this.geomFactory.buildGeometry(this.polyList);\n\t\t}\n\t\treturn this.geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this.polyList));\n\t},\n\tgetInvalidRingLines: function () {\n\t\tthis.polygonize();\n\t\treturn this.invalidRingLines;\n\t},\n\tfindValidRings: function (edgeRingList, validEdgeRingList, invalidRingList) {\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isValid()) validEdgeRingList.add(er); else invalidRingList.add(er.getLineString());\n\t\t}\n\t},\n\tpolygonize: function () {\n\t\tif (this.polyList !== null) return null;\n\t\tthis.polyList = new ArrayList();\n\t\tif (this.graph === null) return null;\n\t\tthis.dangles = this.graph.deleteDangles();\n\t\tthis.cutEdges = this.graph.deleteCutEdges();\n\t\tvar edgeRingList = this.graph.getEdgeRings();\n\t\tvar validEdgeRingList = new ArrayList();\n\t\tthis.invalidRingLines = new ArrayList();\n\t\tif (this.isCheckingRingsValid) {\n\t\t\tthis.findValidRings(edgeRingList, validEdgeRingList, this.invalidRingLines);\n\t\t} else {\n\t\t\tvalidEdgeRingList = edgeRingList;\n\t\t}\n\t\tthis.findShellsAndHoles(validEdgeRingList);\n\t\tPolygonizer.assignHolesToShells(this.holeList, this.shellList);\n\t\tCollections.sort(this.shellList, new EdgeRing.EnvelopeComparator());\n\t\tvar includeAll = true;\n\t\tif (this.extractOnlyPolygonal) {\n\t\t\tPolygonizer.findDisjointShells(this.shellList);\n\t\t\tincludeAll = false;\n\t\t}\n\t\tthis.polyList = Polygonizer.extractPolygons(this.shellList, includeAll);\n\t},\n\tgetDangles: function () {\n\t\tthis.polygonize();\n\t\treturn this.dangles;\n\t},\n\tgetCutEdges: function () {\n\t\tthis.polygonize();\n\t\treturn this.cutEdges;\n\t},\n\tgetPolygons: function () {\n\t\tthis.polygonize();\n\t\treturn this.polyList;\n\t},\n\tadd: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geomList = arguments[0];\n\t\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tthis.geomFactory = line.getFactory();\n\t\t\tif (this.graph === null) this.graph = new PolygonizeGraph(this.geomFactory);\n\t\t\tthis.graph.addEdge(line);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tg.apply(this.lineStringAdder);\n\t\t}\n\t},\n\tsetCheckRingsValid: function (isCheckingRingsValid) {\n\t\tthis.isCheckingRingsValid = isCheckingRingsValid;\n\t},\n\tfindShellsAndHoles: function (edgeRingList) {\n\t\tthis.holeList = new ArrayList();\n\t\tthis.shellList = new ArrayList();\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\ter.computeHole();\n\t\t\tif (er.isHole()) this.holeList.add(er); else this.shellList.add(er);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Polygonizer;\n\t}\n});\nPolygonizer.findOuterShells = function (shellList) {\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\tvar er = i.next();\n\t\tvar outerHoleER = er.getOuterHole();\n\t\tif (outerHoleER !== null && !outerHoleER.isProcessed()) {\n\t\t\ter.setIncluded(true);\n\t\t\touterHoleER.setProcessed(true);\n\t\t}\n\t}\n};\nPolygonizer.extractPolygons = function (shellList, includeAll) {\n\tvar polyList = new ArrayList();\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\tvar er = i.next();\n\t\tif (includeAll || er.isIncluded()) {\n\t\t\tpolyList.add(er.getPolygon());\n\t\t}\n\t}\n\treturn polyList;\n};\nPolygonizer.assignHolesToShells = function (holeList, shellList) {\n\tfor (var i = holeList.iterator(); i.hasNext(); ) {\n\t\tvar holeER = i.next();\n\t\tPolygonizer.assignHoleToShell(holeER, shellList);\n\t}\n};\nPolygonizer.assignHoleToShell = function (holeER, shellList) {\n\tvar shell = EdgeRing.findEdgeRingContaining(holeER, shellList);\n\tif (shell !== null) {\n\t\tshell.addHole(holeER);\n\t}\n};\nPolygonizer.findDisjointShells = function (shellList) {\n\tPolygonizer.findOuterShells(shellList);\n\tvar isMoreToScan = null;\n\tdo {\n\t\tisMoreToScan = false;\n\t\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isIncludedSet()) continue;\n\t\t\ter.updateIncluded();\n\t\t\tif (!er.isIncludedSet()) {\n\t\t\t\tisMoreToScan = true;\n\t\t\t}\n\t\t}\n\t} while (isMoreToScan);\n};\nfunction LineStringAdder() {\n\tthis.p = null;\n\tlet p = arguments[0];\n\tthis.p = p;\n}\nextend(LineStringAdder.prototype, {\n\tfilter: function (g) {\n\t\tif (g instanceof LineString) this.p.add(g);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringAdder;\n\t}\n});\nPolygonizer.LineStringAdder = LineStringAdder;\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport IntersectionMatrix from '../../geom/IntersectionMatrix';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport extend from '../../../../../extend';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport Assert from '../../util/Assert';\nexport default function RelateComputer() {\n\tthis.li = new RobustLineIntersector();\n\tthis.ptLocator = new PointLocator();\n\tthis.arg = null;\n\tthis.nodes = new NodeMap(new RelateNodeFactory());\n\tthis.im = null;\n\tthis.isolatedEdges = new ArrayList();\n\tthis.invalidPoint = null;\n\tlet arg = arguments[0];\n\tthis.arg = arg;\n}\nextend(RelateComputer.prototype, {\n\tinsertEdgeEnds: function (ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.nodes.add(e);\n\t\t}\n\t},\n\tcomputeProperIntersectionIM: function (intersector, im) {\n\t\tvar dimA = this.arg[0].getGeometry().getDimension();\n\t\tvar dimB = this.arg[1].getGeometry().getDimension();\n\t\tvar hasProper = intersector.hasProperIntersection();\n\t\tvar hasProperInterior = intersector.hasProperInteriorIntersection();\n\t\tif (dimA === 2 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"212101212\");\n\t\t} else if (dimA === 2 && dimB === 1) {\n\t\t\tif (hasProper) im.setAtLeast(\"FFF0FFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\n\t\t} else if (dimA === 1 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"F0FFFFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\n\t\t} else if (dimA === 1 && dimB === 1) {\n\t\t\tif (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\n\t\t}\n\t},\n\tlabelIsolatedEdges: function (thisIndex, targetIndex) {\n\t\tfor (var ei = this.arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tthis.labelIsolatedEdge(e, targetIndex, this.arg[targetIndex].getGeometry());\n\t\t\t\tthis.isolatedEdges.add(e);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedEdge: function (e, targetIndex, target) {\n\t\tif (target.getDimension() > 0) {\n\t\t\tvar loc = this.ptLocator.locate(e.getCoordinate(), target);\n\t\t\te.getLabel().setAllLocations(targetIndex, loc);\n\t\t} else {\n\t\t\te.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\n\t\t}\n\t},\n\tcomputeIM: function () {\n\t\tvar im = new IntersectionMatrix();\n\t\tim.set(Location.EXTERIOR, Location.EXTERIOR, 2);\n\t\tif (!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal())) {\n\t\t\tthis.computeDisjointIM(im);\n\t\t\treturn im;\n\t\t}\n\t\tthis.arg[0].computeSelfNodes(this.li, false);\n\t\tthis.arg[1].computeSelfNodes(this.li, false);\n\t\tvar intersector = this.arg[0].computeEdgeIntersections(this.arg[1], this.li, false);\n\t\tthis.computeIntersectionNodes(0);\n\t\tthis.computeIntersectionNodes(1);\n\t\tthis.copyNodesAndLabels(0);\n\t\tthis.copyNodesAndLabels(1);\n\t\tthis.labelIsolatedNodes();\n\t\tthis.computeProperIntersectionIM(intersector, im);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar ee0 = eeBuilder.computeEdgeEnds(this.arg[0].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee0);\n\t\tvar ee1 = eeBuilder.computeEdgeEnds(this.arg[1].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee1);\n\t\tthis.labelNodeEdges();\n\t\tthis.labelIsolatedEdges(0, 1);\n\t\tthis.labelIsolatedEdges(1, 0);\n\t\tthis.updateIM(im);\n\t\treturn im;\n\t},\n\tlabelNodeEdges: function () {\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.getEdges().computeLabelling(this.arg);\n\t\t}\n\t},\n\tcopyNodesAndLabels: function (argIndex) {\n\t\tfor (var i = this.arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this.nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tlabelIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this.arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this.nodes.find(ei.coord);\n\t\t\t\tif (n.getLabel().isNull(argIndex)) {\n\t\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNode: function (n, targetIndex) {\n\t\tvar loc = this.ptLocator.locate(n.getCoordinate(), this.arg[targetIndex].getGeometry());\n\t\tn.getLabel().setAllLocations(targetIndex, loc);\n\t},\n\tcomputeIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this.arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this.nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNodes: function () {\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tAssert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1);\n\t\t\t}\n\t\t}\n\t},\n\tupdateIM: function (im) {\n\t\tfor (var ei = this.isolatedEdges.iterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\te.updateIM(im);\n\t\t}\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.updateIM(im);\n\t\t\tnode.updateIMFromEdges(im);\n\t\t}\n\t},\n\tcomputeDisjointIM: function (im) {\n\t\tvar ga = this.arg[0].getGeometry();\n\t\tif (!ga.isEmpty()) {\n\t\t\tim.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\n\t\t\tim.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\n\t\t}\n\t\tvar gb = this.arg[1].getGeometry();\n\t\tif (!gb.isEmpty()) {\n\t\t\tim.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\n\t\t\tim.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateComputer;\n\t}\n});\n","import LineString from '../../geom/LineString';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport extend from '../../../../../extend';\nexport default function RectangleContains() {\n\tthis.rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleContains.prototype, {\n\tisContainedInBoundary: function (geom) {\n\t\tif (geom instanceof Polygon) return false;\n\t\tif (geom instanceof Point) return this.isPointContainedInBoundary(geom);\n\t\tif (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.isContainedInBoundary(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisLineSegmentContainedInBoundary: function (p0, p1) {\n\t\tif (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\n\t\tif (p0.x === p1.x) {\n\t\t\tif (p0.x === this.rectEnv.getMinX() || p0.x === this.rectEnv.getMaxX()) return true;\n\t\t} else if (p0.y === p1.y) {\n\t\t\tif (p0.y === this.rectEnv.getMinY() || p0.y === this.rectEnv.getMaxY()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisLineStringContainedInBoundary: function (line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tfor (var i = 0; i < seq.size() - 1; i++) {\n\t\t\tseq.getCoordinate(i, p0);\n\t\t\tseq.getCoordinate(i + 1, p1);\n\t\t\tif (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisPointContainedInBoundary: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet point = arguments[0];\n\t\t\treturn this.isPointContainedInBoundary(point.getCoordinate());\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\treturn pt.x === this.rectEnv.getMinX() || pt.x === this.rectEnv.getMaxX() || pt.y === this.rectEnv.getMinY() || pt.y === this.rectEnv.getMaxY();\n\t\t}\n\t},\n\tcontains: function (geom) {\n\t\tif (!this.rectEnv.contains(geom.getEnvelopeInternal())) return false;\n\t\tif (this.isContainedInBoundary(geom)) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleContains;\n\t}\n});\nRectangleContains.contains = function (rectangle, b) {\n\tvar rc = new RectangleContains(rectangle);\n\treturn rc.contains(b);\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport Envelope from '../geom/Envelope';\nexport default function RectangleLineIntersector() {\n\tthis.li = new RobustLineIntersector();\n\tthis.rectEnv = null;\n\tthis.diagUp0 = null;\n\tthis.diagUp1 = null;\n\tthis.diagDown0 = null;\n\tthis.diagDown1 = null;\n\tlet rectEnv = arguments[0];\n\tthis.rectEnv = rectEnv;\n\tthis.diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\n\tthis.diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\n\tthis.diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\n\tthis.diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\n}\nextend(RectangleLineIntersector.prototype, {\n\tintersects: function (p0, p1) {\n\t\tvar segEnv = new Envelope(p0, p1);\n\t\tif (!this.rectEnv.intersects(segEnv)) return false;\n\t\tif (this.rectEnv.intersects(p0)) return true;\n\t\tif (this.rectEnv.intersects(p1)) return true;\n\t\tif (p0.compareTo(p1) > 0) {\n\t\t\tvar tmp = p0;\n\t\t\tp0 = p1;\n\t\t\tp1 = tmp;\n\t\t}\n\t\tvar isSegUpwards = false;\n\t\tif (p1.y > p0.y) isSegUpwards = true;\n\t\tif (isSegUpwards) {\n\t\t\tthis.li.computeIntersection(p0, p1, this.diagDown0, this.diagDown1);\n\t\t} else {\n\t\t\tthis.li.computeIntersection(p0, p1, this.diagUp0, this.diagUp1);\n\t\t}\n\t\tif (this.li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleLineIntersector;\n\t}\n});\n","import extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nexport default function ShortCircuitedGeometryVisitor() {\n\tthis._isDone = false;\n}\nextend(ShortCircuitedGeometryVisitor.prototype, {\n\tapplyTo: function (geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n\t\t\tvar element = geom.getGeometryN(i);\n\t\t\tif (!(element instanceof GeometryCollection)) {\n\t\t\t\tthis.visit(element);\n\t\t\t\tif (this.isDone()) {\n\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else this.applyTo(element);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ShortCircuitedGeometryVisitor;\n\t}\n});\n","import Coordinate from '../../geom/Coordinate';\nimport Polygon from '../../geom/Polygon';\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector';\nimport extend from '../../../../../extend';\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor';\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport inherits from '../../../../../inherits';\nexport default function RectangleIntersects() {\n\tthis.rectangle = null;\n\tthis.rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis.rectangle = rectangle;\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleIntersects.prototype, {\n\tintersects: function (geom) {\n\t\tif (!this.rectEnv.intersects(geom.getEnvelopeInternal())) return false;\n\t\tvar visitor = new EnvelopeIntersectsVisitor(this.rectEnv);\n\t\tvisitor.applyTo(geom);\n\t\tif (visitor.intersects()) return true;\n\t\tvar ecpVisitor = new GeometryContainsPointVisitor(this.rectangle);\n\t\tecpVisitor.applyTo(geom);\n\t\tif (ecpVisitor.containsPoint()) return true;\n\t\tvar riVisitor = new RectangleIntersectsSegmentVisitor(this.rectangle);\n\t\triVisitor.applyTo(geom);\n\t\tif (riVisitor.intersects()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleIntersects;\n\t}\n});\nRectangleIntersects.intersects = function (rectangle, b) {\n\tvar rp = new RectangleIntersects(rectangle);\n\treturn rp.intersects(b);\n};\nfunction EnvelopeIntersectsVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis.rectEnv = null;\n\tthis._intersects = false;\n\tlet rectEnv = arguments[0];\n\tthis.rectEnv = rectEnv;\n}\ninherits(EnvelopeIntersectsVisitor, ShortCircuitedGeometryVisitor);\nextend(EnvelopeIntersectsVisitor.prototype, {\n\tisDone: function () {\n\t\treturn this._intersects === true;\n\t},\n\tvisit: function (element) {\n\t\tvar elementEnv = element.getEnvelopeInternal();\n\t\tif (!this.rectEnv.intersects(elementEnv)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.rectEnv.contains(elementEnv)) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinX() >= this.rectEnv.getMinX() && elementEnv.getMaxX() <= this.rectEnv.getMaxX()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinY() >= this.rectEnv.getMinY() && elementEnv.getMaxY() <= this.rectEnv.getMaxY()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t},\n\tintersects: function () {\n\t\treturn this._intersects;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EnvelopeIntersectsVisitor;\n\t}\n});\nfunction GeometryContainsPointVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis.rectSeq = null;\n\tthis.rectEnv = null;\n\tthis._containsPoint = false;\n\tlet rectangle = arguments[0];\n\tthis.rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n}\ninherits(GeometryContainsPointVisitor, ShortCircuitedGeometryVisitor);\nextend(GeometryContainsPointVisitor.prototype, {\n\tisDone: function () {\n\t\treturn this._containsPoint === true;\n\t},\n\tvisit: function (geom) {\n\t\tif (!(geom instanceof Polygon)) return null;\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this.rectEnv.intersects(elementEnv)) return null;\n\t\tvar rectPt = new Coordinate();\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tthis.rectSeq.getCoordinate(i, rectPt);\n\t\t\tif (!elementEnv.contains(rectPt)) continue;\n\t\t\tif (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n\t\t\t\tthis._containsPoint = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcontainsPoint: function () {\n\t\treturn this._containsPoint;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryContainsPointVisitor;\n\t}\n});\nfunction RectangleIntersectsSegmentVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis.rectEnv = null;\n\tthis.rectIntersector = null;\n\tthis.hasIntersection = false;\n\tthis.p0 = new Coordinate();\n\tthis.p1 = new Coordinate();\n\tlet rectangle = arguments[0];\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n\tthis.rectIntersector = new RectangleLineIntersector(this.rectEnv);\n}\ninherits(RectangleIntersectsSegmentVisitor, ShortCircuitedGeometryVisitor);\nextend(RectangleIntersectsSegmentVisitor.prototype, {\n\tintersects: function () {\n\t\treturn this.hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn this.hasIntersection === true;\n\t},\n\tvisit: function (geom) {\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this.rectEnv.intersects(elementEnv)) return null;\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tthis.checkIntersectionWithLineStrings(lines);\n\t},\n\tcheckIntersectionWithLineStrings: function (lines) {\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar testLine = i.next();\n\t\t\tthis.checkIntersectionWithSegments(testLine);\n\t\t\tif (this.hasIntersection) return null;\n\t\t}\n\t},\n\tcheckIntersectionWithSegments: function (testLine) {\n\t\tvar seq1 = testLine.getCoordinateSequence();\n\t\tfor (var j = 1; j < seq1.size(); j++) {\n\t\t\tseq1.getCoordinate(j - 1, this.p0);\n\t\t\tseq1.getCoordinate(j, this.p1);\n\t\t\tif (this.rectIntersector.intersects(this.p0, this.p1)) {\n\t\t\t\tthis.hasIntersection = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleIntersectsSegmentVisitor;\n\t}\n});\n","import Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport RelateComputer from './RelateComputer';\nimport BoundaryNodeRule from '../../algorithm/BoundaryNodeRule';\nimport extend from '../../../../../extend';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport RectangleContains from '../predicate/RectangleContains';\nimport inherits from '../../../../../inherits';\nimport RectangleIntersects from '../predicate/RectangleIntersects';\nexport default function RelateOp() {\n\tthis._relate = null;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1);\n\t\tthis._relate = new RelateComputer(this.arg);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tGeometryGraphOperation.call(this, g0, g1, boundaryNodeRule);\n\t\tthis._relate = new RelateComputer(this.arg);\n\t}\n}\ninherits(RelateOp, GeometryGraphOperation);\nextend(RelateOp.prototype, {\n\tgetIntersectionMatrix: function () {\n\t\treturn this._relate.computeIM();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateOp;\n\t}\n});\nRelateOp.covers = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn true;\n\t}\n\treturn RelateOp.relate(g1, g2).isCovers();\n};\nRelateOp.intersects = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g1, g2);\n\t}\n\tif (g2.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g2, g1);\n\t}\n\treturn RelateOp.relate(g1, g2).isIntersects();\n};\nRelateOp.touches = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isTouches(g1.getDimension(), g2.getDimension());\n};\nRelateOp.within = function (g1, g2) {\n\treturn g2.contains(g1);\n};\nRelateOp.coveredBy = function (g1, g2) {\n\treturn RelateOp.covers(g2, g1);\n};\nRelateOp.relate = function () {\n\tif (arguments.length === 2) {\n\t\tlet a = arguments[0], b = arguments[1];\n\t\tvar relOp = new RelateOp(a, b);\n\t\tvar im = relOp.getIntersectionMatrix();\n\t\treturn im;\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"string\" && (arguments[0] instanceof Geometry && arguments[1] instanceof Geometry)) {\n\t\t\tlet g1 = arguments[0], g2 = arguments[1], intersectionPattern = arguments[2];\n\t\t\treturn RelateOp.relateWithCheck(g1, g2).matches(intersectionPattern);\n\t\t} else if (hasInterface(arguments[2], BoundaryNodeRule) && (arguments[0] instanceof Geometry && arguments[1] instanceof Geometry)) {\n\t\t\tlet a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2];\n\t\t\tvar relOp = new RelateOp(a, b, boundaryNodeRule);\n\t\t\tvar im = relOp.getIntersectionMatrix();\n\t\t\treturn im;\n\t\t}\n\t}\n};\nRelateOp.overlaps = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isOverlaps(g1.getDimension(), g2.getDimension());\n};\nRelateOp.disjoint = function (g1, g2) {\n\treturn !g1.intersects(g2);\n};\nRelateOp.relateWithCheck = function (g1, g2) {\n\tg1.checkNotGeometryCollection(g1);\n\tg1.checkNotGeometryCollection(g2);\n\treturn RelateOp.relate(g1, g2);\n};\nRelateOp.crosses = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isCrosses(g1.getDimension(), g2.getDimension());\n};\nRelateOp.contains = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleContains.contains(g1, g2);\n\t}\n\treturn RelateOp.relate(g1, g2).isContains();\n};\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function GeometryCombiner() {\n\tthis.geomFactory = null;\n\tthis.skipEmpty = false;\n\tthis.inputGeoms = null;\n\tlet geoms = arguments[0];\n\tthis.geomFactory = GeometryCombiner.extractFactory(geoms);\n\tthis.inputGeoms = geoms;\n}\nextend(GeometryCombiner.prototype, {\n\textractElements: function (geom, elems) {\n\t\tif (geom === null) return null;\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elemGeom = geom.getGeometryN(i);\n\t\t\tif (this.skipEmpty && elemGeom.isEmpty()) continue;\n\t\t\telems.add(elemGeom);\n\t\t}\n\t},\n\tcombine: function () {\n\t\tvar elems = new ArrayList();\n\t\tfor (var i = this.inputGeoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tthis.extractElements(g, elems);\n\t\t}\n\t\tif (elems.size() === 0) {\n\t\t\tif (this.geomFactory !== null) {\n\t\t\t\treturn this.geomFactory.createGeometryCollection(null);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn this.geomFactory.buildGeometry(elems);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCombiner;\n\t}\n});\nGeometryCombiner.combine = function () {\n\tif (arguments.length === 1) {\n\t\tlet geoms = arguments[0];\n\t\tvar combiner = new GeometryCombiner(geoms);\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], g2 = arguments[2];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2));\n\t\treturn combiner.combine();\n\t}\n};\nGeometryCombiner.extractFactory = function (geoms) {\n\tif (geoms.isEmpty()) return null;\n\treturn geoms.iterator().next().getFactory();\n};\nGeometryCombiner.createList = function () {\n\tif (arguments.length === 2) {\n\t\tlet obj0 = arguments[0], obj1 = arguments[1];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\treturn list;\n\t} else if (arguments.length === 3) {\n\t\tlet obj0 = arguments[0], obj1 = arguments[1], obj2 = arguments[2];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\tlist.add(obj2);\n\t\treturn list;\n\t}\n};\n","import PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport STRtree from '../../index/strtree/STRtree';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport extend from '../../../../../extend';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport Polygonal from '../../geom/Polygonal';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default function CascadedPolygonUnion() {\n\tthis.inputPolys = null;\n\tthis.geomFactory = null;\n\tlet polys = arguments[0];\n\tthis.inputPolys = polys;\n\tif (this.inputPolys === null) this.inputPolys = new ArrayList();\n}\nextend(CascadedPolygonUnion.prototype, {\n\treduceToGeometries: function (geomTree) {\n\t\tvar geoms = new ArrayList();\n\t\tfor (var i = geomTree.iterator(); i.hasNext(); ) {\n\t\t\tvar o = i.next();\n\t\t\tvar geom = null;\n\t\t\tif (hasInterface(o, List)) {\n\t\t\t\tgeom = this.unionTree(o);\n\t\t\t} else if (o instanceof Geometry) {\n\t\t\t\tgeom = o;\n\t\t\t}\n\t\t\tgeoms.add(geom);\n\t\t}\n\t\treturn geoms;\n\t},\n\textractByEnvelope: function (env, geom, disjointGeoms) {\n\t\tvar intersectingGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem); else disjointGeoms.add(elem);\n\t\t}\n\t\treturn this.geomFactory.buildGeometry(intersectingGeoms);\n\t},\n\tunionOptimized: function (g0, g1) {\n\t\tvar g0Env = g0.getEnvelopeInternal();\n\t\tvar g1Env = g1.getEnvelopeInternal();\n\t\tif (!g0Env.intersects(g1Env)) {\n\t\t\tvar combo = GeometryCombiner.combine(g0, g1);\n\t\t\treturn combo;\n\t\t}\n\t\tif (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\n\t\tvar commonEnv = g0Env.intersection(g1Env);\n\t\treturn this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\n\t},\n\tunion: function () {\n\t\tif (this.inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\n\t\tif (this.inputPolys.isEmpty()) return null;\n\t\tthis.geomFactory = this.inputPolys.iterator().next().getFactory();\n\t\tvar index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n\t\tfor (var i = this.inputPolys.iterator(); i.hasNext(); ) {\n\t\t\tvar item = i.next();\n\t\t\tindex.insert(item.getEnvelopeInternal(), item);\n\t\t}\n\t\tthis.inputPolys = null;\n\t\tvar itemTree = index.itemsTree();\n\t\tvar unionAll = this.unionTree(itemTree);\n\t\treturn unionAll;\n\t},\n\tbinaryUnion: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\treturn this.binaryUnion(geoms, 0, geoms.size());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geoms = arguments[0], start = arguments[1], end = arguments[2];\n\t\t\tif (end - start <= 1) {\n\t\t\t\tvar g0 = CascadedPolygonUnion.getGeometry(geoms, start);\n\t\t\t\treturn this.unionSafe(g0, null);\n\t\t\t} else if (end - start === 2) {\n\t\t\t\treturn this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1));\n\t\t\t} else {\n\t\t\t\tvar mid = Math.trunc((end + start) / 2);\n\t\t\t\tvar g0 = this.binaryUnion(geoms, start, mid);\n\t\t\t\tvar g1 = this.binaryUnion(geoms, mid, end);\n\t\t\t\treturn this.unionSafe(g0, g1);\n\t\t\t}\n\t\t}\n\t},\n\trepeatedUnion: function (geoms) {\n\t\tvar union = null;\n\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tif (union === null) union = g.copy(); else union = union.union(g);\n\t\t}\n\t\treturn union;\n\t},\n\tunionSafe: function (g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g0 === null) return g1.copy();\n\t\tif (g1 === null) return g0.copy();\n\t\treturn this.unionOptimized(g0, g1);\n\t},\n\tunionActual: function (g0, g1) {\n\t\treturn CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\n\t},\n\tunionTree: function (geomTree) {\n\t\tvar geoms = this.reduceToGeometries(geomTree);\n\t\tvar union = this.binaryUnion(geoms);\n\t\treturn union;\n\t},\n\tunionUsingEnvelopeIntersection: function (g0, g1, common) {\n\t\tvar disjointPolys = new ArrayList();\n\t\tvar g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n\t\tvar g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n\t\tvar union = this.unionActual(g0Int, g1Int);\n\t\tdisjointPolys.add(union);\n\t\tvar overallUnion = GeometryCombiner.combine(disjointPolys);\n\t\treturn overallUnion;\n\t},\n\tbufferUnion: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar factory = geoms.get(0).getFactory();\n\t\t\tvar gColl = factory.buildGeometry(geoms);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\t\tvar factory = g0.getFactory();\n\t\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CascadedPolygonUnion;\n\t}\n});\nCascadedPolygonUnion.restrictToPolygons = function (g) {\n\tif (hasInterface(g, Polygonal)) {\n\t\treturn g;\n\t}\n\tvar polygons = PolygonExtracter.getPolygons(g);\n\tif (polygons.size() === 1) return polygons.get(0);\n\treturn g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\n};\nCascadedPolygonUnion.getGeometry = function (list, index) {\n\tif (index >= list.size()) return null;\n\treturn list.get(index);\n};\nCascadedPolygonUnion.union = function (polys) {\n\tvar op = new CascadedPolygonUnion(polys);\n\treturn op.union();\n};\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport TreeSet from '../../../../../java/util/TreeSet';\nimport extend from '../../../../../extend';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nexport default function PointGeometryUnion() {\n\tthis.pointGeom = null;\n\tthis.otherGeom = null;\n\tthis.geomFact = null;\n\tlet pointGeom = arguments[0], otherGeom = arguments[1];\n\tthis.pointGeom = pointGeom;\n\tthis.otherGeom = otherGeom;\n\tthis.geomFact = otherGeom.getFactory();\n}\nextend(PointGeometryUnion.prototype, {\n\tunion: function () {\n\t\tvar locater = new PointLocator();\n\t\tvar exteriorCoords = new TreeSet();\n\t\tfor (var i = 0; i < this.pointGeom.getNumGeometries(); i++) {\n\t\t\tvar point = this.pointGeom.getGeometryN(i);\n\t\t\tvar coord = point.getCoordinate();\n\t\t\tvar loc = locater.locate(coord, this.otherGeom);\n\t\t\tif (loc === Location.EXTERIOR) exteriorCoords.add(coord);\n\t\t}\n\t\tif (exteriorCoords.size() === 0) return this.otherGeom;\n\t\tvar ptComp = null;\n\t\tvar coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\n\t\tif (coords.length === 1) {\n\t\t\tptComp = this.geomFact.createPoint(coords[0]);\n\t\t} else {\n\t\t\tptComp = this.geomFact.createMultiPointFromCoords(coords);\n\t\t}\n\t\treturn GeometryCombiner.combine(ptComp, this.otherGeom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointGeometryUnion;\n\t}\n});\nPointGeometryUnion.union = function (pointGeom, otherGeom) {\n\tvar unioner = new PointGeometryUnion(pointGeom, otherGeom);\n\treturn unioner.union();\n};\n","import extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default function GeometryExtracter() {\n\tthis.sortIndex = -1;\n\tthis.comps = null;\n\tlet sortIndex = arguments[0], comps = arguments[1];\n\tthis.sortIndex = sortIndex;\n\tthis.comps = comps;\n}\nextend(GeometryExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (this.sortIndex === -1 || geom.getSortIndex() === this.sortIndex) this.comps.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryExtracter;\n\t}\n});\nGeometryExtracter.extract = function () {\n\tif (arguments.length === 2) {\n\t\tlet geom = arguments[0], sortIndex = arguments[1];\n\t\treturn GeometryExtracter.extract(geom, sortIndex, new ArrayList());\n\t} else if (arguments.length === 3) {\n\t\tlet geom = arguments[0], sortIndex = arguments[1], list = arguments[2];\n\t\tif (geom.getSortIndex() === sortIndex) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new GeometryExtracter(sortIndex, list));\n\t\t}\n\t\treturn list;\n\t}\n};\n","import Geometry from '../../geom/Geometry';\nimport PointGeometryUnion from './PointGeometryUnion';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryExtracter from '../../geom/util/GeometryExtracter';\nimport OverlayOp from '../overlay/OverlayOp';\nimport CascadedPolygonUnion from './CascadedPolygonUnion';\nexport default function UnaryUnionOp() {\n\tthis.polygons = new ArrayList();\n\tthis.lines = new ArrayList();\n\tthis.points = new ArrayList();\n\tthis.geomFact = null;\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tthis.extract(geoms);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis.extract(geom);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\tthis.geomFact = geomFact;\n\t\tthis.extract(geoms);\n\t}\n}\nextend(UnaryUnionOp.prototype, {\n\tunionNoOpt: function (g0) {\n\t\tvar empty = this.geomFact.createPoint();\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\n\t},\n\tunionWithNull: function (g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g1 === null) return g0;\n\t\tif (g0 === null) return g1;\n\t\treturn g0.union(g1);\n\t},\n\textract: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geom = i.next();\n\t\t\t\tthis.extract(geom);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (this.geomFact === null) this.geomFact = geom.getFactory();\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_POLYGON, this.polygons);\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_LINESTRING, this.lines);\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_POINT, this.points);\n\t\t}\n\t},\n\tunion: function () {\n\t\tif (this.geomFact === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar unionPoints = null;\n\t\tif (this.points.size() > 0) {\n\t\t\tvar ptGeom = this.geomFact.buildGeometry(this.points);\n\t\t\tunionPoints = this.unionNoOpt(ptGeom);\n\t\t}\n\t\tvar unionLines = null;\n\t\tif (this.lines.size() > 0) {\n\t\t\tvar lineGeom = this.geomFact.buildGeometry(this.lines);\n\t\t\tunionLines = this.unionNoOpt(lineGeom);\n\t\t}\n\t\tvar unionPolygons = null;\n\t\tif (this.polygons.size() > 0) {\n\t\t\tunionPolygons = CascadedPolygonUnion.union(this.polygons);\n\t\t}\n\t\tvar unionLA = this.unionWithNull(unionLines, unionPolygons);\n\t\tvar union = null;\n\t\tif (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA);\n\t\tif (union === null) return this.geomFact.createGeometryCollection();\n\t\treturn union;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn UnaryUnionOp;\n\t}\n});\nUnaryUnionOp.union = function () {\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geoms);\n\t\t\treturn op.union();\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geom);\n\t\t\treturn op.union();\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\tvar op = new UnaryUnionOp(geoms, geomFact);\n\t\treturn op.union();\n\t}\n};\n","import extend from '../../../../../extend';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport System from '../../../../../java/lang/System';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function UnionInteracting() {\n\tthis.geomFactory = null;\n\tthis.g0 = null;\n\tthis.g1 = null;\n\tthis.interacts0 = null;\n\tthis.interacts1 = null;\n\tlet g0 = arguments[0], g1 = arguments[1];\n\tthis.g0 = g0;\n\tthis.g1 = g1;\n\tthis.geomFactory = g0.getFactory();\n\tthis.interacts0 = new Array(g0.getNumGeometries()).fill(null);\n\tthis.interacts1 = new Array(g1.getNumGeometries()).fill(null);\n}\nextend(UnionInteracting.prototype, {\n\textractElements: function (geom, interacts, isInteracting) {\n\t\tvar extractedGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (interacts[i] === isInteracting) extractedGeoms.add(elem);\n\t\t}\n\t\treturn this.geomFactory.buildGeometry(extractedGeoms);\n\t},\n\tcomputeInteracting: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < this.g0.getNumGeometries(); i++) {\n\t\t\t\tvar elem = this.g0.getGeometryN(i);\n\t\t\t\tthis.interacts0[i] = this.computeInteracting(elem);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet elem0 = arguments[0];\n\t\t\tvar interactsWithAny = false;\n\t\t\tfor (var i = 0; i < this.g1.getNumGeometries(); i++) {\n\t\t\t\tvar elem1 = this.g1.getGeometryN(i);\n\t\t\t\tvar interacts = elem1.getEnvelopeInternal().intersects(elem0.getEnvelopeInternal());\n\t\t\t\tif (interacts) this.interacts1[i] = true;\n\t\t\t\tif (interacts) interactsWithAny = true;\n\t\t\t}\n\t\t\treturn interactsWithAny;\n\t\t}\n\t},\n\tunion: function () {\n\t\tthis.computeInteracting();\n\t\tvar int0 = this.extractElements(this.g0, this.interacts0, true);\n\t\tvar int1 = this.extractElements(this.g1, this.interacts1, true);\n\t\tif (int0.isEmpty() || int1.isEmpty()) {\n\t\t\tSystem.out.println(\"found empty!\");\n\t\t}\n\t\tvar union = int0.union(int1);\n\t\tvar disjoint0 = this.extractElements(this.g0, this.interacts0, false);\n\t\tvar disjoint1 = this.extractElements(this.g1, this.interacts1, false);\n\t\tvar overallUnion = GeometryCombiner.combine(union, disjoint0, disjoint1);\n\t\treturn overallUnion;\n\t},\n\tbufferUnion: function (g0, g1) {\n\t\tvar factory = g0.getFactory();\n\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\tvar unionAll = gColl.buffer(0.0);\n\t\treturn unionAll;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn UnionInteracting;\n\t}\n});\nUnionInteracting.union = function (g0, g1) {\n\tvar uue = new UnionInteracting(g0, g1);\n\treturn uue.union();\n};\n","import SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport OverlayOp from '../overlay/OverlayOp';\nexport default function UnionOp() {}\nextend(UnionOp.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn UnionOp;\n\t}\n});\nUnionOp.union = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\n};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Coordinate from '../geom/Coordinate';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport LinearRing from '../geom/LinearRing';\nimport extend from '../../../../extend';\nimport inherits from '../../../../inherits';\nexport default function PrecisionReducerCoordinateOperation() {\n\tGeometryEditor.CoordinateOperation.apply(this);\n\tthis.targetPM = null;\n\tthis.removeCollapsed = true;\n\tlet targetPM = arguments[0], removeCollapsed = arguments[1];\n\tthis.targetPM = targetPM;\n\tthis.removeCollapsed = removeCollapsed;\n}\ninherits(PrecisionReducerCoordinateOperation, GeometryEditor.CoordinateOperation);\nextend(PrecisionReducerCoordinateOperation.prototype, {\n\teditCoordinates: function (coordinates, geom) {\n\t\tif (coordinates.length === 0) return null;\n\t\tvar reducedCoords = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tvar coord = new Coordinate(coordinates[i]);\n\t\t\tthis.targetPM.makePrecise(coord);\n\t\t\treducedCoords[i] = coord;\n\t\t}\n\t\tvar noRepeatedCoordList = new CoordinateList(reducedCoords, false);\n\t\tvar noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\n\t\tvar minLength = 0;\n\t\tif (geom instanceof LineString) minLength = 2;\n\t\tif (geom instanceof LinearRing) minLength = 4;\n\t\tvar collapsedCoords = reducedCoords;\n\t\tif (this.removeCollapsed) collapsedCoords = null;\n\t\tif (noRepeatedCoords.length < minLength) {\n\t\t\treturn collapsedCoords;\n\t\t}\n\t\treturn noRepeatedCoords;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PrecisionReducerCoordinateOperation;\n\t}\n});\n","import hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport extend from '../../../../extend';\nimport Polygonal from '../geom/Polygonal';\nimport PrecisionReducerCoordinateOperation from './PrecisionReducerCoordinateOperation';\nexport default function GeometryPrecisionReducer() {\n\tthis.targetPM = null;\n\tthis.removeCollapsed = true;\n\tthis.changePrecisionModel = false;\n\tthis.isPointwise = false;\n\tlet pm = arguments[0];\n\tthis.targetPM = pm;\n}\nextend(GeometryPrecisionReducer.prototype, {\n\tfixPolygonalTopology: function (geom) {\n\t\tvar geomToBuffer = geom;\n\t\tif (!this.changePrecisionModel) {\n\t\t\tgeomToBuffer = this.changePM(geom, this.targetPM);\n\t\t}\n\t\tvar bufGeom = geomToBuffer.buffer(0);\n\t\tvar finalGeom = bufGeom;\n\t\tif (!this.changePrecisionModel) {\n\t\t\tfinalGeom = this.changePM(bufGeom, geom.getPrecisionModel());\n\t\t}\n\t\treturn finalGeom;\n\t},\n\treducePointwise: function (geom) {\n\t\tvar geomEdit = null;\n\t\tif (this.changePrecisionModel) {\n\t\t\tvar newFactory = this.createFactory(geom.getFactory(), this.targetPM);\n\t\t\tgeomEdit = new GeometryEditor(newFactory);\n\t\t} else geomEdit = new GeometryEditor();\n\t\tvar finalRemoveCollapsed = this.removeCollapsed;\n\t\tif (geom.getDimension() >= 2) finalRemoveCollapsed = true;\n\t\tvar reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this.targetPM, finalRemoveCollapsed));\n\t\treturn reduceGeom;\n\t},\n\tchangePM: function (geom, newPM) {\n\t\tvar geomEditor = this.createEditor(geom.getFactory(), newPM);\n\t\treturn geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\n\t},\n\tsetRemoveCollapsedComponents: function (removeCollapsed) {\n\t\tthis.removeCollapsed = removeCollapsed;\n\t},\n\tcreateFactory: function (inputFactory, pm) {\n\t\tvar newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\n\t\treturn newFactory;\n\t},\n\tsetChangePrecisionModel: function (changePrecisionModel) {\n\t\tthis.changePrecisionModel = changePrecisionModel;\n\t},\n\treduce: function (geom) {\n\t\tvar reducePW = this.reducePointwise(geom);\n\t\tif (this.isPointwise) return reducePW;\n\t\tif (!hasInterface(reducePW, Polygonal)) return reducePW;\n\t\tif (reducePW.isValid()) return reducePW;\n\t\treturn this.fixPolygonalTopology(reducePW);\n\t},\n\tsetPointwise: function (isPointwise) {\n\t\tthis.isPointwise = isPointwise;\n\t},\n\tcreateEditor: function (geomFactory, newPM) {\n\t\tif (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\n\t\tvar newFactory = this.createFactory(geomFactory, newPM);\n\t\tvar geomEdit = new GeometryEditor(newFactory);\n\t\treturn geomEdit;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryPrecisionReducer;\n\t}\n});\nGeometryPrecisionReducer.reduce = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treturn reducer.reduce(g);\n};\nGeometryPrecisionReducer.reducePointwise = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treducer.setPointwise(true);\n\treturn reducer.reduce(g);\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nexport default function DouglasPeuckerLineSimplifier() {\n\tthis.pts = null;\n\tthis.usePt = null;\n\tthis.distanceTolerance = null;\n\tthis.seg = new LineSegment();\n\tlet pts = arguments[0];\n\tthis.pts = pts;\n}\nextend(DouglasPeuckerLineSimplifier.prototype, {\n\tsimplifySection: function (i, j) {\n\t\tif (i + 1 === j) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.seg.p0 = this.pts[i];\n\t\tthis.seg.p1 = this.pts[j];\n\t\tvar maxDistance = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar distance = this.seg.distance(this.pts[k]);\n\t\t\tif (distance > maxDistance) {\n\t\t\t\tmaxDistance = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tif (maxDistance <= this.distanceTolerance) {\n\t\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\t\tthis.usePt[k] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simplifySection(i, maxIndex);\n\t\t\tthis.simplifySection(maxIndex, j);\n\t\t}\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function () {\n\t\tthis.usePt = new Array(this.pts.length).fill(null);\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tthis.usePt[i] = true;\n\t\t}\n\t\tthis.simplifySection(0, this.pts.length - 1);\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (this.usePt[i]) coordList.add(new Coordinate(this.pts[i]));\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DouglasPeuckerLineSimplifier;\n\t}\n});\nDouglasPeuckerLineSimplifier.simplify = function (pts, distanceTolerance) {\n\tvar simp = new DouglasPeuckerLineSimplifier(pts);\n\tsimp.setDistanceTolerance(distanceTolerance);\n\treturn simp.simplify();\n};\n","import DouglasPeuckerLineSimplifier from './DouglasPeuckerLineSimplifier';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Polygon from '../geom/Polygon';\nimport LinearRing from '../geom/LinearRing';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport inherits from '../../../../inherits';\nexport default function DouglasPeuckerSimplifier() {\n\tthis.inputGeom = null;\n\tthis.distanceTolerance = null;\n\tthis.isEnsureValidTopology = true;\n\tlet inputGeom = arguments[0];\n\tthis.inputGeom = inputGeom;\n}\nextend(DouglasPeuckerSimplifier.prototype, {\n\tsetEnsureValid: function (isEnsureValidTopology) {\n\t\tthis.isEnsureValidTopology = isEnsureValidTopology;\n\t},\n\tgetResultGeometry: function () {\n\t\tif (this.inputGeom.isEmpty()) return this.inputGeom.copy();\n\t\treturn new DPTransformer(this.isEnsureValidTopology, this.distanceTolerance).transform(this.inputGeom);\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DouglasPeuckerSimplifier;\n\t}\n});\nDouglasPeuckerSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new DouglasPeuckerSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction DPTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.isEnsureValidTopology = true;\n\tthis.distanceTolerance = null;\n\tlet isEnsureValidTopology = arguments[0], distanceTolerance = arguments[1];\n\tthis.isEnsureValidTopology = isEnsureValidTopology;\n\tthis.distanceTolerance = distanceTolerance;\n}\ninherits(DPTransformer, GeometryTransformer);\nextend(DPTransformer.prototype, {\n\ttransformPolygon: function (geom, parent) {\n\t\tif (geom.isEmpty()) return null;\n\t\tvar rawGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn rawGeom;\n\t\t}\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\tcreateValidArea: function (rawAreaGeom) {\n\t\tif (this.isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n\t\treturn rawAreaGeom;\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = null;\n\t\tif (inputPts.length === 0) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t} else {\n\t\t\tnewPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this.distanceTolerance);\n\t\t}\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar rawGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\ttransformLinearRing: function (geom, parent) {\n\t\tvar removeDegenerateRings = parent instanceof Polygon;\n\t\tvar simpResult = GeometryTransformer.prototype.transformLinearRing.call(this, geom, parent);\n\t\tif (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n\t\t;\n\t\treturn simpResult;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DPTransformer;\n\t}\n});\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer;\n","import extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport inherits from '../../../../inherits';\nexport default function TaggedLineSegment() {\n\tthis.parent = null;\n\tthis.index = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tTaggedLineSegment.call(this, p0, p1, null, -1);\n\t} else if (arguments.length === 4) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], parent = arguments[2], index = arguments[3];\n\t\tLineSegment.call(this, p0, p1);\n\t\tthis.parent = parent;\n\t\tthis.index = index;\n\t}\n}\ninherits(TaggedLineSegment, LineSegment);\nextend(TaggedLineSegment.prototype, {\n\tgetIndex: function () {\n\t\treturn this.index;\n\t},\n\tgetParent: function () {\n\t\treturn this.parent;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineSegment;\n\t}\n});\n","import extend from '../../../../extend';\nimport TaggedLineSegment from './TaggedLineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function TaggedLineString() {\n\tthis.parentLine = null;\n\tthis.segs = null;\n\tthis.resultSegs = new ArrayList();\n\tthis.minimumSize = null;\n\tif (arguments.length === 1) {\n\t\tlet parentLine = arguments[0];\n\t\tTaggedLineString.call(this, parentLine, 2);\n\t} else if (arguments.length === 2) {\n\t\tlet parentLine = arguments[0], minimumSize = arguments[1];\n\t\tthis.parentLine = parentLine;\n\t\tthis.minimumSize = minimumSize;\n\t\tthis.init();\n\t}\n}\nextend(TaggedLineString.prototype, {\n\taddToResult: function (seg) {\n\t\tthis.resultSegs.add(seg);\n\t},\n\tasLineString: function () {\n\t\treturn this.parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this.resultSegs));\n\t},\n\tgetResultSize: function () {\n\t\tvar resultSegsSize = this.resultSegs.size();\n\t\treturn resultSegsSize === 0 ? 0 : resultSegsSize + 1;\n\t},\n\tgetParent: function () {\n\t\treturn this.parentLine;\n\t},\n\tgetSegment: function (i) {\n\t\treturn this.segs[i];\n\t},\n\tgetParentCoordinates: function () {\n\t\treturn this.parentLine.getCoordinates();\n\t},\n\tgetMinimumSize: function () {\n\t\treturn this.minimumSize;\n\t},\n\tasLinearRing: function () {\n\t\treturn this.parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this.resultSegs));\n\t},\n\tgetSegments: function () {\n\t\treturn this.segs;\n\t},\n\tinit: function () {\n\t\tvar pts = this.parentLine.getCoordinates();\n\t\tthis.segs = new Array(pts.length - 1).fill(null);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar seg = new TaggedLineSegment(pts[i], pts[i + 1], this.parentLine, i);\n\t\t\tthis.segs[i] = seg;\n\t\t}\n\t},\n\tgetResultCoordinates: function () {\n\t\treturn TaggedLineString.extractCoordinates(this.resultSegs);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineString;\n\t}\n});\nTaggedLineString.extractCoordinates = function (segs) {\n\tvar pts = new Array(segs.size() + 1).fill(null);\n\tvar seg = null;\n\tfor (var i = 0; i < segs.size(); i++) {\n\t\tseg = segs.get(i);\n\t\tpts[i] = seg.p0;\n\t}\n\tpts[pts.length - 1] = seg.p1;\n\treturn pts;\n};\n","import Quadtree from '../index/quadtree/Quadtree';\nimport ItemVisitor from '../index/ItemVisitor';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nimport TaggedLineString from './TaggedLineString';\nexport default function LineSegmentIndex() {\n\tthis.index = new Quadtree();\n}\nextend(LineSegmentIndex.prototype, {\n\tremove: function (seg) {\n\t\tthis.index.remove(new Envelope(seg.p0, seg.p1), seg);\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof TaggedLineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tvar segs = line.getSegments();\n\t\t\tfor (var i = 0; i < segs.length; i++) {\n\t\t\t\tvar seg = segs[i];\n\t\t\t\tthis.add(seg);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tthis.index.insert(new Envelope(seg.p0, seg.p1), seg);\n\t\t}\n\t},\n\tquery: function (querySeg) {\n\t\tvar env = new Envelope(querySeg.p0, querySeg.p1);\n\t\tvar visitor = new LineSegmentVisitor(querySeg);\n\t\tthis.index.query(env, visitor);\n\t\tvar itemsFound = visitor.getItems();\n\t\treturn itemsFound;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegmentIndex;\n\t}\n});\nfunction LineSegmentVisitor() {\n\tthis.querySeg = null;\n\tthis.items = new ArrayList();\n\tlet querySeg = arguments[0];\n\tthis.querySeg = querySeg;\n}\nextend(LineSegmentVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tvar seg = item;\n\t\tif (Envelope.intersects(seg.p0, seg.p1, this.querySeg.p0, this.querySeg.p1)) this.items.add(item);\n\t},\n\tgetItems: function () {\n\t\treturn this.items;\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegmentVisitor;\n\t}\n});\n","import extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport LineSegmentIndex from './LineSegmentIndex';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default function TaggedLineStringSimplifier() {\n\tthis.li = new RobustLineIntersector();\n\tthis.inputIndex = new LineSegmentIndex();\n\tthis.outputIndex = new LineSegmentIndex();\n\tthis.line = null;\n\tthis.linePts = null;\n\tthis.distanceTolerance = 0.0;\n\tlet inputIndex = arguments[0], outputIndex = arguments[1];\n\tthis.inputIndex = inputIndex;\n\tthis.outputIndex = outputIndex;\n}\nextend(TaggedLineStringSimplifier.prototype, {\n\tflatten: function (start, end) {\n\t\tvar p0 = this.linePts[start];\n\t\tvar p1 = this.linePts[end];\n\t\tvar newSeg = new LineSegment(p0, p1);\n\t\tthis.remove(this.line, start, end);\n\t\tthis.outputIndex.add(newSeg);\n\t\treturn newSeg;\n\t},\n\thasBadIntersection: function (parentLine, sectionIndex, candidateSeg) {\n\t\tif (this.hasBadOutputIntersection(candidateSeg)) return true;\n\t\tif (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\n\t\treturn false;\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tsimplifySection: function (i, j, depth) {\n\t\tdepth += 1;\n\t\tvar sectionIndex = new Array(2).fill(null);\n\t\tif (i + 1 === j) {\n\t\t\tvar newSeg = this.line.getSegment(i);\n\t\t\tthis.line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tvar isValidToSimplify = true;\n\t\tif (this.line.getResultSize() < this.line.getMinimumSize()) {\n\t\t\tvar worstCaseSize = depth + 1;\n\t\t\tif (worstCaseSize < this.line.getMinimumSize()) isValidToSimplify = false;\n\t\t}\n\t\tvar distance = new Array(1).fill(null);\n\t\tvar furthestPtIndex = this.findFurthestPoint(this.linePts, i, j, distance);\n\t\tif (distance[0] > this.distanceTolerance) isValidToSimplify = false;\n\t\tvar candidateSeg = new LineSegment();\n\t\tcandidateSeg.p0 = this.linePts[i];\n\t\tcandidateSeg.p1 = this.linePts[j];\n\t\tsectionIndex[0] = i;\n\t\tsectionIndex[1] = j;\n\t\tif (this.hasBadIntersection(this.line, sectionIndex, candidateSeg)) isValidToSimplify = false;\n\t\tif (isValidToSimplify) {\n\t\t\tvar newSeg = this.flatten(i, j);\n\t\t\tthis.line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tthis.simplifySection(i, furthestPtIndex, depth);\n\t\tthis.simplifySection(furthestPtIndex, j, depth);\n\t},\n\thasBadOutputIntersection: function (candidateSeg) {\n\t\tvar querySegs = this.outputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tfindFurthestPoint: function (pts, i, j, maxDistance) {\n\t\tvar seg = new LineSegment();\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[j];\n\t\tvar maxDist = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar midPt = pts[k];\n\t\t\tvar distance = seg.distance(midPt);\n\t\t\tif (distance > maxDist) {\n\t\t\t\tmaxDist = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tmaxDistance[0] = maxDist;\n\t\treturn maxIndex;\n\t},\n\tsimplify: function (line) {\n\t\tthis.line = line;\n\t\tthis.linePts = line.getParentCoordinates();\n\t\tthis.simplifySection(0, this.linePts.length - 1, 0);\n\t},\n\tremove: function (line, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar seg = line.getSegment(i);\n\t\t\tthis.inputIndex.remove(seg);\n\t\t}\n\t},\n\thasInteriorIntersection: function (seg0, seg1) {\n\t\tthis.li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\n\t\treturn this.li.isInteriorIntersection();\n\t},\n\thasBadInputIntersection: function (parentLine, sectionIndex, candidateSeg) {\n\t\tvar querySegs = this.inputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\tif (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineStringSimplifier;\n\t}\n});\nTaggedLineStringSimplifier.isInLineSection = function (line, sectionIndex, seg) {\n\tif (seg.getParent() !== line.getParent()) return false;\n\tvar segIndex = seg.getIndex();\n\tif (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\n\treturn false;\n};\n","import extend from '../../../../extend';\nimport TaggedLineStringSimplifier from './TaggedLineStringSimplifier';\nimport LineSegmentIndex from './LineSegmentIndex';\nexport default function TaggedLinesSimplifier() {\n\tthis.inputIndex = new LineSegmentIndex();\n\tthis.outputIndex = new LineSegmentIndex();\n\tthis.distanceTolerance = 0.0;\n}\nextend(TaggedLinesSimplifier.prototype, {\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function (taggedLines) {\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tthis.inputIndex.add(i.next());\n\t\t}\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tvar tlss = new TaggedLineStringSimplifier(this.inputIndex, this.outputIndex);\n\t\t\ttlss.setDistanceTolerance(this.distanceTolerance);\n\t\t\ttlss.simplify(i.next());\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLinesSimplifier;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport TaggedLinesSimplifier from './TaggedLinesSimplifier';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport inherits from '../../../../inherits';\nimport TaggedLineString from './TaggedLineString';\nexport default function TopologyPreservingSimplifier() {\n\tthis.inputGeom = null;\n\tthis.lineSimplifier = new TaggedLinesSimplifier();\n\tthis.linestringMap = null;\n\tlet inputGeom = arguments[0];\n\tthis.inputGeom = inputGeom;\n}\nextend(TopologyPreservingSimplifier.prototype, {\n\tgetResultGeometry: function () {\n\t\tif (this.inputGeom.isEmpty()) return this.inputGeom.copy();\n\t\tthis.linestringMap = new HashMap();\n\t\tthis.inputGeom.apply(new LineStringMapBuilderFilter(this));\n\t\tthis.lineSimplifier.simplify(this.linestringMap.values());\n\t\tvar result = new LineStringTransformer(this.linestringMap).transform(this.inputGeom);\n\t\treturn result;\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis.lineSimplifier.setDistanceTolerance(distanceTolerance);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyPreservingSimplifier;\n\t}\n});\nTopologyPreservingSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new TopologyPreservingSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction LineStringTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.linestringMap = null;\n\tlet linestringMap = arguments[0];\n\tthis.linestringMap = linestringMap;\n}\ninherits(LineStringTransformer, GeometryTransformer);\nextend(LineStringTransformer.prototype, {\n\ttransformCoordinates: function (coords, parent) {\n\t\tif (coords.size() === 0) return null;\n\t\tif (parent instanceof LineString) {\n\t\t\tvar taggedLine = this.linestringMap.get(parent);\n\t\t\treturn this.createCoordinateSequence(taggedLine.getResultCoordinates());\n\t\t}\n\t\treturn GeometryTransformer.prototype.transformCoordinates.call(this, coords, parent);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringTransformer;\n\t}\n});\nfunction LineStringMapBuilderFilter() {\n\tthis.tps = null;\n\tlet tps = arguments[0];\n\tthis.tps = tps;\n}\nextend(LineStringMapBuilderFilter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof LineString) {\n\t\t\tvar line = geom;\n\t\t\tif (line.isEmpty()) return null;\n\t\t\tvar minSize = line.isClosed() ? 4 : 2;\n\t\t\tvar taggedLine = new TaggedLineString(line, minSize);\n\t\t\tthis.tps.linestringMap.put(line, taggedLine);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringMapBuilderFilter;\n\t}\n});\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nexport default function SplitSegment() {\n\tthis.seg = null;\n\tthis.segLen = null;\n\tthis.splitPt = null;\n\tthis.minimumLen = 0.0;\n\tlet seg = arguments[0];\n\tthis.seg = seg;\n\tthis.segLen = seg.getLength();\n}\nextend(SplitSegment.prototype, {\n\tsplitAt: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pt = arguments[0];\n\t\t\tvar minFrac = this.minimumLen / this.segLen;\n\t\t\tif (pt.distance(this.seg.p0) < this.minimumLen) {\n\t\t\t\tthis.splitPt = this.seg.pointAlong(minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (pt.distance(this.seg.p1) < this.minimumLen) {\n\t\t\t\tthis.splitPt = SplitSegment.pointAlongReverse(this.seg, minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.splitPt = pt;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet length = arguments[0], endPt = arguments[1];\n\t\t\tvar actualLen = this.getConstrainedLength(length);\n\t\t\tvar frac = actualLen / this.segLen;\n\t\t\tif (endPt.equals2D(this.seg.p0)) this.splitPt = this.seg.pointAlong(frac); else this.splitPt = SplitSegment.pointAlongReverse(this.seg, frac);\n\t\t}\n\t},\n\tsetMinimumLength: function (minLen) {\n\t\tthis.minimumLen = minLen;\n\t},\n\tgetConstrainedLength: function (len) {\n\t\tif (len < this.minimumLen) return this.minimumLen;\n\t\treturn len;\n\t},\n\tgetSplitPoint: function () {\n\t\treturn this.splitPt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SplitSegment;\n\t}\n});\nSplitSegment.pointAlongReverse = function (seg, segmentLengthFraction) {\n\tvar coord = new Coordinate();\n\tcoord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\n\tcoord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\n\treturn coord;\n};\n","import extend from '../../../../extend';\nexport default function ConstraintSplitPointFinder() {}\nextend(ConstraintSplitPointFinder.prototype, {\n\tfindSplitPoint: function (seg, encroachPt) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConstraintSplitPointFinder;\n\t}\n});\n","import extend from '../../../../extend';\nimport SplitSegment from './SplitSegment';\nimport ConstraintSplitPointFinder from './ConstraintSplitPointFinder';\nexport default function NonEncroachingSplitPointFinder() {}\nextend(NonEncroachingSplitPointFinder.prototype, {\n\tfindSplitPoint: function (seg, encroachPt) {\n\t\tvar lineSeg = seg.getLineSegment();\n\t\tvar segLen = lineSeg.getLength();\n\t\tvar midPtLen = segLen / 2;\n\t\tvar splitSeg = new SplitSegment(lineSeg);\n\t\tvar projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\n\t\tvar nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\n\t\tvar maxSplitLen = nonEncroachDiam;\n\t\tif (maxSplitLen > midPtLen) {\n\t\t\tmaxSplitLen = midPtLen;\n\t\t}\n\t\tsplitSeg.setMinimumLength(maxSplitLen);\n\t\tsplitSeg.splitAt(projPt);\n\t\treturn splitSeg.getSplitPoint();\n\t},\n\tinterfaces_: function () {\n\t\treturn [ConstraintSplitPointFinder];\n\t},\n\tgetClass: function () {\n\t\treturn NonEncroachingSplitPointFinder;\n\t}\n});\nNonEncroachingSplitPointFinder.projectedSplitPoint = function (seg, encroachPt) {\n\tvar lineSeg = seg.getLineSegment();\n\tvar projPt = lineSeg.project(encroachPt);\n\treturn projPt;\n};\n","import WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport extend from '../../../../../extend';\nimport DD from '../../math/DD';\nimport System from '../../../../../java/lang/System';\nimport Triangle from '../../geom/Triangle';\nexport default function TrianglePredicate() {}\nextend(TrianglePredicate.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TrianglePredicate;\n\t}\n});\nTrianglePredicate.triArea = function (a, b, c) {\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n};\nTrianglePredicate.isInCircleDDNormalized = function (a, b, c, p) {\n\tvar adx = DD.valueOf(a.x).selfSubtract(p.x);\n\tvar ady = DD.valueOf(a.y).selfSubtract(p.y);\n\tvar bdx = DD.valueOf(b.x).selfSubtract(p.x);\n\tvar bdy = DD.valueOf(b.y).selfSubtract(p.y);\n\tvar cdx = DD.valueOf(c.x).selfSubtract(p.x);\n\tvar cdy = DD.valueOf(c.y).selfSubtract(p.y);\n\tvar abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\n\tvar bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\n\tvar cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\n\tvar alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\n\tvar blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\n\tvar clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\n\tvar sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.checkRobustInCircle = function (a, b, c, p) {\n\tvar nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\n\tvar isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\n\tvar isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\n\tvar circumCentre = Triangle.circumcentre(a, b, c);\n\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\n\tif (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n\t\tSystem.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\n\t\tSystem.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\n\t\tSystem.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\n\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\n\t\tSystem.out.println();\n\t}\n};\nTrianglePredicate.isInCircleDDFast = function (a, b, c, p) {\n\tvar aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\n\tvar bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\n\tvar cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\n\tvar pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\n\tvar sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleCC = function (a, b, c, p) {\n\tvar cc = Triangle.circumcentre(a, b, c);\n\tvar ccRadius = a.distance(cc);\n\tvar pRadiusDiff = p.distance(cc) - ccRadius;\n\treturn pRadiusDiff <= 0;\n};\nTrianglePredicate.isInCircleNormalized = function (a, b, c, p) {\n\tvar adx = a.x - p.x;\n\tvar ady = a.y - p.y;\n\tvar bdx = b.x - p.x;\n\tvar bdy = b.y - p.y;\n\tvar cdx = c.x - p.x;\n\tvar cdy = c.y - p.y;\n\tvar abdet = adx * bdy - bdx * ady;\n\tvar bcdet = bdx * cdy - cdx * bdy;\n\tvar cadet = cdx * ady - adx * cdy;\n\tvar alift = adx * adx + ady * ady;\n\tvar blift = bdx * bdx + bdy * bdy;\n\tvar clift = cdx * cdx + cdy * cdy;\n\tvar disc = alift * bcdet + blift * cadet + clift * abdet;\n\treturn disc > 0;\n};\nTrianglePredicate.isInCircleDDSlow = function (a, b, c, p) {\n\tvar px = DD.valueOf(p.x);\n\tvar py = DD.valueOf(p.y);\n\tvar ax = DD.valueOf(a.x);\n\tvar ay = DD.valueOf(a.y);\n\tvar bx = DD.valueOf(b.x);\n\tvar by = DD.valueOf(b.y);\n\tvar cx = DD.valueOf(c.x);\n\tvar cy = DD.valueOf(c.y);\n\tvar aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\n\tvar bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\n\tvar cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\n\tvar pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\n\tvar sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleNonRobust = function (a, b, c, p) {\n\tvar isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleRobust = function (a, b, c, p) {\n\treturn TrianglePredicate.isInCircleNormalized(a, b, c, p);\n};\nTrianglePredicate.triAreaDDSlow = function (ax, ay, bx, by, cx, cy) {\n\treturn bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\n};\nTrianglePredicate.triAreaDDFast = function (a, b, c) {\n\tvar t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\n\tvar t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\n\treturn t1.selfSubtract(t2);\n};\n","import NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport Coordinate from '../../geom/Coordinate';\nimport TrianglePredicate from './TrianglePredicate';\nimport extend from '../../../../../extend';\nimport System from '../../../../../java/lang/System';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default function Vertex() {\n\tthis.p = null;\n\tif (arguments.length === 1) {\n\t\tlet _p = arguments[0];\n\t\tthis.p = new Coordinate(_p);\n\t} else if (arguments.length === 2) {\n\t\tlet _x = arguments[0], _y = arguments[1];\n\t\tthis.p = new Coordinate(_x, _y);\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _z = arguments[2];\n\t\tthis.p = new Coordinate(_x, _y, _z);\n\t}\n}\nextend(Vertex.prototype, {\n\tcircleCenter: function (b, c) {\n\t\tvar a = new Vertex(this.getX(), this.getY());\n\t\tvar cab = this.bisector(a, b);\n\t\tvar cbc = this.bisector(b, c);\n\t\tvar hcc = new HCoordinate(cab, cbc);\n\t\tvar cc = null;\n\t\ttry {\n\t\t\tcc = new Vertex(hcc.getX(), hcc.getY());\n\t\t} catch (nre) {\n\t\t\tif (nre instanceof NotRepresentableException) {\n\t\t\t\tSystem.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\n\t\t\t\tSystem.err.println(nre);\n\t\t\t} else throw nre;\n\t\t} finally {}\n\t\treturn cc;\n\t},\n\tdot: function (v) {\n\t\treturn this.p.x * v.getX() + this.p.y * v.getY();\n\t},\n\tmagn: function () {\n\t\treturn Math.sqrt(this.p.x * this.p.x + this.p.y * this.p.y);\n\t},\n\tgetZ: function () {\n\t\treturn this.p.z;\n\t},\n\tbisector: function (a, b) {\n\t\tvar dx = b.getX() - a.getX();\n\t\tvar dy = b.getY() - a.getY();\n\t\tvar l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\n\t\tvar l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\n\t\treturn new HCoordinate(l1, l2);\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet _x = arguments[0];\n\t\t\tif (this.p.x === _x.getX() && this.p.y === _x.getY()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet _x = arguments[0], tolerance = arguments[1];\n\t\t\tif (this.p.distance(_x.getCoordinate()) < tolerance) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.p;\n\t},\n\tisInCircle: function (a, b, c) {\n\t\treturn TrianglePredicate.isInCircleRobust(a.p, b.p, c.p, this.p);\n\t},\n\tinterpolateZValue: function (v0, v1, v2) {\n\t\tvar x0 = v0.getX();\n\t\tvar y0 = v0.getY();\n\t\tvar a = v1.getX() - x0;\n\t\tvar b = v2.getX() - x0;\n\t\tvar c = v1.getY() - y0;\n\t\tvar d = v2.getY() - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = this.getX() - x0;\n\t\tvar dy = this.getY() - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\n\t\treturn z;\n\t},\n\tmidPoint: function (a) {\n\t\tvar xm = (this.p.x + a.getX()) / 2.0;\n\t\tvar ym = (this.p.y + a.getY()) / 2.0;\n\t\tvar zm = (this.p.z + a.getZ()) / 2.0;\n\t\treturn new Vertex(xm, ym, zm);\n\t},\n\trightOf: function (e) {\n\t\treturn this.isCCW(e.dest(), e.orig());\n\t},\n\tisCCW: function (b, c) {\n\t\treturn (b.p.x - this.p.x) * (c.p.y - this.p.y) - (b.p.y - this.p.y) * (c.p.x - this.p.x) > 0;\n\t},\n\tgetX: function () {\n\t\treturn this.p.x;\n\t},\n\tcrossProduct: function (v) {\n\t\treturn this.p.x * v.getY() - this.p.y * v.getX();\n\t},\n\tsetZ: function (_z) {\n\t\tthis.p.z = _z;\n\t},\n\ttimes: function (c) {\n\t\treturn new Vertex(c * this.p.x, c * this.p.y);\n\t},\n\tcross: function () {\n\t\treturn new Vertex(this.p.y, -this.p.x);\n\t},\n\tleftOf: function (e) {\n\t\treturn this.isCCW(e.orig(), e.dest());\n\t},\n\ttoString: function () {\n\t\treturn \"POINT (\" + this.p.x + \" \" + this.p.y + \")\";\n\t},\n\tsub: function (v) {\n\t\treturn new Vertex(this.p.x - v.getX(), this.p.y - v.getY());\n\t},\n\tgetY: function () {\n\t\treturn this.p.y;\n\t},\n\tclassify: function (p0, p1) {\n\t\tvar p2 = this;\n\t\tvar a = p1.sub(p0);\n\t\tvar b = p2.sub(p0);\n\t\tvar sa = a.crossProduct(b);\n\t\tif (sa > 0.0) return Vertex.LEFT;\n\t\tif (sa < 0.0) return Vertex.RIGHT;\n\t\tif (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\n\t\tif (a.magn() < b.magn()) return Vertex.BEYOND;\n\t\tif (p0.equals(p2)) return Vertex.ORIGIN;\n\t\tif (p1.equals(p2)) return Vertex.DESTINATION;\n\t\treturn Vertex.BETWEEN;\n\t},\n\tsum: function (v) {\n\t\treturn new Vertex(this.p.x + v.getX(), this.p.y + v.getY());\n\t},\n\tdistance: function (v1, v2) {\n\t\treturn Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\n\t},\n\tcircumRadiusRatio: function (b, c) {\n\t\tvar x = this.circleCenter(b, c);\n\t\tvar radius = this.distance(x, b);\n\t\tvar edgeLength = this.distance(this, b);\n\t\tvar el = this.distance(b, c);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\tel = this.distance(c, this);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\treturn radius / edgeLength;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Vertex;\n\t}\n});\nVertex.interpolateZ = function () {\n\tif (arguments.length === 3) {\n\t\tlet p = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\tvar segLen = p0.distance(p1);\n\t\tvar ptLen = p.distance(p0);\n\t\tvar dz = p1.z - p0.z;\n\t\tvar pz = p0.z + dz * (ptLen / segLen);\n\t\treturn pz;\n\t} else if (arguments.length === 4) {\n\t\tlet p = arguments[0], v0 = arguments[1], v1 = arguments[2], v2 = arguments[3];\n\t\tvar x0 = v0.x;\n\t\tvar y0 = v0.y;\n\t\tvar a = v1.x - x0;\n\t\tvar b = v2.x - x0;\n\t\tvar c = v1.y - y0;\n\t\tvar d = v2.y - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = p.x - x0;\n\t\tvar dy = p.y - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\t\treturn z;\n\t}\n};\nVertex.LEFT = 0;\nVertex.RIGHT = 1;\nVertex.BEYOND = 2;\nVertex.BEHIND = 3;\nVertex.BETWEEN = 4;\nVertex.ORIGIN = 5;\nVertex.DESTINATION = 6;\n","import extend from '../../../../extend';\nimport Vertex from './quadedge/Vertex';\nimport inherits from '../../../../inherits';\nexport default function ConstraintVertex() {\n\tthis._isOnConstraint = null;\n\tthis.constraint = null;\n\tlet p = arguments[0];\n\tVertex.call(this, p);\n}\ninherits(ConstraintVertex, Vertex);\nextend(ConstraintVertex.prototype, {\n\tgetConstraint: function () {\n\t\treturn this.constraint;\n\t},\n\tsetOnConstraint: function (isOnConstraint) {\n\t\tthis._isOnConstraint = isOnConstraint;\n\t},\n\tmerge: function (other) {\n\t\tif (other._isOnConstraint) {\n\t\t\tthis._isOnConstraint = true;\n\t\t\tthis.constraint = other.constraint;\n\t\t}\n\t},\n\tisOnConstraint: function () {\n\t\treturn this._isOnConstraint;\n\t},\n\tsetConstraint: function (constraint) {\n\t\tthis._isOnConstraint = true;\n\t\tthis.constraint = constraint;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConstraintVertex;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nexport default function QuadEdge() {\n\tthis._rot = null;\n\tthis.vertex = null;\n\tthis.next = null;\n\tthis.data = null;\n}\nextend(QuadEdge.prototype, {\n\tequalsNonOriented: function (qe) {\n\t\tif (this.equalsOriented(qe)) return true;\n\t\tif (this.equalsOriented(qe.sym())) return true;\n\t\treturn false;\n\t},\n\ttoLineSegment: function () {\n\t\treturn new LineSegment(this.vertex.getCoordinate(), this.dest().getCoordinate());\n\t},\n\tdest: function () {\n\t\treturn this.sym().orig();\n\t},\n\toNext: function () {\n\t\treturn this.next;\n\t},\n\tequalsOriented: function (qe) {\n\t\tif (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\n\t\treturn false;\n\t},\n\tdNext: function () {\n\t\treturn this.sym().oNext().sym();\n\t},\n\tlPrev: function () {\n\t\treturn this.next.sym();\n\t},\n\trPrev: function () {\n\t\treturn this.sym().oNext();\n\t},\n\trot: function () {\n\t\treturn this._rot;\n\t},\n\toPrev: function () {\n\t\treturn this._rot.next._rot;\n\t},\n\tsym: function () {\n\t\treturn this._rot._rot;\n\t},\n\tsetOrig: function (o) {\n\t\tthis.vertex = o;\n\t},\n\tlNext: function () {\n\t\treturn this.invRot().oNext().rot();\n\t},\n\tgetLength: function () {\n\t\treturn this.orig().getCoordinate().distance(this.dest().getCoordinate());\n\t},\n\tinvRot: function () {\n\t\treturn this._rot.sym();\n\t},\n\tsetDest: function (d) {\n\t\tthis.sym().setOrig(d);\n\t},\n\tsetData: function (data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function () {\n\t\treturn this.data;\n\t},\n\tdelete: function () {\n\t\tthis._rot = null;\n\t},\n\torig: function () {\n\t\treturn this.vertex;\n\t},\n\trNext: function () {\n\t\treturn this._rot.next.invRot();\n\t},\n\ttoString: function () {\n\t\tvar p0 = this.vertex.getCoordinate();\n\t\tvar p1 = this.dest().getCoordinate();\n\t\treturn WKTWriter.toLineString(p0, p1);\n\t},\n\tisLive: function () {\n\t\treturn this._rot !== null;\n\t},\n\tgetPrimary: function () {\n\t\tif (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this; else return this.sym();\n\t},\n\tdPrev: function () {\n\t\treturn this.invRot().oNext().invRot();\n\t},\n\tsetNext: function (next) {\n\t\tthis.next = next;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdge;\n\t}\n});\nQuadEdge.makeEdge = function (o, d) {\n\tvar q0 = new QuadEdge();\n\tvar q1 = new QuadEdge();\n\tvar q2 = new QuadEdge();\n\tvar q3 = new QuadEdge();\n\tq0._rot = q1;\n\tq1._rot = q2;\n\tq2._rot = q3;\n\tq3._rot = q0;\n\tq0.setNext(q0);\n\tq1.setNext(q3);\n\tq2.setNext(q2);\n\tq3.setNext(q1);\n\tvar base = q0;\n\tbase.setOrig(o);\n\tbase.setDest(d);\n\treturn base;\n};\nQuadEdge.swap = function (e) {\n\tvar a = e.oPrev();\n\tvar b = e.sym().oPrev();\n\tQuadEdge.splice(e, a);\n\tQuadEdge.splice(e.sym(), b);\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b.lNext());\n\te.setOrig(a.dest());\n\te.setDest(b.dest());\n};\nQuadEdge.splice = function (a, b) {\n\tvar alpha = a.oNext().rot();\n\tvar beta = b.oNext().rot();\n\tvar t1 = b.oNext();\n\tvar t2 = a.oNext();\n\tvar t3 = beta.oNext();\n\tvar t4 = alpha.oNext();\n\ta.setNext(t1);\n\tb.setNext(t2);\n\talpha.setNext(t3);\n\tbeta.setNext(t4);\n};\nQuadEdge.connect = function (a, b) {\n\tvar e = QuadEdge.makeEdge(a.dest(), b.orig());\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b);\n\treturn e;\n};\n","import QuadEdge from './quadedge/QuadEdge';\nimport extend from '../../../../extend';\nexport default function IncrementalDelaunayTriangulator() {\n\tthis.subdiv = null;\n\tthis.isUsingTolerance = false;\n\tlet subdiv = arguments[0];\n\tthis.subdiv = subdiv;\n\tthis.isUsingTolerance = subdiv.getTolerance() > 0.0;\n}\nextend(IncrementalDelaunayTriangulator.prototype, {\n\tinsertSite: function (v) {\n\t\tvar e = this.subdiv.locate(v);\n\t\tif (this.subdiv.isVertexOfEdge(e, v)) {\n\t\t\treturn e;\n\t\t} else if (this.subdiv.isOnEdge(e, v.getCoordinate())) {\n\t\t\te = e.oPrev();\n\t\t\tthis.subdiv.delete(e.oNext());\n\t\t}\n\t\tvar base = this.subdiv.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.subdiv.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\tdo {\n\t\t\tvar t = e.oPrev();\n\t\t\tif (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n\t\t\t\tQuadEdge.swap(e);\n\t\t\t\te = e.oPrev();\n\t\t\t} else if (e.oNext() === startEdge) {\n\t\t\t\treturn base;\n\t\t\t} else {\n\t\t\t\te = e.oNext().lPrev();\n\t\t\t}\n\t\t} while (true);\n\t},\n\tinsertSites: function (vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IncrementalDelaunayTriangulator;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function QuadEdgeLocator() {}\nextend(QuadEdgeLocator.prototype, {\n\tlocate: function (v) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdgeLocator;\n\t}\n});\n","import extend from '../../../../../extend';\nimport QuadEdgeLocator from './QuadEdgeLocator';\nexport default function LastFoundQuadEdgeLocator() {\n\tthis.subdiv = null;\n\tthis.lastEdge = null;\n\tlet subdiv = arguments[0];\n\tthis.subdiv = subdiv;\n\tthis.init();\n}\nextend(LastFoundQuadEdgeLocator.prototype, {\n\tinit: function () {\n\t\tthis.lastEdge = this.findEdge();\n\t},\n\tlocate: function (v) {\n\t\tif (!this.lastEdge.isLive()) {\n\t\t\tthis.init();\n\t\t}\n\t\tvar e = this.subdiv.locateFromEdge(v, this.lastEdge);\n\t\tthis.lastEdge = e;\n\t\treturn e;\n\t},\n\tfindEdge: function () {\n\t\tvar edges = this.subdiv.getEdges();\n\t\treturn edges.iterator().next();\n\t},\n\tinterfaces_: function () {\n\t\treturn [QuadEdgeLocator];\n\t},\n\tgetClass: function () {\n\t\treturn LastFoundQuadEdgeLocator;\n\t}\n});\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nimport inherits from '../../../../../inherits';\nexport default function LocateFailureException() {\n\tthis.seg = null;\n\tif (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet msg = arguments[0];\n\t\t\tRuntimeException.call(this, msg);\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tRuntimeException.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\n\t\t\tthis.seg = new LineSegment(seg);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet msg = arguments[0], seg = arguments[1];\n\t\tRuntimeException.call(this, LocateFailureException.msgWithSpatial(msg, seg));\n\t\tthis.seg = new LineSegment(seg);\n\t}\n}\ninherits(LocateFailureException, RuntimeException);\nextend(LocateFailureException.prototype, {\n\tgetSegment: function () {\n\t\treturn this.seg;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocateFailureException;\n\t}\n});\nLocateFailureException.msgWithSpatial = function (msg, seg) {\n\tif (seg !== null) return msg + \" [ \" + seg + \" ]\";\n\treturn msg;\n};\n","import extend from '../../../../../extend';\nexport default function TriangleVisitor() {}\nextend(TriangleVisitor.prototype, {\n\tvisit: function (triEdges) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleVisitor;\n\t}\n});\n","import QuadEdge from './QuadEdge';\nimport CoordinateList from '../../geom/CoordinateList';\nimport HashSet from '../../../../../java/util/HashSet';\nimport WKTWriter from '../../io/WKTWriter';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Stack from '../../../../../java/util/Stack';\nimport extend from '../../../../../extend';\nimport LastFoundQuadEdgeLocator from './LastFoundQuadEdgeLocator';\nimport LocateFailureException from './LocateFailureException';\nimport Vertex from './Vertex';\nimport System from '../../../../../java/lang/System';\nimport LineSegment from '../../geom/LineSegment';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nimport Triangle from '../../geom/Triangle';\nimport TriangleVisitor from './TriangleVisitor';\nexport default function QuadEdgeSubdivision() {\n\tthis.visitedKey = 0;\n\tthis.quadEdges = new ArrayList();\n\tthis.startingEdge = null;\n\tthis.tolerance = null;\n\tthis.edgeCoincidenceTolerance = null;\n\tthis.frameVertex = new Array(3).fill(null);\n\tthis.frameEnv = null;\n\tthis.locator = null;\n\tthis.seg = new LineSegment();\n\tthis.triEdges = new Array(3).fill(null);\n\tlet env = arguments[0], tolerance = arguments[1];\n\tthis.tolerance = tolerance;\n\tthis.edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\n\tthis.createFrame(env);\n\tthis.startingEdge = this.initSubdiv();\n\tthis.locator = new LastFoundQuadEdgeLocator(this);\n}\nextend(QuadEdgeSubdivision.prototype, {\n\tgetTriangleVertices: function (includeFrame) {\n\t\tvar visitor = new TriangleVertexListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleVertices();\n\t},\n\tisFrameVertex: function (v) {\n\t\tif (v.equals(this.frameVertex[0])) return true;\n\t\tif (v.equals(this.frameVertex[1])) return true;\n\t\tif (v.equals(this.frameVertex[2])) return true;\n\t\treturn false;\n\t},\n\tisVertexOfEdge: function (e, v) {\n\t\tif (v.equals(e.orig(), this.tolerance) || v.equals(e.dest(), this.tolerance)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tconnect: function (a, b) {\n\t\tvar q = QuadEdge.connect(a, b);\n\t\tthis.quadEdges.add(q);\n\t\treturn q;\n\t},\n\tgetVoronoiCellPolygon: function (qe, geomFact) {\n\t\tvar cellPts = new ArrayList();\n\t\tvar startQE = qe;\n\t\tdo {\n\t\t\tvar cc = qe.rot().orig().getCoordinate();\n\t\t\tcellPts.add(cc);\n\t\t\tqe = qe.oPrev();\n\t\t} while (qe !== startQE);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.addAll(cellPts, false);\n\t\tcoordList.closeRing();\n\t\tif (coordList.size() < 4) {\n\t\t\tSystem.out.println(coordList);\n\t\t\tcoordList.add(coordList.get(coordList.size() - 1), true);\n\t\t}\n\t\tvar pts = coordList.toCoordinateArray();\n\t\tvar cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts), null);\n\t\tvar v = startQE.orig();\n\t\tcellPoly.setUserData(v.getCoordinate());\n\t\treturn cellPoly;\n\t},\n\tsetLocator: function (locator) {\n\t\tthis.locator = locator;\n\t},\n\tinitSubdiv: function () {\n\t\tvar ea = this.makeEdge(this.frameVertex[0], this.frameVertex[1]);\n\t\tvar eb = this.makeEdge(this.frameVertex[1], this.frameVertex[2]);\n\t\tQuadEdge.splice(ea.sym(), eb);\n\t\tvar ec = this.makeEdge(this.frameVertex[2], this.frameVertex[0]);\n\t\tQuadEdge.splice(eb.sym(), ec);\n\t\tQuadEdge.splice(ec.sym(), ea);\n\t\treturn ea;\n\t},\n\tisFrameBorderEdge: function (e) {\n\t\tvar leftTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e, leftTri);\n\t\tvar rightTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\n\t\tvar vLeftTriOther = e.lNext().dest();\n\t\tif (this.isFrameVertex(vLeftTriOther)) return true;\n\t\tvar vRightTriOther = e.sym().lNext().dest();\n\t\tif (this.isFrameVertex(vRightTriOther)) return true;\n\t\treturn false;\n\t},\n\tmakeEdge: function (o, d) {\n\t\tvar q = QuadEdge.makeEdge(o, d);\n\t\tthis.quadEdges.add(q);\n\t\treturn q;\n\t},\n\tvisitTriangles: function (triVisitor, includeFrame) {\n\t\tthis.visitedKey++;\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this.startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\n\t\t\t\tif (triEdges !== null) triVisitor.visit(triEdges);\n\t\t\t}\n\t\t}\n\t},\n\tisFrameEdge: function (e) {\n\t\tif (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\n\t\treturn false;\n\t},\n\tisOnEdge: function (e, p) {\n\t\tthis.seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\n\t\tvar dist = this.seg.distance(p);\n\t\treturn dist < this.edgeCoincidenceTolerance;\n\t},\n\tgetEnvelope: function () {\n\t\treturn new Envelope(this.frameEnv);\n\t},\n\tcreateFrame: function (env) {\n\t\tvar deltaX = env.getWidth();\n\t\tvar deltaY = env.getHeight();\n\t\tvar offset = 0.0;\n\t\tif (deltaX > deltaY) {\n\t\t\toffset = deltaX * 10.0;\n\t\t} else {\n\t\t\toffset = deltaY * 10.0;\n\t\t}\n\t\tthis.frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\n\t\tthis.frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\n\t\tthis.frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\n\t\tthis.frameEnv = new Envelope(this.frameVertex[0].getCoordinate(), this.frameVertex[1].getCoordinate());\n\t\tthis.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate());\n\t},\n\tgetTriangleCoordinates: function (includeFrame) {\n\t\tvar visitor = new TriangleCoordinatesVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangles();\n\t},\n\tgetVertices: function (includeFrame) {\n\t\tvar vertices = new HashSet();\n\t\tfor (var i = this.quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\n\t\t\tvar vd = qe.dest();\n\t\t\tif (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\n\t\t}\n\t\treturn vertices;\n\t},\n\tfetchTriangleToVisit: function (edge, edgeStack, includeFrame, visitedEdges) {\n\t\tvar curr = edge;\n\t\tvar edgeCount = 0;\n\t\tvar isFrame = false;\n\t\tdo {\n\t\t\tthis.triEdges[edgeCount] = curr;\n\t\t\tif (this.isFrameEdge(curr)) isFrame = true;\n\t\t\tvar sym = curr.sym();\n\t\t\tif (!visitedEdges.contains(sym)) edgeStack.push(sym);\n\t\t\tvisitedEdges.add(curr);\n\t\t\tedgeCount++;\n\t\t\tcurr = curr.lNext();\n\t\t} while (curr !== edge);\n\t\tif (isFrame && !includeFrame) return null;\n\t\treturn this.triEdges;\n\t},\n\tgetEdges: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.quadEdges;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomFact = arguments[0];\n\t\t\tvar quadEdges = this.getPrimaryEdges(false);\n\t\t\tvar edges = new Array(quadEdges.size()).fill(null);\n\t\t\tvar i = 0;\n\t\t\tfor (var it = quadEdges.iterator(); it.hasNext(); ) {\n\t\t\t\tvar qe = it.next();\n\t\t\t\tedges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\n\t\t\t}\n\t\t\treturn geomFact.createMultiLineString(edges);\n\t\t}\n\t},\n\tgetVertexUniqueEdges: function (includeFrame) {\n\t\tvar edges = new ArrayList();\n\t\tvar visitedVertices = new HashSet();\n\t\tfor (var i = this.quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (!visitedVertices.contains(v)) {\n\t\t\t\tvisitedVertices.add(v);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(v)) {\n\t\t\t\t\tedges.add(qe);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar qd = qe.sym();\n\t\t\tvar vd = qd.orig();\n\t\t\tif (!visitedVertices.contains(vd)) {\n\t\t\t\tvisitedVertices.add(vd);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(vd)) {\n\t\t\t\t\tedges.add(qd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tgetTriangleEdges: function (includeFrame) {\n\t\tvar visitor = new TriangleEdgesListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleEdges();\n\t},\n\tgetPrimaryEdges: function (includeFrame) {\n\t\tthis.visitedKey++;\n\t\tvar edges = new ArrayList();\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this.startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar priQE = edge.getPrimary();\n\t\t\t\tif (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\n\t\t\t\tedgeStack.push(edge.oNext());\n\t\t\t\tedgeStack.push(edge.sym().oNext());\n\t\t\t\tvisitedEdges.add(edge);\n\t\t\t\tvisitedEdges.add(edge.sym());\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tdelete: function (e) {\n\t\tQuadEdge.splice(e, e.oPrev());\n\t\tQuadEdge.splice(e.sym(), e.sym().oPrev());\n\t\tvar eSym = e.sym();\n\t\tvar eRot = e.rot();\n\t\tvar eRotSym = e.rot().sym();\n\t\tthis.quadEdges.remove(e);\n\t\tthis.quadEdges.remove(eSym);\n\t\tthis.quadEdges.remove(eRot);\n\t\tthis.quadEdges.remove(eRotSym);\n\t\te.delete();\n\t\teSym.delete();\n\t\teRot.delete();\n\t\teRotSym.delete();\n\t},\n\tlocateFromEdge: function (v, startEdge) {\n\t\tvar iter = 0;\n\t\tvar maxIter = this.quadEdges.size();\n\t\tvar e = startEdge;\n\t\twhile (true) {\n\t\t\titer++;\n\t\t\tif (iter > maxIter) {\n\t\t\t\tthrow new LocateFailureException(e.toLineSegment());\n\t\t\t}\n\t\t\tif (v.equals(e.orig()) || v.equals(e.dest())) {\n\t\t\t\tbreak;\n\t\t\t} else if (v.rightOf(e)) {\n\t\t\t\te = e.sym();\n\t\t\t} else if (!v.rightOf(e.oNext())) {\n\t\t\t\te = e.oNext();\n\t\t\t} else if (!v.rightOf(e.dPrev())) {\n\t\t\t\te = e.dPrev();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn e;\n\t},\n\tgetTolerance: function () {\n\t\treturn this.tolerance;\n\t},\n\tgetVoronoiCellPolygons: function (geomFact) {\n\t\tthis.visitTriangles(new TriangleCircumcentreVisitor(), true);\n\t\tvar cells = new ArrayList();\n\t\tvar edges = this.getVertexUniqueEdges(false);\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tcells.add(this.getVoronoiCellPolygon(qe, geomFact));\n\t\t}\n\t\treturn cells;\n\t},\n\tgetVoronoiDiagram: function (geomFact) {\n\t\tvar vorCells = this.getVoronoiCellPolygons(geomFact);\n\t\treturn geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tvar triPtsList = this.getTriangleCoordinates(false);\n\t\tvar tris = new Array(triPtsList.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = triPtsList.iterator(); it.hasNext(); ) {\n\t\t\tvar triPt = it.next();\n\t\t\ttris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt), null);\n\t\t}\n\t\treturn geomFact.createGeometryCollection(tris);\n\t},\n\tinsertSite: function (v) {\n\t\tvar e = this.locate(v);\n\t\tif (v.equals(e.orig(), this.tolerance) || v.equals(e.dest(), this.tolerance)) {\n\t\t\treturn e;\n\t\t}\n\t\tvar base = this.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\treturn startEdge;\n\t},\n\tlocate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Vertex) {\n\t\t\t\tlet v = arguments[0];\n\t\t\t\treturn this.locator.locate(v);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.locator.locate(new Vertex(p));\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tvar e = this.locator.locate(new Vertex(p0));\n\t\t\tif (e === null) return null;\n\t\t\tvar base = e;\n\t\t\tif (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\n\t\t\tvar locEdge = base;\n\t\t\tdo {\n\t\t\t\tif (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\n\t\t\t\tlocEdge = locEdge.oNext();\n\t\t\t} while (locEdge !== base);\n\t\t\treturn null;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdgeSubdivision;\n\t}\n});\nQuadEdgeSubdivision.getTriangleEdges = function (startQE, triEdge) {\n\ttriEdge[0] = startQE;\n\ttriEdge[1] = triEdge[0].lNext();\n\ttriEdge[2] = triEdge[1].lNext();\n\tif (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\n};\nfunction TriangleCircumcentreVisitor() {}\nextend(TriangleCircumcentreVisitor.prototype, {\n\tvisit: function (triEdges) {\n\t\tvar a = triEdges[0].orig().getCoordinate();\n\t\tvar b = triEdges[1].orig().getCoordinate();\n\t\tvar c = triEdges[2].orig().getCoordinate();\n\t\tvar cc = Triangle.circumcentre(a, b, c);\n\t\tvar ccVertex = new Vertex(cc);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\ttriEdges[i].rot().setOrig(ccVertex);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleCircumcentreVisitor;\n\t}\n});\nfunction TriangleEdgesListVisitor() {\n\tthis.triList = new ArrayList();\n}\nextend(TriangleEdgesListVisitor.prototype, {\n\tgetTriangleEdges: function () {\n\t\treturn this.triList;\n\t},\n\tvisit: function (triEdges) {\n\t\tthis.triList.add(triEdges.clone());\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleEdgesListVisitor;\n\t}\n});\nfunction TriangleVertexListVisitor() {\n\tthis.triList = new ArrayList();\n}\nextend(TriangleVertexListVisitor.prototype, {\n\tvisit: function (triEdges) {\n\t\tthis.triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\n\t},\n\tgetTriangleVertices: function () {\n\t\treturn this.triList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleVertexListVisitor;\n\t}\n});\nfunction TriangleCoordinatesVisitor() {\n\tthis.coordList = new CoordinateList();\n\tthis.triCoords = new ArrayList();\n}\nextend(TriangleCoordinatesVisitor.prototype, {\n\tcheckTriangleSize: function (pts) {\n\t\tvar loc = \"\";\n\t\tif (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]); else {\n\t\t\tif (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\n\t\t}\n\t},\n\tvisit: function (triEdges) {\n\t\tthis.coordList.clear();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar v = triEdges[i].orig();\n\t\t\tthis.coordList.add(v.getCoordinate());\n\t\t}\n\t\tif (this.coordList.size() > 0) {\n\t\t\tthis.coordList.closeRing();\n\t\t\tvar pts = this.coordList.toCoordinateArray();\n\t\t\tif (pts.length !== 4) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.triCoords.add(pts);\n\t\t}\n\t},\n\tgetTriangles: function () {\n\t\treturn this.triCoords;\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleCoordinatesVisitor;\n\t}\n});\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nexport default function Segment() {\n\tthis.ls = null;\n\tthis.data = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis.ls = new LineSegment(p0, p1);\n\t} else if (arguments.length === 3) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], data = arguments[2];\n\t\tthis.ls = new LineSegment(p0, p1);\n\t\tthis.data = data;\n\t} else if (arguments.length === 6) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\n\t} else if (arguments.length === 7) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5], data = arguments[6];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data);\n\t}\n}\nextend(Segment.prototype, {\n\tgetLineSegment: function () {\n\t\treturn this.ls;\n\t},\n\tgetEndZ: function () {\n\t\tvar p = this.ls.getCoordinate(1);\n\t\treturn p.z;\n\t},\n\tgetStartZ: function () {\n\t\tvar p = this.ls.getCoordinate(0);\n\t\treturn p.z;\n\t},\n\tintersection: function (s) {\n\t\treturn this.ls.intersection(s.getLineSegment());\n\t},\n\tgetStart: function () {\n\t\treturn this.ls.getCoordinate(0);\n\t},\n\tgetEnd: function () {\n\t\treturn this.ls.getCoordinate(1);\n\t},\n\tgetEndY: function () {\n\t\tvar p = this.ls.getCoordinate(1);\n\t\treturn p.y;\n\t},\n\tgetStartX: function () {\n\t\tvar p = this.ls.getCoordinate(0);\n\t\treturn p.x;\n\t},\n\tequalsTopo: function (s) {\n\t\treturn this.ls.equalsTopo(s.getLineSegment());\n\t},\n\tgetStartY: function () {\n\t\tvar p = this.ls.getCoordinate(0);\n\t\treturn p.y;\n\t},\n\tsetData: function (data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function () {\n\t\treturn this.data;\n\t},\n\tgetEndX: function () {\n\t\tvar p = this.ls.getCoordinate(1);\n\t\treturn p.x;\n\t},\n\ttoString: function () {\n\t\treturn this.ls.toString();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Segment;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function KdNodeVisitor() {}\nextend(KdNodeVisitor.prototype, {\n\tvisit: function (node) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdNodeVisitor;\n\t}\n});\n","import Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nexport default function KdNode() {\n\tthis.p = null;\n\tthis.data = null;\n\tthis.left = null;\n\tthis.right = null;\n\tthis.count = null;\n\tif (arguments.length === 2) {\n\t\tlet p = arguments[0], data = arguments[1];\n\t\tthis.p = new Coordinate(p);\n\t\tthis.left = null;\n\t\tthis.right = null;\n\t\tthis.count = 1;\n\t\tthis.data = data;\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], data = arguments[2];\n\t\tthis.p = new Coordinate(_x, _y);\n\t\tthis.left = null;\n\t\tthis.right = null;\n\t\tthis.count = 1;\n\t\tthis.data = data;\n\t}\n}\nextend(KdNode.prototype, {\n\tisRepeated: function () {\n\t\treturn this.count > 1;\n\t},\n\tgetRight: function () {\n\t\treturn this.right;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.p;\n\t},\n\tsetLeft: function (_left) {\n\t\tthis.left = _left;\n\t},\n\tgetX: function () {\n\t\treturn this.p.x;\n\t},\n\tgetData: function () {\n\t\treturn this.data;\n\t},\n\tgetCount: function () {\n\t\treturn this.count;\n\t},\n\tgetLeft: function () {\n\t\treturn this.left;\n\t},\n\tgetY: function () {\n\t\treturn this.p.y;\n\t},\n\tincrement: function () {\n\t\tthis.count = this.count + 1;\n\t},\n\tsetRight: function (_right) {\n\t\tthis.right = _right;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdNode;\n\t}\n});\n","import CoordinateList from '../../geom/CoordinateList';\nimport hasInterface from '../../../../../hasInterface';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport KdNodeVisitor from './KdNodeVisitor';\nimport Envelope from '../../geom/Envelope';\nimport List from '../../../../../java/util/List';\nimport KdNode from './KdNode';\nexport default function KdTree() {\n\tthis.root = null;\n\tthis.numberOfNodes = null;\n\tthis.tolerance = null;\n\tif (arguments.length === 0) {\n\t\tKdTree.call(this, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet tolerance = arguments[0];\n\t\tthis.tolerance = tolerance;\n\t}\n}\nextend(KdTree.prototype, {\n\tinsert: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn this.insert(p, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], data = arguments[1];\n\t\t\tif (this.root === null) {\n\t\t\t\tthis.root = new KdNode(p, data);\n\t\t\t\treturn this.root;\n\t\t\t}\n\t\t\tif (this.tolerance > 0) {\n\t\t\t\tvar matchNode = this.findBestMatchNode(p);\n\t\t\t\tif (matchNode !== null) {\n\t\t\t\t\tmatchNode.increment();\n\t\t\t\t\treturn matchNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.insertExact(p, data);\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet queryEnv = arguments[0];\n\t\t\tvar result = new ArrayList();\n\t\t\tthis.query(queryEnv, result);\n\t\t\treturn result;\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n\t\t\t\tlet queryEnv = arguments[0], result = arguments[1];\n\t\t\t\tthis.queryNode(this.root, queryEnv, true, {\n\t\t\t\t\tinterfaces_: function () {\n\t\t\t\t\t\treturn [KdNodeVisitor];\n\t\t\t\t\t},\n\t\t\t\t\tvisit: function (node) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n\t\t\t\tlet queryEnv = arguments[0], visitor = arguments[1];\n\t\t\t\tthis.queryNode(this.root, queryEnv, true, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tqueryNode: function (currentNode, queryEnv, odd, visitor) {\n\t\tif (currentNode === null) return null;\n\t\tvar min = null;\n\t\tvar max = null;\n\t\tvar discriminant = null;\n\t\tif (odd) {\n\t\t\tmin = queryEnv.getMinX();\n\t\t\tmax = queryEnv.getMaxX();\n\t\t\tdiscriminant = currentNode.getX();\n\t\t} else {\n\t\t\tmin = queryEnv.getMinY();\n\t\t\tmax = queryEnv.getMaxY();\n\t\t\tdiscriminant = currentNode.getY();\n\t\t}\n\t\tvar searchLeft = min < discriminant;\n\t\tvar searchRight = discriminant <= max;\n\t\tif (searchLeft) {\n\t\t\tthis.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\n\t\t}\n\t\tif (queryEnv.contains(currentNode.getCoordinate())) {\n\t\t\tvisitor.visit(currentNode);\n\t\t}\n\t\tif (searchRight) {\n\t\t\tthis.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\n\t\t}\n\t},\n\tfindBestMatchNode: function (p) {\n\t\tvar visitor = new BestMatchVisitor(p, this.tolerance);\n\t\tthis.query(visitor.queryEnvelope(), visitor);\n\t\treturn visitor.getNode();\n\t},\n\tisEmpty: function () {\n\t\tif (this.root === null) return true;\n\t\treturn false;\n\t},\n\tinsertExact: function (p, data) {\n\t\tvar currentNode = this.root;\n\t\tvar leafNode = this.root;\n\t\tvar isOddLevel = true;\n\t\tvar isLessThan = true;\n\t\twhile (currentNode !== null) {\n\t\t\tif (currentNode !== null) {\n\t\t\t\tvar isInTolerance = p.distance(currentNode.getCoordinate()) <= this.tolerance;\n\t\t\t\tif (isInTolerance) {\n\t\t\t\t\tcurrentNode.increment();\n\t\t\t\t\treturn currentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isOddLevel) {\n\t\t\t\tisLessThan = p.x < currentNode.getX();\n\t\t\t} else {\n\t\t\t\tisLessThan = p.y < currentNode.getY();\n\t\t\t}\n\t\t\tleafNode = currentNode;\n\t\t\tif (isLessThan) {\n\t\t\t\tcurrentNode = currentNode.getLeft();\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.getRight();\n\t\t\t}\n\t\t\tisOddLevel = !isOddLevel;\n\t\t}\n\t\tthis.numberOfNodes = this.numberOfNodes + 1;\n\t\tvar node = new KdNode(p, data);\n\t\tif (isLessThan) {\n\t\t\tleafNode.setLeft(node);\n\t\t} else {\n\t\t\tleafNode.setRight(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdTree;\n\t}\n});\nKdTree.toCoordinates = function () {\n\tif (arguments.length === 1) {\n\t\tlet kdnodes = arguments[0];\n\t\treturn KdTree.toCoordinates(kdnodes, false);\n\t} else if (arguments.length === 2) {\n\t\tlet kdnodes = arguments[0], includeRepeated = arguments[1];\n\t\tvar coord = new CoordinateList();\n\t\tfor (var it = kdnodes.iterator(); it.hasNext(); ) {\n\t\t\tvar node = it.next();\n\t\t\tvar count = includeRepeated ? node.getCount() : 1;\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tcoord.add(node.getCoordinate(), true);\n\t\t\t}\n\t\t}\n\t\treturn coord.toCoordinateArray();\n\t}\n};\nfunction BestMatchVisitor() {\n\tthis.tolerance = null;\n\tthis.matchNode = null;\n\tthis.matchDist = 0.0;\n\tthis.p = null;\n\tlet p = arguments[0], tolerance = arguments[1];\n\tthis.p = p;\n\tthis.tolerance = tolerance;\n}\nextend(BestMatchVisitor.prototype, {\n\tvisit: function (node) {\n\t\tvar dist = this.p.distance(node.getCoordinate());\n\t\tvar isInTolerance = dist <= this.tolerance;\n\t\tif (!isInTolerance) return null;\n\t\tvar update = false;\n\t\tif (this.matchNode === null || dist < this.matchDist || this.matchNode !== null && dist === this.matchDist && node.getCoordinate().compareTo(this.matchNode.getCoordinate()) < 1) update = true;\n\t\tif (update) {\n\t\t\tthis.matchNode = node;\n\t\t\tthis.matchDist = dist;\n\t\t}\n\t},\n\tqueryEnvelope: function () {\n\t\tvar queryEnv = new Envelope(this.p);\n\t\tqueryEnv.expandBy(this.tolerance);\n\t\treturn queryEnv;\n\t},\n\tgetNode: function () {\n\t\treturn this.matchNode;\n\t},\n\tinterfaces_: function () {\n\t\treturn [KdNodeVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn BestMatchVisitor;\n\t}\n});\nKdTree.BestMatchVisitor = BestMatchVisitor;\n","import GeometryFactory from '../geom/GeometryFactory';\nimport NonEncroachingSplitPointFinder from './NonEncroachingSplitPointFinder';\nimport ConstraintVertex from './ConstraintVertex';\nimport Coordinate from '../geom/Coordinate';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LastFoundQuadEdgeLocator from './quadedge/LastFoundQuadEdgeLocator';\nimport Segment from './Segment';\nimport ConvexHull from '../algorithm/ConvexHull';\nimport KdTree from '../index/kdtree/KdTree';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default function ConformingDelaunayTriangulator() {\n\tthis.initialVertices = null;\n\tthis.segVertices = null;\n\tthis.segments = new ArrayList();\n\tthis.subdiv = null;\n\tthis.incDel = null;\n\tthis.convexHull = null;\n\tthis.splitFinder = new NonEncroachingSplitPointFinder();\n\tthis.kdt = null;\n\tthis.vertexFactory = null;\n\tthis.computeAreaEnv = null;\n\tthis.splitPt = null;\n\tthis.tolerance = null;\n\tlet initialVertices = arguments[0], tolerance = arguments[1];\n\tthis.initialVertices = new ArrayList(initialVertices);\n\tthis.tolerance = tolerance;\n\tthis.kdt = new KdTree(tolerance);\n}\nextend(ConformingDelaunayTriangulator.prototype, {\n\tgetInitialVertices: function () {\n\t\treturn this.initialVertices;\n\t},\n\tgetKDT: function () {\n\t\treturn this.kdt;\n\t},\n\tenforceConstraints: function () {\n\t\tthis.addConstraintVertices();\n\t\tvar count = 0;\n\t\tvar splits = 0;\n\t\tdo {\n\t\t\tsplits = this.enforceGabriel(this.segments);\n\t\t\tcount++;\n\t\t} while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\n\t},\n\tinsertSites: function (vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tgetVertexFactory: function () {\n\t\treturn this.vertexFactory;\n\t},\n\tgetPointArray: function () {\n\t\tvar pts = new Array(this.initialVertices.size() + this.segVertices.size()).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this.initialVertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\tfor (var i2 = this.segVertices.iterator(); i2.hasNext(); ) {\n\t\t\tvar v = i2.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\treturn pts;\n\t},\n\tsetConstraints: function (segments, segVertices) {\n\t\tthis.segments = segments;\n\t\tthis.segVertices = segVertices;\n\t},\n\tcomputeConvexHull: function () {\n\t\tvar fact = new GeometryFactory();\n\t\tvar coords = this.getPointArray();\n\t\tvar hull = new ConvexHull(coords, fact);\n\t\tthis.convexHull = hull.getConvexHull();\n\t},\n\taddConstraintVertices: function () {\n\t\tthis.computeConvexHull();\n\t\tthis.insertSites(this.segVertices);\n\t},\n\tfindNonGabrielPoint: function (seg) {\n\t\tvar p = seg.getStart();\n\t\tvar q = seg.getEnd();\n\t\tvar midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\n\t\tvar segRadius = p.distance(midPt);\n\t\tvar env = new Envelope(midPt);\n\t\tenv.expandBy(segRadius);\n\t\tvar result = this.kdt.query(env);\n\t\tvar closestNonGabriel = null;\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tfor (var i = result.iterator(); i.hasNext(); ) {\n\t\t\tvar nextNode = i.next();\n\t\t\tvar testPt = nextNode.getCoordinate();\n\t\t\tif (testPt.equals2D(p) || testPt.equals2D(q)) continue;\n\t\t\tvar testRadius = midPt.distance(testPt);\n\t\t\tif (testRadius < segRadius) {\n\t\t\t\tvar testDist = testRadius;\n\t\t\t\tif (closestNonGabriel === null || testDist < minDist) {\n\t\t\t\t\tclosestNonGabriel = testPt;\n\t\t\t\t\tminDist = testDist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn closestNonGabriel;\n\t},\n\tgetConstraintSegments: function () {\n\t\treturn this.segments;\n\t},\n\tsetSplitPointFinder: function (splitFinder) {\n\t\tthis.splitFinder = splitFinder;\n\t},\n\tgetConvexHull: function () {\n\t\treturn this.convexHull;\n\t},\n\tgetTolerance: function () {\n\t\treturn this.tolerance;\n\t},\n\tenforceGabriel: function (segsToInsert) {\n\t\tvar newSegments = new ArrayList();\n\t\tvar splits = 0;\n\t\tvar segsToRemove = new ArrayList();\n\t\tfor (var i = segsToInsert.iterator(); i.hasNext(); ) {\n\t\t\tvar seg = i.next();\n\t\t\tvar encroachPt = this.findNonGabrielPoint(seg);\n\t\t\tif (encroachPt === null) continue;\n\t\t\tthis.splitPt = this.splitFinder.findSplitPoint(seg, encroachPt);\n\t\t\tvar splitVertex = this.createVertex(this.splitPt, seg);\n\t\t\tvar insertedVertex = this.insertSite(splitVertex);\n\t\t\tvar s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\n\t\t\tvar s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\n\t\t\tnewSegments.add(s1);\n\t\t\tnewSegments.add(s2);\n\t\t\tsegsToRemove.add(seg);\n\t\t\tsplits = splits + 1;\n\t\t}\n\t\tsegsToInsert.removeAll(segsToRemove);\n\t\tsegsToInsert.addAll(newSegments);\n\t\treturn splits;\n\t},\n\tcreateVertex: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar v = null;\n\t\t\tif (this.vertexFactory !== null) v = this.vertexFactory.createVertex(p, null); else v = new ConstraintVertex(p);\n\t\t\treturn v;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], seg = arguments[1];\n\t\t\tvar v = null;\n\t\t\tif (this.vertexFactory !== null) v = this.vertexFactory.createVertex(p, seg); else v = new ConstraintVertex(p);\n\t\t\tv.setOnConstraint(true);\n\t\t\treturn v;\n\t\t}\n\t},\n\tgetSubdivision: function () {\n\t\treturn this.subdiv;\n\t},\n\tcomputeBoundingBox: function () {\n\t\tvar vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this.initialVertices);\n\t\tvar segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this.segVertices);\n\t\tvar allPointsEnv = new Envelope(vertexEnv);\n\t\tallPointsEnv.expandToInclude(segEnv);\n\t\tvar deltaX = allPointsEnv.getWidth() * 0.2;\n\t\tvar deltaY = allPointsEnv.getHeight() * 0.2;\n\t\tvar delta = Math.max(deltaX, deltaY);\n\t\tthis.computeAreaEnv = new Envelope(allPointsEnv);\n\t\tthis.computeAreaEnv.expandBy(delta);\n\t},\n\tsetVertexFactory: function (vertexFactory) {\n\t\tthis.vertexFactory = vertexFactory;\n\t},\n\tformInitialDelaunay: function () {\n\t\tthis.computeBoundingBox();\n\t\tthis.subdiv = new QuadEdgeSubdivision(this.computeAreaEnv, this.tolerance);\n\t\tthis.subdiv.setLocator(new LastFoundQuadEdgeLocator(this.subdiv));\n\t\tthis.incDel = new IncrementalDelaunayTriangulator(this.subdiv);\n\t\tthis.insertSites(this.initialVertices);\n\t},\n\tinsertSite: function () {\n\t\tif (arguments[0] instanceof ConstraintVertex) {\n\t\t\tlet v = arguments[0];\n\t\t\tvar kdnode = this.kdt.insert(v.getCoordinate(), v);\n\t\t\tif (!kdnode.isRepeated()) {\n\t\t\t\tthis.incDel.insertSite(v);\n\t\t\t} else {\n\t\t\t\tvar snappedV = kdnode.getData();\n\t\t\t\tsnappedV.merge(v);\n\t\t\t\treturn snappedV;\n\t\t\t}\n\t\t\treturn v;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.insertSite(this.createVertex(p));\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConformingDelaunayTriangulator;\n\t}\n});\nConformingDelaunayTriangulator.computeVertexEnvelope = function (vertices) {\n\tvar env = new Envelope();\n\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\tvar v = i.next();\n\t\tenv.expandToInclude(v.getCoordinate());\n\t}\n\treturn env;\n};\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\n","import CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport extend from '../../../../extend';\nimport Vertex from './quadedge/Vertex';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default function DelaunayTriangulationBuilder() {\n\tthis.siteCoords = null;\n\tthis.tolerance = 0.0;\n\tthis.subdiv = null;\n}\nextend(DelaunayTriangulationBuilder.prototype, {\n\tcreate: function () {\n\t\tif (this.subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this.siteCoords);\n\t\tthis.subdiv = new QuadEdgeSubdivision(siteEnv, this.tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this.subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis.tolerance = tolerance;\n\t},\n\tsetSites: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tgetEdges: function (geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this.subdiv;\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getTriangles(geomFact);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DelaunayTriangulationBuilder;\n\t}\n});\nDelaunayTriangulationBuilder.extractUniqueCoordinates = function (geom) {\n\tif (geom === null) return new CoordinateList();\n\tvar coords = geom.getCoordinates();\n\treturn DelaunayTriangulationBuilder.unique(coords);\n};\nDelaunayTriangulationBuilder.envelope = function (coords) {\n\tvar env = new Envelope();\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\tvar coord = i.next();\n\t\tenv.expandToInclude(coord);\n\t}\n\treturn env;\n};\nDelaunayTriangulationBuilder.unique = function (coords) {\n\tvar coordsCopy = CoordinateArrays.copyDeep(coords);\n\tArrays.sort(coordsCopy);\n\tvar coordList = new CoordinateList(coordsCopy, false);\n\treturn coordList;\n};\nDelaunayTriangulationBuilder.toVertices = function (coords) {\n\tvar verts = new ArrayList();\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\tvar coord = i.next();\n\t\tverts.add(new Vertex(coord));\n\t}\n\treturn verts;\n};\n","import ConformingDelaunayTriangulator from './ConformingDelaunayTriangulator';\nimport ConstraintVertex from './ConstraintVertex';\nimport extend from '../../../../extend';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport Segment from './Segment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function ConformingDelaunayTriangulationBuilder() {\n\tthis.siteCoords = null;\n\tthis.constraintLines = null;\n\tthis.tolerance = 0.0;\n\tthis.subdiv = null;\n\tthis.constraintVertexMap = new TreeMap();\n}\nextend(ConformingDelaunayTriangulationBuilder.prototype, {\n\tcreateSiteVertices: function (coords) {\n\t\tvar verts = new ArrayList();\n\t\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\t\tvar coord = i.next();\n\t\t\tif (this.constraintVertexMap.containsKey(coord)) continue;\n\t\t\tverts.add(new ConstraintVertex(coord));\n\t\t}\n\t\treturn verts;\n\t},\n\tcreate: function () {\n\t\tif (this.subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\n\t\tvar segments = new ArrayList();\n\t\tif (this.constraintLines !== null) {\n\t\t\tsiteEnv.expandToInclude(this.constraintLines.getEnvelopeInternal());\n\t\t\tthis.createVertices(this.constraintLines);\n\t\t\tsegments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this.constraintLines);\n\t\t}\n\t\tvar sites = this.createSiteVertices(this.siteCoords);\n\t\tvar cdt = new ConformingDelaunayTriangulator(sites, this.tolerance);\n\t\tcdt.setConstraints(segments, new ArrayList(this.constraintVertexMap.values()));\n\t\tcdt.formInitialDelaunay();\n\t\tcdt.enforceConstraints();\n\t\tthis.subdiv = cdt.getSubdivision();\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis.tolerance = tolerance;\n\t},\n\tsetConstraints: function (constraintLines) {\n\t\tthis.constraintLines = constraintLines;\n\t},\n\tsetSites: function (geom) {\n\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t},\n\tgetEdges: function (geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this.subdiv;\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getTriangles(geomFact);\n\t},\n\tcreateVertices: function (geom) {\n\t\tvar coords = geom.getCoordinates();\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tvar v = new ConstraintVertex(coords[i]);\n\t\t\tthis.constraintVertexMap.put(coords[i], v);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConformingDelaunayTriangulationBuilder;\n\t}\n});\nConformingDelaunayTriangulationBuilder.createConstraintSegments = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tvar constraintSegs = new ArrayList();\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar line = i.next();\n\t\t\tConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\n\t\t}\n\t\treturn constraintSegs;\n\t} else if (arguments.length === 2) {\n\t\tlet line = arguments[0], constraintSegs = arguments[1];\n\t\tvar coords = line.getCoordinates();\n\t\tfor (var i = 1; i < coords.length; i++) {\n\t\t\tconstraintSegs.add(new Segment(coords[i - 1], coords[i]));\n\t\t}\n\t}\n};\n","import Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport extend from '../../../../extend';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function VoronoiDiagramBuilder() {\n\tthis.siteCoords = null;\n\tthis.tolerance = 0.0;\n\tthis.subdiv = null;\n\tthis.clipEnv = null;\n\tthis.diagramEnv = null;\n}\nextend(VoronoiDiagramBuilder.prototype, {\n\tcreate: function () {\n\t\tif (this.subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\n\t\tthis.diagramEnv = siteEnv;\n\t\tvar expandBy = Math.max(this.diagramEnv.getWidth(), this.diagramEnv.getHeight());\n\t\tthis.diagramEnv.expandBy(expandBy);\n\t\tif (this.clipEnv !== null) this.diagramEnv.expandToInclude(this.clipEnv);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this.siteCoords);\n\t\tthis.subdiv = new QuadEdgeSubdivision(siteEnv, this.tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this.subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tgetDiagram: function (geomFact) {\n\t\tthis.create();\n\t\tvar polys = this.subdiv.getVoronoiDiagram(geomFact);\n\t\treturn VoronoiDiagramBuilder.clipGeometryCollection(polys, this.diagramEnv);\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis.tolerance = tolerance;\n\t},\n\tsetSites: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tsetClipEnvelope: function (clipEnv) {\n\t\tthis.clipEnv = clipEnv;\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this.subdiv;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn VoronoiDiagramBuilder;\n\t}\n});\nVoronoiDiagramBuilder.clipGeometryCollection = function (geom, clipEnv) {\n\tvar clipPoly = geom.getFactory().toGeometry(clipEnv);\n\tvar clipped = new ArrayList();\n\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\tvar g = geom.getGeometryN(i);\n\t\tvar result = null;\n\t\tif (clipEnv.contains(g.getEnvelopeInternal())) result = g; else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n\t\t\tresult = clipPoly.intersection(g);\n\t\t\tresult.setUserData(g.getUserData());\n\t\t}\n\t\tif (result !== null && !result.isEmpty()) {\n\t\t\tclipped.add(result);\n\t\t}\n\t}\n\treturn geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\n};\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill(value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object');\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike;\n    },\n    writable: true\n  });\n}\n","Number.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n}\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n}\n\nNumber.parseFloat = Number.parseFloat || parseFloat\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n}\n","Math.trunc = Math.trunc || function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\n","export default function (target, source) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) target[key] = source[key]\n  }\n}\n","export default function (c, p) {\n  c.prototype = Object.create(p.prototype)\n  c.prototype.constructor = c\n}\n","export default function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n}\n","import Arrays from './Arrays'\nimport ArrayList from './ArrayList'\n\nconst Collections = {\n  reverseOrder: function () {\n    return {\n      compare (a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function (l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function (l, c) {\n    const a = l.toArray()\n    if (c) {\n      Arrays.sort(a, c)\n    } else {\n      Arrays.sort(a)\n    }\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function (o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","import WKTWriter from './io/WKTWriter';\nimport GeometryCollectionMapper from './geom/util/GeometryCollectionMapper';\nimport IsValidOp from './operation/valid/IsValidOp';\nimport InteriorPointArea from './algorithm/InteriorPointArea';\nimport UnaryUnionOp from './operation/union/UnaryUnionOp';\nimport UnionOp from './operation/union/UnionOp';\nimport SnapIfNeededOverlayOp from './operation/overlay/snap/SnapIfNeededOverlayOp';\nimport InteriorPointLine from './algorithm/InteriorPointLine';\nimport IsSimpleOp from './operation/IsSimpleOp';\nimport BufferOp from './operation/buffer/BufferOp';\nimport ConvexHull from './algorithm/ConvexHull';\nimport Centroid from './algorithm/Centroid';\nimport Comparable from '../../../java/lang/Comparable';\nimport RelateOp from './operation/relate/RelateOp';\nimport InteriorPointPoint from './algorithm/InteriorPointPoint';\nimport Cloneable from '../../../java/lang/Cloneable';\nimport Serializable from '../../../java/io/Serializable';\nimport DistanceOp from './operation/distance/DistanceOp';\nimport Envelope from './geom/Envelope';\nimport RectangleContains from './operation/predicate/RectangleContains';\nimport Assert from './util/Assert';\nimport RectangleIntersects from './operation/predicate/RectangleIntersects';\nimport OverlayOp from './operation/overlay/OverlayOp';\n\nimport Geometry from './geom/Geometry';\nimport GeometryCollection from './geom/GeometryCollection';\n\nimport extend from '../../../extend';\n\nextend(Geometry.prototype, {\n\tequalsTopo: function (g) {\n\t\tif (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false;\n\t\treturn RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension());\n\t},\n\tunion: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn UnaryUnionOp.union(this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\treturn UnionOp.union(this, other);\n\t\t}\n\t},\n\tisValid: function () {\n\t\treturn IsValidOp.isValid(this);\n\t},\n\tintersection: function (other) {\n\t\tif (this.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, this, other, this.factory);\n\t\tif (this.isGeometryCollection()) {\n\t\t\tvar g2 = other;\n\t\t\treturn GeometryCollectionMapper.map(this, {\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [MapOp];\n\t\t\t\t},\n\t\t\t\tmap: function (g) {\n\t\t\t\t\treturn g.intersection(g2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.INTERSECTION);\n\t},\n\tcovers: function (g) {\n\t\treturn RelateOp.covers(this, g);\n\t},\n\tcoveredBy: function (g) {\n\t\treturn RelateOp.coveredBy(this, g);\n\t},\n\ttouches: function (g) {\n\t\treturn RelateOp.touches(this, g);\n\t},\n\tintersects: function (g) {\n\t\treturn RelateOp.intersects(this, g);\n\t},\n\twithin: function (g) {\n\t\treturn RelateOp.within(this, g);\n\t},\n\toverlaps: function (g) {\n\t\treturn RelateOp.overlaps(this, g);\n\t},\n\tdisjoint: function (g) {\n\t\treturn RelateOp.disjoint(this, g);\n\t},\n\tcrosses: function (g) {\n\t\treturn RelateOp.crosses(this, g);\n\t},\n\tbuffer: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\treturn BufferOp.bufferOp(this, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1];\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1], endCapStyle = arguments[2];\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle);\n\t\t}\n\t},\n\tconvexHull: function () {\n\t\treturn new ConvexHull(this).getConvexHull();\n\t},\n\trelate: function (...args) {\n\t\treturn RelateOp.relate(this, ...args);\n\t},\n\tgetCentroid: function () {\n\t\tif (this.isEmpty()) return this.factory.createPoint();\n\t\tvar centPt = Centroid.getCentroid(this);\n\t\treturn this.createPointFromInternalCoord(centPt, this);\n\t},\n\tgetInteriorPoint: function () {\n\t\tif (this.isEmpty()) return this.factory.createPoint();\n\t\tvar interiorPt = null;\n\t\tvar dim = this.getDimension();\n\t\tif (dim === 0) {\n\t\t\tvar intPt = new InteriorPointPoint(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else if (dim === 1) {\n\t\t\tvar intPt = new InteriorPointLine(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else {\n\t\t\tvar intPt = new InteriorPointArea(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t}\n\t\treturn this.createPointFromInternalCoord(interiorPt, this);\n\t},\n\tsymDifference: function (other) {\n\t\tif (this.isEmpty() || other.isEmpty()) {\n\t\t\tif (this.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, this, other, this.factory);\n\t\t\tif (this.isEmpty()) return other.copy();\n\t\t\tif (other.isEmpty()) return this.copy();\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.SYMDIFFERENCE);\n\t},\n\tcreatePointFromInternalCoord: function (coord, exemplar) {\n\t\texemplar.getPrecisionModel().makePrecise(coord);\n\t\treturn exemplar.getFactory().createPoint(coord);\n\t},\n\ttoText: function () {\n\t\tvar writer = new WKTWriter();\n\t\treturn writer.write(this);\n\t},\n\ttoString: function() {\n\t\tthis.toText();\n\t},\n\tcontains: function (g) {\n\t\treturn RelateOp.contains(this, g);\n\t},\n\tdifference: function (other) {\n\t\tif (this.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, this, other, this.factory);\n\t\tif (other.isEmpty()) return this.copy();\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.DIFFERENCE);\n\t},\n\tisSimple: function () {\n\t\tvar op = new IsSimpleOp(this);\n\t\treturn op.isSimple();\n\t},\n\tisWithinDistance: function (geom, distance) {\n\t\tvar envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());\n\t\tif (envDist > distance) return false;\n\t\treturn DistanceOp.isWithinDistance(this, geom, distance);\n\t},\n\tdistance: function (g) {\n\t\treturn DistanceOp.distance(this, g);\n\t},\n\tisEquivalentClass: function (other) {\n\t\treturn this.getClass() === other.getClass();\n\t}\n})\n","import './Array'\nimport './Number'\nimport './Math'\n\nimport * as geom from './org/locationtech/jts/geom'\nimport * as algorithm from './org/locationtech/jts/algorithm'\nimport * as densify from './org/locationtech/jts/densify'\nimport * as dissolve from './org/locationtech/jts/dissolve'\nimport * as geomgraph from './org/locationtech/jts/geomgraph'\nimport * as index from './org/locationtech/jts/index'\nimport * as io from './org/locationtech/jts/io'\nimport * as noding from './org/locationtech/jts/noding'\nimport * as operation from './org/locationtech/jts/operation'\nimport * as precision from './org/locationtech/jts/precision'\nimport * as simplify from './org/locationtech/jts/simplify'\nimport * as triangulate from './org/locationtech/jts/triangulate'\n\nimport './org/locationtech/jts/monkey'\n\nconst version = 'npm_package_version (git_hash)'\nexport {\n  version,\n  algorithm,\n  densify,\n  dissolve,\n  geom,\n  geomgraph,\n  index,\n  io,\n  noding,\n  operation,\n  precision,\n  simplify,\n  triangulate\n}\n"]}